# coding: utf-8

"""
    vectorize.sh API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pyvectorize.models.indexes_info_get200_response_result_config_params_vectors_value import IndexesInfoGet200ResponseResultConfigParamsVectorsValue

class TestIndexesInfoGet200ResponseResultConfigParamsVectorsValue(unittest.TestCase):
    """IndexesInfoGet200ResponseResultConfigParamsVectorsValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndexesInfoGet200ResponseResultConfigParamsVectorsValue:
        """Test IndexesInfoGet200ResponseResultConfigParamsVectorsValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndexesInfoGet200ResponseResultConfigParamsVectorsValue`
        """
        model = IndexesInfoGet200ResponseResultConfigParamsVectorsValue()
        if include_optional:
            return IndexesInfoGet200ResponseResultConfigParamsVectorsValue(
                datatype = None,
                distance = '',
                hnsw_config = None,
                on_disk = None,
                quantization_config = None,
                size = 1.337
            )
        else:
            return IndexesInfoGet200ResponseResultConfigParamsVectorsValue(
                distance = '',
                size = 1.337,
        )
        """

    def testIndexesInfoGet200ResponseResultConfigParamsVectorsValue(self):
        """Test IndexesInfoGet200ResponseResultConfigParamsVectorsValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
