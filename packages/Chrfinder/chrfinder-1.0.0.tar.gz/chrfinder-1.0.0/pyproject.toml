[build-system] 
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "Chrfinder"
version = "1.0.0"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
description = "The package find the best chromatography based on properties of the mixture"
dependencies = [
    "pandas",
    "pubchempy",
    "tk",
]
authors = [
    {name = "Anthony Verhoeven", email = "anthony.verhoeven@epfl.ch"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]


[project.urls]
source = "https://github.com/Averhv/Chrfinder"
tracker = "https://github.com/Averhv/Chrfinder/issues"


[project.optional-dependencies]
test = [
    "hypothesis",
    "pytest",
    "pytest-cov",
    "tox",
    "genbadge[coverage]",
]
doc = [
    "furo",
    "myst-parser",
    "sphinx>=5",
    "sphinx-copybutton",
]

[tool.hatch.version]
path = "src/Chrfinder/__init__.py"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["src/Chrfinder"]
command_line = "-m pytest tests/test_complete.py"
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.coverage.paths]
source = [
    "src/",
    "/jenkins/build/*/src",
    "c:\\Averhv\\src",
    ]

[tool.hatch.build.targets.wheel]
packages = ["src/Chrfinder"]
