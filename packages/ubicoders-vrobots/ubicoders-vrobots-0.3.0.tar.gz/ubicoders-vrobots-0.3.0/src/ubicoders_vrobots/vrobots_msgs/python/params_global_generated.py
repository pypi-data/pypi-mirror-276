# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PARAM_GlobalMsg(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PARAM_GlobalMsg()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPARAM_GlobalMsg(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def PARAM_GlobalMsgBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x50\x47\x4C\x4F", size_prefixed=size_prefixed)

    # PARAM_GlobalMsg
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PARAM_GlobalMsg
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PARAM_GlobalMsg
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # PARAM_GlobalMsg
    def Scene(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PARAM_GlobalMsg
    def CmdReportOnce(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PARAM_GlobalMsg
    def IsSigned(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PARAM_GlobalMsg
    def InputBreaker(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PARAM_GlobalMsg
    def PlayerMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PARAM_GlobalMsg
    def SetScene(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PARAM_GlobalMsg
    def SetSigniture(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PARAM_GlobalMsg
    def SetInputBreaker(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PARAM_GlobalMsg
    def SetPlayerMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def PARAM_GlobalMsgStart(builder):
    builder.StartObject(11)

def PARAM_GlobalMsgAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def PARAM_GlobalMsgAddTimestamp(builder, timestamp):
    builder.PrependFloat64Slot(1, timestamp, 0.0)

def PARAM_GlobalMsgAddScene(builder, scene):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(scene), 0)

def PARAM_GlobalMsgAddCmdReportOnce(builder, cmdReportOnce):
    builder.PrependInt32Slot(3, cmdReportOnce, 0)

def PARAM_GlobalMsgAddIsSigned(builder, isSigned):
    builder.PrependInt32Slot(4, isSigned, 0)

def PARAM_GlobalMsgAddInputBreaker(builder, inputBreaker):
    builder.PrependInt32Slot(5, inputBreaker, 0)

def PARAM_GlobalMsgAddPlayerMode(builder, playerMode):
    builder.PrependInt32Slot(6, playerMode, 0)

def PARAM_GlobalMsgAddSetScene(builder, setScene):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(setScene), 0)

def PARAM_GlobalMsgAddSetSigniture(builder, setSigniture):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(setSigniture), 0)

def PARAM_GlobalMsgAddSetInputBreaker(builder, setInputBreaker):
    builder.PrependInt32Slot(9, setInputBreaker, 0)

def PARAM_GlobalMsgAddSetPlayerMode(builder, setPlayerMode):
    builder.PrependInt32Slot(10, setPlayerMode, 0)

def PARAM_GlobalMsgEnd(builder):
    return builder.EndObject()



class PARAM_GlobalMsgT(object):

    # PARAM_GlobalMsgT
    def __init__(self):
        self.name = None  # type: str
        self.timestamp = 0.0  # type: float
        self.scene = None  # type: str
        self.cmdReportOnce = 0  # type: int
        self.isSigned = 0  # type: int
        self.inputBreaker = 0  # type: int
        self.playerMode = 0  # type: int
        self.setScene = None  # type: str
        self.setSigniture = None  # type: str
        self.setInputBreaker = 0  # type: int
        self.setPlayerMode = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        paramGlobalMsg = PARAM_GlobalMsg()
        paramGlobalMsg.Init(buf, pos)
        return cls.InitFromObj(paramGlobalMsg)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, paramGlobalMsg):
        x = PARAM_GlobalMsgT()
        x._UnPack(paramGlobalMsg)
        return x

    # PARAM_GlobalMsgT
    def _UnPack(self, paramGlobalMsg):
        if paramGlobalMsg is None:
            return
        self.name = paramGlobalMsg.Name()
        self.timestamp = paramGlobalMsg.Timestamp()
        self.scene = paramGlobalMsg.Scene()
        self.cmdReportOnce = paramGlobalMsg.CmdReportOnce()
        self.isSigned = paramGlobalMsg.IsSigned()
        self.inputBreaker = paramGlobalMsg.InputBreaker()
        self.playerMode = paramGlobalMsg.PlayerMode()
        self.setScene = paramGlobalMsg.SetScene()
        self.setSigniture = paramGlobalMsg.SetSigniture()
        self.setInputBreaker = paramGlobalMsg.SetInputBreaker()
        self.setPlayerMode = paramGlobalMsg.SetPlayerMode()

    # PARAM_GlobalMsgT
    def Pack(self, builder):
        if self.name is not None:
            name = builder.CreateString(self.name)
        if self.scene is not None:
            scene = builder.CreateString(self.scene)
        if self.setScene is not None:
            setScene = builder.CreateString(self.setScene)
        if self.setSigniture is not None:
            setSigniture = builder.CreateString(self.setSigniture)
        PARAM_GlobalMsgStart(builder)
        if self.name is not None:
            PARAM_GlobalMsgAddName(builder, name)
        PARAM_GlobalMsgAddTimestamp(builder, self.timestamp)
        if self.scene is not None:
            PARAM_GlobalMsgAddScene(builder, scene)
        PARAM_GlobalMsgAddCmdReportOnce(builder, self.cmdReportOnce)
        PARAM_GlobalMsgAddIsSigned(builder, self.isSigned)
        PARAM_GlobalMsgAddInputBreaker(builder, self.inputBreaker)
        PARAM_GlobalMsgAddPlayerMode(builder, self.playerMode)
        if self.setScene is not None:
            PARAM_GlobalMsgAddSetScene(builder, setScene)
        if self.setSigniture is not None:
            PARAM_GlobalMsgAddSetSigniture(builder, setSigniture)
        PARAM_GlobalMsgAddSetInputBreaker(builder, self.setInputBreaker)
        PARAM_GlobalMsgAddSetPlayerMode(builder, self.setPlayerMode)
        paramGlobalMsg = PARAM_GlobalMsgEnd(builder)
        return paramGlobalMsg


