openapi: 3.0.3
info:
  contact:
    name: SYS-IE-CDN
  description: Pulbic API of IE CDN Deploy Management System
  title: IE CDN DMS API
  version: 1.0.0
servers:
- description: Production read server at ROW
  url: http://gss-dms.byted.org/v1
- description: Production write server at ROW
  url: http://gss-cmp-api.byted.org/v1
- description: BOE read server
  url: http://gss-offline.byted.org/api/dms/v1
- description: BOE write server
  url: http://gss-offline.byted.org/api/cmp-api/v1
security:
- bearerAuth: []
tags:
- description: Deploy Resource related operations
  name: deploy resources
paths:
  /app-service/{appServiceName}/deploy-platform-resources:
    get:
      description: This operation returns the DeployPlatformResources data under the
        specified app-service for all pops
      operationId: get_deploy_platform_resources
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployPlatformResources'
          description: operation success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Get DeployPlatformResources under an app service for all pops
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
  /app-service/{appServiceName}/deploy-platform-resources/{popName}:
    get:
      description: This operation returns the DeployPlatformResources data under the
        specified app-service for the specified pop
      operationId: get_deploy_platform_resource_by_pop
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      - explode: false
        in: path
        name: popName
        required: true
        schema:
          example: fra1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployPlatformResource'
          description: operation success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Get DeployPlatformResources under an app service for the specific pop
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
  /app-service/{appServiceName}/deploy-resource-overlays:
    get:
      description: This operation returns the DeployResourceOverlays data under the
        specified app-service
      operationId: get_deploy_resource_overlays
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployResourceOverlays'
          description: ok
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Get DeployResourceOverlays for an app service
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
    patch:
      description: This operation patches the DeployResourceOverlays data under the
        specified app-service
      operationId: patch_deploy_resource_overlays
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployResourceOverlays'
        description: A DeployResourceOverlays json body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanResponse'
          description: operation success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: unauthorized request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Patch DeployResourceOverlays under an app service
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
    put:
      description: This operation overwrites the DeployResourceOverlays data under
        the specified app-service
      operationId: put_deploy_resource_overlays
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployResourceOverlays'
        description: A DeployResourceOverlays json body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanResponse'
          description: operation success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Put DeployResourceOverlays for an app service
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
  /app-service/{appServiceName}/deploy-resources:
    get:
      description: This operation returns the DeployResources data under the specified
        app-service
      operationId: get_deploy_resources
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployResources'
          description: operation success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Get DeployResources under an app service
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
    patch:
      description: This operation patches the DeployResources data under the specified
        app-service
      operationId: patch_deploy_resources
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployResources'
        description: A DeployResources json body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanResponse'
          description: operation success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: unauthorized request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Patch DeployResources under an app service
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
    put:
      description: This operation overwrites the DeployResources data under the specified
        app-service
      operationId: put_deploy_resources
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployResources'
        description: A DeployResources json body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanResponse'
          description: operation success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: unauthorized request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Put DeployResources for an app-service
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
  /app-service/{appServiceName}/deploy-resources/{popName}:
    get:
      description: This operation returns the DeployResources data under the specified
        app-service for the specified pop
      operationId: get_deploy_resources_by_pop
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      - explode: false
        in: path
        name: popName
        required: true
        schema:
          example: fra1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployResources'
          description: operation success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Get DeployResources under an app service for the specified pop
      tags:
      - deploy resources
      x-openapi-router-controller: openapi_server.controllers.deploy_resources_controller
  /app-service/{appServiceName}/deployment-details:
    get:
      description: This operation returns the Deployment detail list under the specified
        app-service
      operationId: get_deployment_details
      parameters:
      - explode: false
        in: path
        name: appServiceName
        required: true
        schema:
          example: demo-app.gss
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentDetail'
          description: operation success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: internal error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DingmanError'
          description: bad gateway
      summary: Get Deployment Details under an app service
      tags:
      - deploy details
      x-openapi-router-controller: openapi_server.controllers.deploy_details_controller
components:
  schemas:
    DingmanResponse:
      example:
        message: operation success
        status: success
      properties:
        status:
          description: status of the operation
          example: success
          title: status
          type: string
        message:
          description: message returned from the server
          example: operation success
          title: message
          type: string
      title: DingmanResponse
      type: object
    DingmanError:
      properties:
        status:
          description: status of the operation
          example: error
          title: status
          type: string
        error_type:
          description: type of the error
          example: Not Found
          title: error_type
          type: string
        error_code:
          description: internal error code
          example: 1005
          title: error_code
          type: integer
        reason:
          description: explanation message returned from the server
          example: resource not found
          title: reason
          type: string
      title: DingmanError
      type: object
    DeployResources:
      example:
        configs:
        - templates:
            template_files:
            - conf/server_template.conf
            values:
              key1: val1
              key2:
              - val2
              - val3
          name: server-conf
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          files:
          - conf/server.conf
          labels:
          - app:demo-app
          - version:v1.0.0
        - templates:
            template_files:
            - conf/server_template.conf
            values:
              key1: val1
              key2:
              - val2
              - val3
          name: server-conf
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          files:
          - conf/server.conf
          labels:
          - app:demo-app
          - version:v1.0.0
        persistent_volume_claims:
        - volume_mode: Filesystem
          request_resources:
            requests:
              memory: 256Mi
              cpu: "0.1"
            limits:
              memory: 512Mi
              cpu: "0.5"
          name: my-pvc
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          volume_name: my-pv
          storage_class_name: standard
          access_modes:
          - ReadWriteOnce
          labels:
          - app:demo-app
          - version:v1.0.0
        - volume_mode: Filesystem
          request_resources:
            requests:
              memory: 256Mi
              cpu: "0.1"
            limits:
              memory: 512Mi
              cpu: "0.5"
          name: my-pvc
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          volume_name: my-pv
          storage_class_name: standard
          access_modes:
          - ReadWriteOnce
          labels:
          - app:demo-app
          - version:v1.0.0
        ingress:
        - name: demo-app-ingress
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          rules:
          - paths:
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            name: foo-ingress-rule
            host: www.foo.com
          - paths:
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            name: foo-ingress-rule
            host: www.foo.com
          tls:
          - secret_name: app-secret
            hosts:
            - www.foo.com
            - www.bar.com
            name: foo-bar-ingress
          - secret_name: app-secret
            hosts:
            - www.foo.com
            - www.bar.com
            name: foo-bar-ingress
          labels:
          - app:demo-app
          - version:v1.0.0
        - name: demo-app-ingress
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          rules:
          - paths:
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            name: foo-ingress-rule
            host: www.foo.com
          - paths:
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            - path: /bar
              name: ingress-path-bar
              path_type: Exact
              backend:
                service:
                  port: 80
                  name: demo-app-service
            name: foo-ingress-rule
            host: www.foo.com
          tls:
          - secret_name: app-secret
            hosts:
            - www.foo.com
            - www.bar.com
            name: foo-bar-ingress
          - secret_name: app-secret
            hosts:
            - www.foo.com
            - www.bar.com
            name: foo-bar-ingress
          labels:
          - app:demo-app
          - version:v1.0.0
        custom_manifests:
        - file: downward-ats-prod-for-cdg1b.yaml
          name: downward-ats-prod
        - file: downward-ats-prod-for-cdg1b.yaml
          name: downward-ats-prod
        role_bindings:
        - kind: RoleBinding
          subjects:
          - kind: ServiceAccount
            name: default
            namespace: default
          - kind: ServiceAccount
            name: default
            namespace: default
          name: cm-writer
          namespace: namespace
          role_ref:
            kind: Role
            api_group: rbac.authorization.k8s.io
            name: cm-writer
          labels:
          - app:demo-app
          - version:v1.0.0
        - kind: RoleBinding
          subjects:
          - kind: ServiceAccount
            name: default
            namespace: default
          - kind: ServiceAccount
            name: default
            namespace: default
          name: cm-writer
          namespace: namespace
          role_ref:
            kind: Role
            api_group: rbac.authorization.k8s.io
            name: cm-writer
          labels:
          - app:demo-app
          - version:v1.0.0
        service_monitors:
        - namespace_selector:
            match_names:
            - default
            any: true
          endpoints:
          - honor_labels: true
            path: /metrics
            target_port: 8080
            relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            metric_relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            scheme: http
            port: 8080
            honor_timestamps: true
            scrape_timeout: 10s
            interval: 30s
            params:
              module:
              - http_2xx
          - honor_labels: true
            path: /metrics
            target_port: 8080
            relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            metric_relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            scheme: http
            port: 8080
            honor_timestamps: true
            scrape_timeout: 10s
            interval: 30s
            params:
              module:
              - http_2xx
          name: my-service-monitor
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          labels:
          - app:demo-app
          - version:v1.0.0
        - namespace_selector:
            match_names:
            - default
            any: true
          endpoints:
          - honor_labels: true
            path: /metrics
            target_port: 8080
            relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            metric_relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            scheme: http
            port: 8080
            honor_timestamps: true
            scrape_timeout: 10s
            interval: 30s
            params:
              module:
              - http_2xx
          - honor_labels: true
            path: /metrics
            target_port: 8080
            relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            metric_relabelings:
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            - regex: (.*)
              source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              action: replace
              separator: ;
              replacement: $1
              target_label: __metrics_path__
            scheme: http
            port: 8080
            honor_timestamps: true
            scrape_timeout: 10s
            interval: 30s
            params:
              module:
              - http_2xx
          name: my-service-monitor
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          labels:
          - app:demo-app
          - version:v1.0.0
        roles:
        - kind: Role
          name: cm-writer
          namespace: namespace
          rules:
          - api_groups: ""
            resources: configmaps
            verbs:
            - create
            - patch
            - update
            - get
          - api_groups: ""
            resources: configmaps
            verbs:
            - create
            - patch
            - update
            - get
          labels:
          - app:demo-app
          - version:v1.0.0
        - kind: Role
          name: cm-writer
          namespace: namespace
          rules:
          - api_groups: ""
            resources: configmaps
            verbs:
            - create
            - patch
            - update
            - get
          - api_groups: ""
            resources: configmaps
            verbs:
            - create
            - patch
            - update
            - get
          labels:
          - app:demo-app
          - version:v1.0.0
        workloads:
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          update_strategy:
            strategy_type: RollingUpdate
            rolling_update_config:
              partition: 2
              max_unavailable: 10% or 2
              max_surge: 10% or 2
          pod:
            service_account_name: edgesd-boe
            image_pull_secrets:
            - image-secret
            - image-secret
            termination_grace_period_seconds: 30
            volumes:
            - host_path:
                path: /data
                path_type: Directory
              projected:
                sources:
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                default_mode: 420
              name: demo-vol
              empty_dir:
                medium: Memory
                size_limit: 500Mi
              config_map:
                name: server config/secret
                optional: false
                default_mode: 400
              secret:
                name: server config/secret
                optional: false
                default_mode: 400
              persistent_volume_claim:
                read_only: false
                claim_name: demo-pvc
            - host_path:
                path: /data
                path_type: Directory
              projected:
                sources:
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                default_mode: 420
              name: demo-vol
              empty_dir:
                medium: Memory
                size_limit: 500Mi
              config_map:
                name: server config/secret
                optional: false
                default_mode: 400
              secret:
                name: server config/secret
                optional: false
                default_mode: 400
              persistent_volume_claim:
                read_only: false
                claim_name: demo-pvc
            annotations:
            - annotation-key1:val1
            - annotation-key2:val2
            topology_spread_constraints:
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              when_unsatisfiable: ScheduleAnyway
              max_skew: 1
              topologyKey: kubernetes.io/hostname
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              when_unsatisfiable: ScheduleAnyway
              max_skew: 1
              topologyKey: kubernetes.io/hostname
            labels:
            - app:demo-app
            - version:v1.0.0
            tolerations:
            - effect: NoSchedule
              toleration_seconds: 3600
              value: cache-node
              key: node-role.kubernetes.io/master
              operator: Equal
            - effect: NoSchedule
              toleration_seconds: 3600
              value: cache-node
              key: node-role.kubernetes.io/master
              operator: Equal
            dns_policy: ClusterFirst
            restart_policy: Always
            containers:
            - image: nginx:latest
              life_cycle:
                pre_stop:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
                post_start:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
              resources:
                requests:
                  memory: 256Mi
                  cpu: "0.1"
                limits:
                  memory: 512Mi
                  cpu: "0.5"
              volume_mounts:
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              env:
                name: SMS_KEYS_PATH_XM
                value: dms-secret
              ports:
              - container_port: 80
                protocol: TCP
                name: http
              - container_port: 80
                protocol: TCP
                name: http
              command:
              - python3
              args:
              - -m
              - openapi_server
              readiness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              env_from: Regular
              startup_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              image_pull_policy: IfNotPresent
              volume_devices:
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              name: http-server
              container_type: Init
              liveness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              security_context:
                capabilities:
                  add:
                  - NET_ADMIN
                  - SYS_TIME
                  drop:
                  - NET_ADMIN
                  - SYS_TIME
                run_as_group: 3000
                allow_privilege_escalation: false
                run_as_user: 1000
            - image: nginx:latest
              life_cycle:
                pre_stop:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
                post_start:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
              resources:
                requests:
                  memory: 256Mi
                  cpu: "0.1"
                limits:
                  memory: 512Mi
                  cpu: "0.5"
              volume_mounts:
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              env:
                name: SMS_KEYS_PATH_XM
                value: dms-secret
              ports:
              - container_port: 80
                protocol: TCP
                name: http
              - container_port: 80
                protocol: TCP
                name: http
              command:
              - python3
              args:
              - -m
              - openapi_server
              readiness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              env_from: Regular
              startup_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              image_pull_policy: IfNotPresent
              volume_devices:
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              name: http-server
              container_type: Init
              liveness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              security_context:
                capabilities:
                  add:
                  - NET_ADMIN
                  - SYS_TIME
                  drop:
                  - NET_ADMIN
                  - SYS_TIME
                run_as_group: 3000
                allow_privilege_escalation: false
                run_as_user: 1000
            scheduler_name: default-scheduler
            security_context:
              run_as_group: 3000
              run_as_user: 1000
              sysctls:
              - name: net.ipv4.ping_group_range
                value: 0 2147483647
              - name: net.ipv4.ping_group_range
                value: 0 2147483647
            affinity:
              pod_anti_affinity:
                preferred_during_scheduling_ignored_during_execution:
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                required_during_scheduling_ignored_during_execution:
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
              node_affinity:
                preferred_during_scheduling_ignored_during_execution:
                - preference:
                    match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  weight: 0
                - preference:
                    match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  weight: 0
                required_during_scheduling_ignored_during_execution:
                  node_selector_terms:
                  - match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  - match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              pod_affinity:
                preferred_during_scheduling_ignored_during_execution:
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                required_during_scheduling_ignored_during_execution:
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
          revision_history_limit: 3
          replicas: 1
          service_name: demo-app
          name: demo-app
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          volume_claim_templates:
          - volume_mode: Filesystem
            request_resources:
              requests:
                memory: 256Mi
                cpu: "0.1"
              limits:
                memory: 512Mi
                cpu: "0.5"
            name: my-pvc
            namespace: gitops-cdn-cache
            annotations:
            - annotation-key1:val1
            - annotation-key2:val2
            volume_name: my-pv
            storage_class_name: standard
            access_modes:
            - ReadWriteOnce
            labels:
            - app:demo-app
            - version:v1.0.0
          - volume_mode: Filesystem
            request_resources:
              requests:
                memory: 256Mi
                cpu: "0.1"
              limits:
                memory: 512Mi
                cpu: "0.5"
            name: my-pvc
            namespace: gitops-cdn-cache
            annotations:
            - annotation-key1:val1
            - annotation-key2:val2
            volume_name: my-pv
            storage_class_name: standard
            access_modes:
            - ReadWriteOnce
            labels:
            - app:demo-app
            - version:v1.0.0
          workload_type: Deployment
          labels:
          - app:demo-app
          - version:v1.0.0
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          update_strategy:
            strategy_type: RollingUpdate
            rolling_update_config:
              partition: 2
              max_unavailable: 10% or 2
              max_surge: 10% or 2
          pod:
            service_account_name: edgesd-boe
            image_pull_secrets:
            - image-secret
            - image-secret
            termination_grace_period_seconds: 30
            volumes:
            - host_path:
                path: /data
                path_type: Directory
              projected:
                sources:
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                default_mode: 420
              name: demo-vol
              empty_dir:
                medium: Memory
                size_limit: 500Mi
              config_map:
                name: server config/secret
                optional: false
                default_mode: 400
              secret:
                name: server config/secret
                optional: false
                default_mode: 400
              persistent_volume_claim:
                read_only: false
                claim_name: demo-pvc
            - host_path:
                path: /data
                path_type: Directory
              projected:
                sources:
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                - config_map:
                    name: dingman-gts
                  secret:
                    name: dingman-gts
                default_mode: 420
              name: demo-vol
              empty_dir:
                medium: Memory
                size_limit: 500Mi
              config_map:
                name: server config/secret
                optional: false
                default_mode: 400
              secret:
                name: server config/secret
                optional: false
                default_mode: 400
              persistent_volume_claim:
                read_only: false
                claim_name: demo-pvc
            annotations:
            - annotation-key1:val1
            - annotation-key2:val2
            topology_spread_constraints:
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              when_unsatisfiable: ScheduleAnyway
              max_skew: 1
              topologyKey: kubernetes.io/hostname
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              when_unsatisfiable: ScheduleAnyway
              max_skew: 1
              topologyKey: kubernetes.io/hostname
            labels:
            - app:demo-app
            - version:v1.0.0
            tolerations:
            - effect: NoSchedule
              toleration_seconds: 3600
              value: cache-node
              key: node-role.kubernetes.io/master
              operator: Equal
            - effect: NoSchedule
              toleration_seconds: 3600
              value: cache-node
              key: node-role.kubernetes.io/master
              operator: Equal
            dns_policy: ClusterFirst
            restart_policy: Always
            containers:
            - image: nginx:latest
              life_cycle:
                pre_stop:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
                post_start:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
              resources:
                requests:
                  memory: 256Mi
                  cpu: "0.1"
                limits:
                  memory: 512Mi
                  cpu: "0.5"
              volume_mounts:
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              env:
                name: SMS_KEYS_PATH_XM
                value: dms-secret
              ports:
              - container_port: 80
                protocol: TCP
                name: http
              - container_port: 80
                protocol: TCP
                name: http
              command:
              - python3
              args:
              - -m
              - openapi_server
              readiness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              env_from: Regular
              startup_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              image_pull_policy: IfNotPresent
              volume_devices:
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              name: http-server
              container_type: Init
              liveness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              security_context:
                capabilities:
                  add:
                  - NET_ADMIN
                  - SYS_TIME
                  drop:
                  - NET_ADMIN
                  - SYS_TIME
                run_as_group: 3000
                allow_privilege_escalation: false
                run_as_user: 1000
            - image: nginx:latest
              life_cycle:
                pre_stop:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
                post_start:
                  tcp_socket:
                    port: 30181
                    host: 127.0.0.1
                  http_get:
                    path: /show?domain=v19.tiktokcdn.com
                    http_headers:
                    - x-devsre-authorization:Bearer eyJhbGciOiJ
                    - content-type:application/json
                    scheme: HTTPS
                    port: 8888
                    host: gss-dns-agent.example.org
                  exec_command:
                  - /bin/showdown.sh
              resources:
                requests:
                  memory: 256Mi
                  cpu: "0.1"
                limits:
                  memory: 512Mi
                  cpu: "0.5"
              volume_mounts:
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              - path: /opt/server/conf
                read_only: true
                name: demo-vol
                sub_path: server.conf
              env:
                name: SMS_KEYS_PATH_XM
                value: dms-secret
              ports:
              - container_port: 80
                protocol: TCP
                name: http
              - container_port: 80
                protocol: TCP
                name: http
              command:
              - python3
              args:
              - -m
              - openapi_server
              readiness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              env_from: Regular
              startup_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              image_pull_policy: IfNotPresent
              volume_devices:
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              - name: demo-vol
                device_path: /dev/sda1
                bcache_nums: 4
              name: http-server
              container_type: Init
              liveness_probe:
                period_seconds: 60
                initial_delay_seconds: 600
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                failure_threshold: 3
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                timeout_seconds: 60
                exec_command:
                - /gss/dingman/bin/dingman-clit
                - -address
                - 127.0.0.1:30501
                - -command
                - show pop:all summary:health-status
              security_context:
                capabilities:
                  add:
                  - NET_ADMIN
                  - SYS_TIME
                  drop:
                  - NET_ADMIN
                  - SYS_TIME
                run_as_group: 3000
                allow_privilege_escalation: false
                run_as_user: 1000
            scheduler_name: default-scheduler
            security_context:
              run_as_group: 3000
              run_as_user: 1000
              sysctls:
              - name: net.ipv4.ping_group_range
                value: 0 2147483647
              - name: net.ipv4.ping_group_range
                value: 0 2147483647
            affinity:
              pod_anti_affinity:
                preferred_during_scheduling_ignored_during_execution:
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                required_during_scheduling_ignored_during_execution:
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
              node_affinity:
                preferred_during_scheduling_ignored_during_execution:
                - preference:
                    match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  weight: 0
                - preference:
                    match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  weight: 0
                required_during_scheduling_ignored_during_execution:
                  node_selector_terms:
                  - match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  - match_expressions:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    match_fields:
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              pod_affinity:
                preferred_during_scheduling_ignored_during_execution:
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                - weight: 6
                  pod_affinity_term:
                    label_selector:
                    - app:demo-app
                    - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                    topology_key: topology_key
                    namespaces:
                    - namespaces
                    - namespaces
                required_during_scheduling_ignored_during_execution:
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
                - label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
          revision_history_limit: 3
          replicas: 1
          service_name: demo-app
          name: demo-app
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          volume_claim_templates:
          - volume_mode: Filesystem
            request_resources:
              requests:
                memory: 256Mi
                cpu: "0.1"
              limits:
                memory: 512Mi
                cpu: "0.5"
            name: my-pvc
            namespace: gitops-cdn-cache
            annotations:
            - annotation-key1:val1
            - annotation-key2:val2
            volume_name: my-pv
            storage_class_name: standard
            access_modes:
            - ReadWriteOnce
            labels:
            - app:demo-app
            - version:v1.0.0
          - volume_mode: Filesystem
            request_resources:
              requests:
                memory: 256Mi
                cpu: "0.1"
              limits:
                memory: 512Mi
                cpu: "0.5"
            name: my-pvc
            namespace: gitops-cdn-cache
            annotations:
            - annotation-key1:val1
            - annotation-key2:val2
            volume_name: my-pv
            storage_class_name: standard
            access_modes:
            - ReadWriteOnce
            labels:
            - app:demo-app
            - version:v1.0.0
          workload_type: Deployment
          labels:
          - app:demo-app
          - version:v1.0.0
        service_accounts:
        - name: default
          namespace: system
        - name: default
          namespace: system
        services:
        - external_ips:
          - 1.1.1.1
          - 2.2.2.2
          service_type: ClusterIP
          name: demo-app
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          ports:
          - target_port: 8080
            protocol: TCP
            port: 80
            name: http
            app_protocol: HTTP
            node_port: 6500
          - target_port: 8080
            protocol: TCP
            port: 80
            name: http
            app_protocol: HTTP
            node_port: 6500
          cluster_ip: cluster_ip
          labels:
          - app:demo-app
          - version:v1.0.0
        - external_ips:
          - 1.1.1.1
          - 2.2.2.2
          service_type: ClusterIP
          name: demo-app
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          ports:
          - target_port: 8080
            protocol: TCP
            port: 80
            name: http
            app_protocol: HTTP
            node_port: 6500
          - target_port: 8080
            protocol: TCP
            port: 80
            name: http
            app_protocol: HTTP
            node_port: 6500
          cluster_ip: cluster_ip
          labels:
          - app:demo-app
          - version:v1.0.0
        secrets:
        - name: dingman-secret
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          files:
          - cert/test-domain.crt
          - cert/cdn-dsa
          labels:
          - app:demo-app
          - version:v1.0.0
        - name: dingman-secret
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          files:
          - cert/test-domain.crt
          - cert/cdn-dsa
          labels:
          - app:demo-app
          - version:v1.0.0
      properties:
        workloads:
          items:
            $ref: '#/components/schemas/Workload'
          title: workloads
          type: array
        services:
          items:
            $ref: '#/components/schemas/Service'
          title: services
          type: array
        configs:
          items:
            $ref: '#/components/schemas/Config'
          title: configs
          type: array
        secrets:
          items:
            $ref: '#/components/schemas/Secret'
          title: secrets
          type: array
        persistent_volume_claims:
          description: List of Persistent Volume Claims
          items:
            $ref: '#/components/schemas/PersistentVolumeClaim'
          title: persistent_volume_claims
          type: array
        ingress:
          description: List of Ingress configs for k8s Ingress Controller
          items:
            $ref: '#/components/schemas/Ingress'
          title: ingress
          type: array
        service_monitors:
          description: List of Service Monitors for Prometheus Operator
          items:
            $ref: '#/components/schemas/ServiceMonitor'
          title: service_monitors
          type: array
        roles:
          description: List of roles and clusterRoles.
          items:
            $ref: '#/components/schemas/Role'
          title: roles
          type: array
        role_bindings:
          description: List of role bindings and cluster role bindings.
          items:
            $ref: '#/components/schemas/RoleBinding'
          title: role_bindings
          type: array
        service_accounts:
          description: List of service accounts.
          items:
            $ref: '#/components/schemas/ServiceAccount'
          title: service_accounts
          type: array
        custom_manifests:
          description: List of k8s files which users upload to support specific needs.
          items:
            $ref: '#/components/schemas/CustomManifest'
          title: custom_manifests
          type: array
      title: DeployResources
      type: object
    Workload:
      example:
        label_selector:
        - app:demo-app
        - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        update_strategy:
          strategy_type: RollingUpdate
          rolling_update_config:
            partition: 2
            max_unavailable: 10% or 2
            max_surge: 10% or 2
        pod:
          service_account_name: edgesd-boe
          image_pull_secrets:
          - image-secret
          - image-secret
          termination_grace_period_seconds: 30
          volumes:
          - host_path:
              path: /data
              path_type: Directory
            projected:
              sources:
              - config_map:
                  name: dingman-gts
                secret:
                  name: dingman-gts
              - config_map:
                  name: dingman-gts
                secret:
                  name: dingman-gts
              default_mode: 420
            name: demo-vol
            empty_dir:
              medium: Memory
              size_limit: 500Mi
            config_map:
              name: server config/secret
              optional: false
              default_mode: 400
            secret:
              name: server config/secret
              optional: false
              default_mode: 400
            persistent_volume_claim:
              read_only: false
              claim_name: demo-pvc
          - host_path:
              path: /data
              path_type: Directory
            projected:
              sources:
              - config_map:
                  name: dingman-gts
                secret:
                  name: dingman-gts
              - config_map:
                  name: dingman-gts
                secret:
                  name: dingman-gts
              default_mode: 420
            name: demo-vol
            empty_dir:
              medium: Memory
              size_limit: 500Mi
            config_map:
              name: server config/secret
              optional: false
              default_mode: 400
            secret:
              name: server config/secret
              optional: false
              default_mode: 400
            persistent_volume_claim:
              read_only: false
              claim_name: demo-pvc
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          topology_spread_constraints:
          - label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            when_unsatisfiable: ScheduleAnyway
            max_skew: 1
            topologyKey: kubernetes.io/hostname
          - label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            when_unsatisfiable: ScheduleAnyway
            max_skew: 1
            topologyKey: kubernetes.io/hostname
          labels:
          - app:demo-app
          - version:v1.0.0
          tolerations:
          - effect: NoSchedule
            toleration_seconds: 3600
            value: cache-node
            key: node-role.kubernetes.io/master
            operator: Equal
          - effect: NoSchedule
            toleration_seconds: 3600
            value: cache-node
            key: node-role.kubernetes.io/master
            operator: Equal
          dns_policy: ClusterFirst
          restart_policy: Always
          containers:
          - image: nginx:latest
            life_cycle:
              pre_stop:
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                exec_command:
                - /bin/showdown.sh
              post_start:
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                exec_command:
                - /bin/showdown.sh
            resources:
              requests:
                memory: 256Mi
                cpu: "0.1"
              limits:
                memory: 512Mi
                cpu: "0.5"
            volume_mounts:
            - path: /opt/server/conf
              read_only: true
              name: demo-vol
              sub_path: server.conf
            - path: /opt/server/conf
              read_only: true
              name: demo-vol
              sub_path: server.conf
            env:
              name: SMS_KEYS_PATH_XM
              value: dms-secret
            ports:
            - container_port: 80
              protocol: TCP
              name: http
            - container_port: 80
              protocol: TCP
              name: http
            command:
            - python3
            args:
            - -m
            - openapi_server
            readiness_probe:
              period_seconds: 60
              initial_delay_seconds: 600
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              failure_threshold: 3
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              timeout_seconds: 60
              exec_command:
              - /gss/dingman/bin/dingman-clit
              - -address
              - 127.0.0.1:30501
              - -command
              - show pop:all summary:health-status
            env_from: Regular
            startup_probe:
              period_seconds: 60
              initial_delay_seconds: 600
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              failure_threshold: 3
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              timeout_seconds: 60
              exec_command:
              - /gss/dingman/bin/dingman-clit
              - -address
              - 127.0.0.1:30501
              - -command
              - show pop:all summary:health-status
            image_pull_policy: IfNotPresent
            volume_devices:
            - name: demo-vol
              device_path: /dev/sda1
              bcache_nums: 4
            - name: demo-vol
              device_path: /dev/sda1
              bcache_nums: 4
            name: http-server
            container_type: Init
            liveness_probe:
              period_seconds: 60
              initial_delay_seconds: 600
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              failure_threshold: 3
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              timeout_seconds: 60
              exec_command:
              - /gss/dingman/bin/dingman-clit
              - -address
              - 127.0.0.1:30501
              - -command
              - show pop:all summary:health-status
            security_context:
              capabilities:
                add:
                - NET_ADMIN
                - SYS_TIME
                drop:
                - NET_ADMIN
                - SYS_TIME
              run_as_group: 3000
              allow_privilege_escalation: false
              run_as_user: 1000
          - image: nginx:latest
            life_cycle:
              pre_stop:
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                exec_command:
                - /bin/showdown.sh
              post_start:
                tcp_socket:
                  port: 30181
                  host: 127.0.0.1
                http_get:
                  path: /show?domain=v19.tiktokcdn.com
                  http_headers:
                  - x-devsre-authorization:Bearer eyJhbGciOiJ
                  - content-type:application/json
                  scheme: HTTPS
                  port: 8888
                  host: gss-dns-agent.example.org
                exec_command:
                - /bin/showdown.sh
            resources:
              requests:
                memory: 256Mi
                cpu: "0.1"
              limits:
                memory: 512Mi
                cpu: "0.5"
            volume_mounts:
            - path: /opt/server/conf
              read_only: true
              name: demo-vol
              sub_path: server.conf
            - path: /opt/server/conf
              read_only: true
              name: demo-vol
              sub_path: server.conf
            env:
              name: SMS_KEYS_PATH_XM
              value: dms-secret
            ports:
            - container_port: 80
              protocol: TCP
              name: http
            - container_port: 80
              protocol: TCP
              name: http
            command:
            - python3
            args:
            - -m
            - openapi_server
            readiness_probe:
              period_seconds: 60
              initial_delay_seconds: 600
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              failure_threshold: 3
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              timeout_seconds: 60
              exec_command:
              - /gss/dingman/bin/dingman-clit
              - -address
              - 127.0.0.1:30501
              - -command
              - show pop:all summary:health-status
            env_from: Regular
            startup_probe:
              period_seconds: 60
              initial_delay_seconds: 600
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              failure_threshold: 3
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              timeout_seconds: 60
              exec_command:
              - /gss/dingman/bin/dingman-clit
              - -address
              - 127.0.0.1:30501
              - -command
              - show pop:all summary:health-status
            image_pull_policy: IfNotPresent
            volume_devices:
            - name: demo-vol
              device_path: /dev/sda1
              bcache_nums: 4
            - name: demo-vol
              device_path: /dev/sda1
              bcache_nums: 4
            name: http-server
            container_type: Init
            liveness_probe:
              period_seconds: 60
              initial_delay_seconds: 600
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              failure_threshold: 3
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              timeout_seconds: 60
              exec_command:
              - /gss/dingman/bin/dingman-clit
              - -address
              - 127.0.0.1:30501
              - -command
              - show pop:all summary:health-status
            security_context:
              capabilities:
                add:
                - NET_ADMIN
                - SYS_TIME
                drop:
                - NET_ADMIN
                - SYS_TIME
              run_as_group: 3000
              allow_privilege_escalation: false
              run_as_user: 1000
          scheduler_name: default-scheduler
          security_context:
            run_as_group: 3000
            run_as_user: 1000
            sysctls:
            - name: net.ipv4.ping_group_range
              value: 0 2147483647
            - name: net.ipv4.ping_group_range
              value: 0 2147483647
          affinity:
            pod_anti_affinity:
              preferred_during_scheduling_ignored_during_execution:
              - weight: 6
                pod_affinity_term:
                  label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
              - weight: 6
                pod_affinity_term:
                  label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
              required_during_scheduling_ignored_during_execution:
              - label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
              - label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
            node_affinity:
              preferred_during_scheduling_ignored_during_execution:
              - preference:
                  match_expressions:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  match_fields:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                weight: 0
              - preference:
                  match_expressions:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  match_fields:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                weight: 0
              required_during_scheduling_ignored_during_execution:
                node_selector_terms:
                - match_expressions:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  match_fields:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                - match_expressions:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  match_fields:
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            pod_affinity:
              preferred_during_scheduling_ignored_during_execution:
              - weight: 6
                pod_affinity_term:
                  label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
              - weight: 6
                pod_affinity_term:
                  label_selector:
                  - app:demo-app
                  - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                  topology_key: topology_key
                  namespaces:
                  - namespaces
                  - namespaces
              required_during_scheduling_ignored_during_execution:
              - label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
              - label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
        revision_history_limit: 3
        replicas: 1
        service_name: demo-app
        name: demo-app
        namespace: gitops-cdn-cache
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        volume_claim_templates:
        - volume_mode: Filesystem
          request_resources:
            requests:
              memory: 256Mi
              cpu: "0.1"
            limits:
              memory: 512Mi
              cpu: "0.5"
          name: my-pvc
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          volume_name: my-pv
          storage_class_name: standard
          access_modes:
          - ReadWriteOnce
          labels:
          - app:demo-app
          - version:v1.0.0
        - volume_mode: Filesystem
          request_resources:
            requests:
              memory: 256Mi
              cpu: "0.1"
            limits:
              memory: 512Mi
              cpu: "0.5"
          name: my-pvc
          namespace: gitops-cdn-cache
          annotations:
          - annotation-key1:val1
          - annotation-key2:val2
          volume_name: my-pv
          storage_class_name: standard
          access_modes:
          - ReadWriteOnce
          labels:
          - app:demo-app
          - version:v1.0.0
        workload_type: Deployment
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: workload name.
          example: demo-app
          title: name
          type: string
        workload_type:
          enum:
          - Deployment
          - StatefulSet
          - DaemonSet
          - Job
          example: Deployment
          title: workload_type
          type: string
        namespace:
          description: namespace for resource.
          example: gitops-cdn-cache
          title: namespace
          type: string
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        replicas:
          example: 1
          title: replicas
          type: integer
        label_selector:
          description: |
            An array of label selector rule, the rule can either be a match label or match expression,
            referring the example (first is a match label, second is a match expression)
          example:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          items:
            type: string
          title: LabelSelector
          type: array
        update_strategy:
          $ref: '#/components/schemas/UpdateStrategy'
        revision_history_limit:
          description: It determines the number of old ReplicaSets to retain for the
            purpose of rollback and historical analysis.
          example: 3
          title: revision_history_limit
          type: integer
        pod:
          $ref: '#/components/schemas/Pod'
        service_name:
          description: "It is used for StatefulSet. The name of the service that governs\
            \ this StatefulSet. This service must exist before the StatefulSet,\n\
            and is responsible for the network identity of the set. Pods get DNS/hostnames\
            \ that follow the pattern:\npod-specific-string.serviceName.default.svc.cluster.local\
            \ where \"pod-specific-string\" is managed by the StatefulSet controller.\
            \ \nIf not specified, the name of the StatefulSet will be used.\n"
          example: demo-app
          title: service_name
          type: string
        volume_claim_templates:
          description: "volumeClaimTemplates is a list of claims that pods are allowed\
            \ to reference, only valid when workload_type is StatefulSet."
          items:
            $ref: '#/components/schemas/PersistentVolumeClaim'
          title: volume_claim_templates
          type: array
      required:
      - name
      title: Workload
      type: object
    Annotations:
      description: An unstructured key value map that can be used to attach arbitrary
        metadata
      example:
      - annotation-key1:val1
      - annotation-key2:val2
      items:
        type: string
      title: Annotations
      type: array
    Labels:
      description: Map of string keys and values that can be used to organize and
        categorize (scope and select) objects
      example:
      - app:demo-app
      - version:v1.0.0
      items:
        type: string
      title: Labels
      type: array
    LabelSelector:
      description: |
        An array of label selector rule, the rule can either be a match label or match expression,
        referring the example (first is a match label, second is a match expression)
      example:
      - app:demo-app
      - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
      items:
        type: string
      title: LabelSelector
      type: array
    UpdateStrategy:
      example:
        strategy_type: RollingUpdate
        rolling_update_config:
          partition: 2
          max_unavailable: 10% or 2
          max_surge: 10% or 2
      properties:
        strategy_type:
          description: Update strategy type， used to specify the update strategy for
            the Workload.
          enum:
          - Recreate
          - RollingUpdate
          - OnDelete
          example: RollingUpdate
          title: strategy_type
          type: string
        rolling_update_config:
          $ref: '#/components/schemas/UpdateStrategy_rolling_update_config'
      title: UpdateStrategy
      type: object
    Pod:
      example:
        service_account_name: edgesd-boe
        image_pull_secrets:
        - image-secret
        - image-secret
        termination_grace_period_seconds: 30
        volumes:
        - host_path:
            path: /data
            path_type: Directory
          projected:
            sources:
            - config_map:
                name: dingman-gts
              secret:
                name: dingman-gts
            - config_map:
                name: dingman-gts
              secret:
                name: dingman-gts
            default_mode: 420
          name: demo-vol
          empty_dir:
            medium: Memory
            size_limit: 500Mi
          config_map:
            name: server config/secret
            optional: false
            default_mode: 400
          secret:
            name: server config/secret
            optional: false
            default_mode: 400
          persistent_volume_claim:
            read_only: false
            claim_name: demo-pvc
        - host_path:
            path: /data
            path_type: Directory
          projected:
            sources:
            - config_map:
                name: dingman-gts
              secret:
                name: dingman-gts
            - config_map:
                name: dingman-gts
              secret:
                name: dingman-gts
            default_mode: 420
          name: demo-vol
          empty_dir:
            medium: Memory
            size_limit: 500Mi
          config_map:
            name: server config/secret
            optional: false
            default_mode: 400
          secret:
            name: server config/secret
            optional: false
            default_mode: 400
          persistent_volume_claim:
            read_only: false
            claim_name: demo-pvc
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        topology_spread_constraints:
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          when_unsatisfiable: ScheduleAnyway
          max_skew: 1
          topologyKey: kubernetes.io/hostname
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          when_unsatisfiable: ScheduleAnyway
          max_skew: 1
          topologyKey: kubernetes.io/hostname
        labels:
        - app:demo-app
        - version:v1.0.0
        tolerations:
        - effect: NoSchedule
          toleration_seconds: 3600
          value: cache-node
          key: node-role.kubernetes.io/master
          operator: Equal
        - effect: NoSchedule
          toleration_seconds: 3600
          value: cache-node
          key: node-role.kubernetes.io/master
          operator: Equal
        dns_policy: ClusterFirst
        restart_policy: Always
        containers:
        - image: nginx:latest
          life_cycle:
            pre_stop:
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              exec_command:
              - /bin/showdown.sh
            post_start:
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              exec_command:
              - /bin/showdown.sh
          resources:
            requests:
              memory: 256Mi
              cpu: "0.1"
            limits:
              memory: 512Mi
              cpu: "0.5"
          volume_mounts:
          - path: /opt/server/conf
            read_only: true
            name: demo-vol
            sub_path: server.conf
          - path: /opt/server/conf
            read_only: true
            name: demo-vol
            sub_path: server.conf
          env:
            name: SMS_KEYS_PATH_XM
            value: dms-secret
          ports:
          - container_port: 80
            protocol: TCP
            name: http
          - container_port: 80
            protocol: TCP
            name: http
          command:
          - python3
          args:
          - -m
          - openapi_server
          readiness_probe:
            period_seconds: 60
            initial_delay_seconds: 600
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            failure_threshold: 3
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            timeout_seconds: 60
            exec_command:
            - /gss/dingman/bin/dingman-clit
            - -address
            - 127.0.0.1:30501
            - -command
            - show pop:all summary:health-status
          env_from: Regular
          startup_probe:
            period_seconds: 60
            initial_delay_seconds: 600
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            failure_threshold: 3
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            timeout_seconds: 60
            exec_command:
            - /gss/dingman/bin/dingman-clit
            - -address
            - 127.0.0.1:30501
            - -command
            - show pop:all summary:health-status
          image_pull_policy: IfNotPresent
          volume_devices:
          - name: demo-vol
            device_path: /dev/sda1
            bcache_nums: 4
          - name: demo-vol
            device_path: /dev/sda1
            bcache_nums: 4
          name: http-server
          container_type: Init
          liveness_probe:
            period_seconds: 60
            initial_delay_seconds: 600
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            failure_threshold: 3
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            timeout_seconds: 60
            exec_command:
            - /gss/dingman/bin/dingman-clit
            - -address
            - 127.0.0.1:30501
            - -command
            - show pop:all summary:health-status
          security_context:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_TIME
              drop:
              - NET_ADMIN
              - SYS_TIME
            run_as_group: 3000
            allow_privilege_escalation: false
            run_as_user: 1000
        - image: nginx:latest
          life_cycle:
            pre_stop:
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              exec_command:
              - /bin/showdown.sh
            post_start:
              tcp_socket:
                port: 30181
                host: 127.0.0.1
              http_get:
                path: /show?domain=v19.tiktokcdn.com
                http_headers:
                - x-devsre-authorization:Bearer eyJhbGciOiJ
                - content-type:application/json
                scheme: HTTPS
                port: 8888
                host: gss-dns-agent.example.org
              exec_command:
              - /bin/showdown.sh
          resources:
            requests:
              memory: 256Mi
              cpu: "0.1"
            limits:
              memory: 512Mi
              cpu: "0.5"
          volume_mounts:
          - path: /opt/server/conf
            read_only: true
            name: demo-vol
            sub_path: server.conf
          - path: /opt/server/conf
            read_only: true
            name: demo-vol
            sub_path: server.conf
          env:
            name: SMS_KEYS_PATH_XM
            value: dms-secret
          ports:
          - container_port: 80
            protocol: TCP
            name: http
          - container_port: 80
            protocol: TCP
            name: http
          command:
          - python3
          args:
          - -m
          - openapi_server
          readiness_probe:
            period_seconds: 60
            initial_delay_seconds: 600
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            failure_threshold: 3
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            timeout_seconds: 60
            exec_command:
            - /gss/dingman/bin/dingman-clit
            - -address
            - 127.0.0.1:30501
            - -command
            - show pop:all summary:health-status
          env_from: Regular
          startup_probe:
            period_seconds: 60
            initial_delay_seconds: 600
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            failure_threshold: 3
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            timeout_seconds: 60
            exec_command:
            - /gss/dingman/bin/dingman-clit
            - -address
            - 127.0.0.1:30501
            - -command
            - show pop:all summary:health-status
          image_pull_policy: IfNotPresent
          volume_devices:
          - name: demo-vol
            device_path: /dev/sda1
            bcache_nums: 4
          - name: demo-vol
            device_path: /dev/sda1
            bcache_nums: 4
          name: http-server
          container_type: Init
          liveness_probe:
            period_seconds: 60
            initial_delay_seconds: 600
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            failure_threshold: 3
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            timeout_seconds: 60
            exec_command:
            - /gss/dingman/bin/dingman-clit
            - -address
            - 127.0.0.1:30501
            - -command
            - show pop:all summary:health-status
          security_context:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_TIME
              drop:
              - NET_ADMIN
              - SYS_TIME
            run_as_group: 3000
            allow_privilege_escalation: false
            run_as_user: 1000
        scheduler_name: default-scheduler
        security_context:
          run_as_group: 3000
          run_as_user: 1000
          sysctls:
          - name: net.ipv4.ping_group_range
            value: 0 2147483647
          - name: net.ipv4.ping_group_range
            value: 0 2147483647
        affinity:
          pod_anti_affinity:
            preferred_during_scheduling_ignored_during_execution:
            - weight: 6
              pod_affinity_term:
                label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
            - weight: 6
              pod_affinity_term:
                label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
            required_during_scheduling_ignored_during_execution:
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
          node_affinity:
            preferred_during_scheduling_ignored_during_execution:
            - preference:
                match_expressions:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                match_fields:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              weight: 0
            - preference:
                match_expressions:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                match_fields:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              weight: 0
            required_during_scheduling_ignored_during_execution:
              node_selector_terms:
              - match_expressions:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                match_fields:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              - match_expressions:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                match_fields:
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          pod_affinity:
            preferred_during_scheduling_ignored_during_execution:
            - weight: 6
              pod_affinity_term:
                label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
            - weight: 6
              pod_affinity_term:
                label_selector:
                - app:demo-app
                - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
                topology_key: topology_key
                namespaces:
                - namespaces
                - namespaces
            required_during_scheduling_ignored_during_execution:
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
            - label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
      properties:
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        containers:
          items:
            $ref: '#/components/schemas/Container'
          title: containers
          type: array
        service_account_name:
          description: The name of the Service Account that the Pods created by that
            Deployment should use when interacting with the Kubernetes API or other
            resources.
          example: edgesd-boe
          title: service_account_name
          type: string
        topology_spread_constraints:
          items:
            $ref: '#/components/schemas/TopologySpreadConstraint'
          title: topology_spread_constraints
          type: array
        dns_policy:
          description: This specifies the DNS resolution policy for the Pod.
          example: ClusterFirst
          title: dns_policy
          type: string
        restart_policy:
          description: "This sets the restart policy for the Pod, which applies to\
            \ all containers in the Pod."
          example: Always
          title: restart_policy
          type: string
        image_pull_secrets:
          description: This defines an array of image pull secrets for the Pod.
          items:
            description: Name of the referent.
            example: image-secret
            type: string
          title: image_pull_secrets
          type: array
        scheduler_name:
          description: This specifies the name of the scheduler that should be used
            to schedule the Pod.
          example: default-scheduler
          title: scheduler_name
          type: string
        termination_grace_period_seconds:
          description: "This sets the grace period, in seconds, for the Pod's termination."
          example: 30
          title: termination_grace_period_seconds
          type: integer
        volumes:
          items:
            $ref: '#/components/schemas/Volume'
          title: volumes
          type: array
        affinity:
          $ref: '#/components/schemas/Affinity'
        tolerations:
          description: List of tolerations for the workload
          items:
            $ref: '#/components/schemas/Toleration'
          title: tolerations
          type: array
        security_context:
          $ref: '#/components/schemas/PodSecContext'
      title: Pod
      type: object
    Container:
      example:
        image: nginx:latest
        life_cycle:
          pre_stop:
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            exec_command:
            - /bin/showdown.sh
          post_start:
            tcp_socket:
              port: 30181
              host: 127.0.0.1
            http_get:
              path: /show?domain=v19.tiktokcdn.com
              http_headers:
              - x-devsre-authorization:Bearer eyJhbGciOiJ
              - content-type:application/json
              scheme: HTTPS
              port: 8888
              host: gss-dns-agent.example.org
            exec_command:
            - /bin/showdown.sh
        resources:
          requests:
            memory: 256Mi
            cpu: "0.1"
          limits:
            memory: 512Mi
            cpu: "0.5"
        volume_mounts:
        - path: /opt/server/conf
          read_only: true
          name: demo-vol
          sub_path: server.conf
        - path: /opt/server/conf
          read_only: true
          name: demo-vol
          sub_path: server.conf
        env:
          name: SMS_KEYS_PATH_XM
          value: dms-secret
        ports:
        - container_port: 80
          protocol: TCP
          name: http
        - container_port: 80
          protocol: TCP
          name: http
        command:
        - python3
        args:
        - -m
        - openapi_server
        readiness_probe:
          period_seconds: 60
          initial_delay_seconds: 600
          tcp_socket:
            port: 30181
            host: 127.0.0.1
          failure_threshold: 3
          http_get:
            path: /show?domain=v19.tiktokcdn.com
            http_headers:
            - x-devsre-authorization:Bearer eyJhbGciOiJ
            - content-type:application/json
            scheme: HTTPS
            port: 8888
            host: gss-dns-agent.example.org
          timeout_seconds: 60
          exec_command:
          - /gss/dingman/bin/dingman-clit
          - -address
          - 127.0.0.1:30501
          - -command
          - show pop:all summary:health-status
        env_from: Regular
        startup_probe:
          period_seconds: 60
          initial_delay_seconds: 600
          tcp_socket:
            port: 30181
            host: 127.0.0.1
          failure_threshold: 3
          http_get:
            path: /show?domain=v19.tiktokcdn.com
            http_headers:
            - x-devsre-authorization:Bearer eyJhbGciOiJ
            - content-type:application/json
            scheme: HTTPS
            port: 8888
            host: gss-dns-agent.example.org
          timeout_seconds: 60
          exec_command:
          - /gss/dingman/bin/dingman-clit
          - -address
          - 127.0.0.1:30501
          - -command
          - show pop:all summary:health-status
        image_pull_policy: IfNotPresent
        volume_devices:
        - name: demo-vol
          device_path: /dev/sda1
          bcache_nums: 4
        - name: demo-vol
          device_path: /dev/sda1
          bcache_nums: 4
        name: http-server
        container_type: Init
        liveness_probe:
          period_seconds: 60
          initial_delay_seconds: 600
          tcp_socket:
            port: 30181
            host: 127.0.0.1
          failure_threshold: 3
          http_get:
            path: /show?domain=v19.tiktokcdn.com
            http_headers:
            - x-devsre-authorization:Bearer eyJhbGciOiJ
            - content-type:application/json
            scheme: HTTPS
            port: 8888
            host: gss-dns-agent.example.org
          timeout_seconds: 60
          exec_command:
          - /gss/dingman/bin/dingman-clit
          - -address
          - 127.0.0.1:30501
          - -command
          - show pop:all summary:health-status
        security_context:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_TIME
            drop:
            - NET_ADMIN
            - SYS_TIME
          run_as_group: 3000
          allow_privilege_escalation: false
          run_as_user: 1000
      properties:
        name:
          description: |
            Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL).
            Cannot be updated
          example: http-server
          title: name
          type: string
        container_type:
          enum:
          - Init
          - Regular
          title: container_type
          type: string
        env:
          description: List of environment variables to set in the container.
          example:
            name: SMS_KEYS_PATH_XM
            value: dms-secret
          items:
            $ref: '#/components/schemas/EnvVar'
          title: env
          type: array
        env_from:
          description: List of sources to populate environment variables in the container.
          example: Regular
          items:
            $ref: '#/components/schemas/EnvFromSource'
          title: env_from
          type: array
        image:
          description: Docker image url
          example: nginx:latest
          title: image
          type: string
        image_pull_policy:
          description: Defaults to Always
          enum:
          - IfNotPresent
          - Always
          - Never
          example: IfNotPresent
          title: image_pull_policy
          type: string
        args:
          description: Arguments to the entrypoint. The container image's CMD is used
            if this is not provided
          example:
          - -m
          - openapi_server
          items:
            type: string
          title: args
          type: array
        command:
          description: |
            Entrypoint array. Not executed within a shell.
            The container image's ENTRYPOINT is used if this is not provided.
          example:
          - python3
          items:
            type: string
          title: command
          type: array
        security_context:
          $ref: '#/components/schemas/ContainerSecContext'
        life_cycle:
          $ref: '#/components/schemas/ContainerLifeCycle'
        ports:
          items:
            $ref: '#/components/schemas/ContainerPort'
          title: ports
          type: array
        volume_mounts:
          items:
            $ref: '#/components/schemas/VolumeMount'
          title: volume_mounts
          type: array
        volume_devices:
          items:
            $ref: '#/components/schemas/VolumeDevice'
          title: volume_devices
          type: array
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
        liveness_probe:
          $ref: '#/components/schemas/Probe'
        readiness_probe:
          $ref: '#/components/schemas/Probe'
        startup_probe:
          $ref: '#/components/schemas/Probe'
      required:
      - name
      title: Container
      type: object
    EnvVar:
      properties:
        name:
          title: name
          type: string
        value:
          title: value
          type: string
        value_from:
          $ref: '#/components/schemas/EnvVarSource'
      required:
      - name
      title: EnvVar
      type: object
    EnvVarSource:
      properties:
        field_ref:
          $ref: '#/components/schemas/ObjectFieldSelector'
      title: EnvVarSource
      type: object
    ObjectFieldSelector:
      properties:
        api_version:
          description: "Version of the schema the FieldPath is written in terms of,\
            \ defaults to \"v1\"."
          example: v1
          title: api_version
          type: string
        field_path:
          description: Path of the field to select in the specified API version.
          example: metadata.name
          title: field_path
          type: string
      title: ObjectFieldSelector
      type: object
    EnvFromSource:
      description: EnvFromSource represents the source of a set of ConfigMaps
      example:
        name: /api/v1/pods/some-name
        optional: true
        source_type: ConfigMap
      properties:
        name:
          type: string
        optional:
          type: boolean
        source_type:
          enum:
          - ConfigMap
          - Secret
          type: string
      title: EnvFromSource
      type: object
    ContainerSecContext:
      description: The security configuration that will be applied to a container.
      example:
        capabilities:
          add:
          - NET_ADMIN
          - SYS_TIME
          drop:
          - NET_ADMIN
          - SYS_TIME
        run_as_group: 3000
        allow_privilege_escalation: false
        run_as_user: 1000
      properties:
        run_as_user:
          description: The UID to run the entrypoint of the container process.
          example: 1000
          title: run_as_user
          type: integer
        run_as_group:
          description: The GID to run the entrypoint of the container process.
          example: 3000
          title: run_as_group
          type: integer
        allow_privilege_escalation:
          description: It is used to control whether a container running within a
            Kubernetes cluster is allowed to escalate its privileges beyond the initial
            permissions granted to it when it starts.
          example: false
          title: allow_privilege_escalation
          type: boolean
        capabilities:
          $ref: '#/components/schemas/ContainerSecContext_capabilities'
      title: ContainerSecContext
      type: object
    ContainerLifeCycle:
      example:
        pre_stop:
          tcp_socket:
            port: 30181
            host: 127.0.0.1
          http_get:
            path: /show?domain=v19.tiktokcdn.com
            http_headers:
            - x-devsre-authorization:Bearer eyJhbGciOiJ
            - content-type:application/json
            scheme: HTTPS
            port: 8888
            host: gss-dns-agent.example.org
          exec_command:
          - /bin/showdown.sh
        post_start:
          tcp_socket:
            port: 30181
            host: 127.0.0.1
          http_get:
            path: /show?domain=v19.tiktokcdn.com
            http_headers:
            - x-devsre-authorization:Bearer eyJhbGciOiJ
            - content-type:application/json
            scheme: HTTPS
            port: 8888
            host: gss-dns-agent.example.org
          exec_command:
          - /bin/showdown.sh
      properties:
        post_start:
          $ref: '#/components/schemas/LifeCycleHandler'
        pre_stop:
          $ref: '#/components/schemas/LifeCycleHandler'
      title: ContainerLifeCycle
      type: object
    LifeCycleHandler:
      example:
        tcp_socket:
          port: 30181
          host: 127.0.0.1
        http_get:
          path: /show?domain=v19.tiktokcdn.com
          http_headers:
          - x-devsre-authorization:Bearer eyJhbGciOiJ
          - content-type:application/json
          scheme: HTTPS
          port: 8888
          host: gss-dns-agent.example.org
        exec_command:
        - /bin/showdown.sh
      properties:
        exec_command:
          description: Command line to execute inside the container
          example:
          - /bin/showdown.sh
          items:
            type: string
          title: exec_command
          type: array
        http_get:
          $ref: '#/components/schemas/HttpGet'
        tcp_socket:
          $ref: '#/components/schemas/TcpSocket'
      title: LifeCycleHandler
      type: object
    HttpGet:
      example:
        path: /show?domain=v19.tiktokcdn.com
        http_headers:
        - x-devsre-authorization:Bearer eyJhbGciOiJ
        - content-type:application/json
        scheme: HTTPS
        port: 8888
        host: gss-dns-agent.example.org
      properties:
        port:
          description: Number of the port to access on the container.
          example: 8888
          title: port
          type: integer
        host:
          description: "Host name to connect to, defaults to the pod IP."
          example: gss-dns-agent.example.org
          title: host
          type: string
        http_headers:
          description: Custom headers to set in the request.
          example:
          - x-devsre-authorization:Bearer eyJhbGciOiJ
          - content-type:application/json
          items:
            type: string
          title: http_headers
          type: array
        path:
          description: Path to access on the HTTP server.
          example: /show?domain=v19.tiktokcdn.com
          title: path
          type: string
        scheme:
          description: Scheme to use for connecting to the host. Defaults to HTTP.
          example: HTTPS
          title: scheme
          type: string
      required:
      - port
      title: HttpGet
      type: object
    TcpSocket:
      example:
        port: 30181
        host: 127.0.0.1
      properties:
        port:
          description: Number of the port to access on the container.
          example: 30181
          title: port
          type: integer
        host:
          description: "Host name to connect to, defaults to the pod IP."
          example: 127.0.0.1
          title: host
          type: string
      required:
      - port
      title: TcpSocket
      type: object
    ContainerPort:
      example:
        container_port: 80
        protocol: TCP
        name: http
      properties:
        name:
          description: "Container port name, if specified, this must be an IANA_SVC_NAME\
            \ and unique within the pod"
          example: http
          title: name
          type: string
        container_port:
          example: 80
          title: container_port
          type: integer
        protocol:
          description: Defaults to TCP
          enum:
          - TCP
          - UDP
          example: TCP
          title: protocol
          type: string
      required:
      - name
      title: ContainerPort
      type: object
    VolumeMount:
      example:
        path: /opt/server/conf
        read_only: true
        name: demo-vol
        sub_path: server.conf
      properties:
        name:
          description: Must match the Name of a Volume
          example: demo-vol
          title: name
        path:
          description: Path within the container at which the volume should be mounted
          example: /opt/server/conf
          title: path
          type: string
        sub_path:
          description: Path within the volume from which the container's volume should
            be mounted
          example: server.conf
          title: sub_path
          type: string
        read_only:
          description: Will force the ReadOnly setting in VolumeMounts
          example: true
          title: read_only
          type: boolean
      required:
      - name
      title: VolumeMount
      type: object
    VolumeDevice:
      example:
        name: demo-vol
        device_path: /dev/sda1
        bcache_nums: 4
      properties:
        name:
          description: Must match the Name of a Volume
          example: demo-vol
          title: name
        device_path:
          description: Path of the device within the container
          example: /dev/sda1
          title: device_path
          type: string
        bcache_nums:
          description: Used for ATS deployment to automatically generate bcache_nums
            volume devices and related contents.
          example: 4
          title: bcache_nums
          type: integer
      required:
      - name
      title: VolumeDevice
      type: object
    ResourceRequirements:
      example:
        requests:
          memory: 256Mi
          cpu: "0.1"
        limits:
          memory: 512Mi
          cpu: "0.5"
      properties:
        limits:
          additionalProperties:
            type: string
          description: used to specify the maximum amount of resources that can be
            consumed.
          example:
            memory: 512Mi
            cpu: "0.5"
          title: limits
          type: object
        requests:
          additionalProperties:
            type: string
          description: used to specify the minimum amount of resources that should
            be consumed.
          example:
            memory: 256Mi
            cpu: "0.1"
          title: requests
          type: object
      title: ResourceRequirements
      type: object
    Probe:
      example:
        period_seconds: 60
        initial_delay_seconds: 600
        tcp_socket:
          port: 30181
          host: 127.0.0.1
        failure_threshold: 3
        http_get:
          path: /show?domain=v19.tiktokcdn.com
          http_headers:
          - x-devsre-authorization:Bearer eyJhbGciOiJ
          - content-type:application/json
          scheme: HTTPS
          port: 8888
          host: gss-dns-agent.example.org
        timeout_seconds: 60
        exec_command:
        - /gss/dingman/bin/dingman-clit
        - -address
        - 127.0.0.1:30501
        - -command
        - show pop:all summary:health-status
      properties:
        exec_command:
          description: Command line to execute inside the container
          example:
          - /gss/dingman/bin/dingman-clit
          - -address
          - 127.0.0.1:30501
          - -command
          - show pop:all summary:health-status
          items:
            type: string
          title: exec_command
          type: array
        http_get:
          $ref: '#/components/schemas/HttpGet'
        tcp_socket:
          $ref: '#/components/schemas/TcpSocket'
        failure_threshold:
          description: Minimum consecutive failures for the probe to be considered
            failed after having succeeded.
          example: 3
          title: failure_threshold
          type: integer
        period_seconds:
          description: How often (in seconds) to perform the probe. Default to 10
            seconds. Minimum value is 1.
          example: 60
          title: period_seconds
          type: integer
        timeout_seconds:
          description: Number of seconds after which the probe times out. Defaults
            to 1 second.
          example: 60
          title: timeout_seconds
          type: integer
        initial_delay_seconds:
          description: Number of seconds after the container has started before liveness
            probes are initiated.
          example: 600
          title: initial_delay_seconds
          type: integer
      title: Probe
      type: object
    TopologySpreadConstraint:
      example:
        label_selector:
        - app:demo-app
        - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        when_unsatisfiable: ScheduleAnyway
        max_skew: 1
        topologyKey: kubernetes.io/hostname
      properties:
        label_selector:
          description: |
            An array of label selector rule, the rule can either be a match label or match expression,
            referring the example (first is a match label, second is a match expression)
          example:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          items:
            type: string
          title: LabelSelector
          type: array
        max_skew:
          description: describes the degree to which Pods may be unevenly distributed.
            You must specify this field and the number must be greater than zero.
          example: 1
          title: max_skew
          type: integer
        topologyKey:
          description: the key of node labels. Nodes that have a label with this key
            and identical values are considered to be in the same topology.
          example: kubernetes.io/hostname
          title: topologyKey
          type: string
        when_unsatisfiable:
          description: indicates how to deal with a Pod if it doesn't satisfy the
            spread constraint. Default is DoNotSchedule.
          enum:
          - DoNotSchedule
          - ScheduleAnyway
          example: ScheduleAnyway
          title: when_unsatisfiable
          type: string
      title: TopologySpreadConstraint
      type: object
    Volume:
      example:
        host_path:
          path: /data
          path_type: Directory
        projected:
          sources:
          - config_map:
              name: dingman-gts
            secret:
              name: dingman-gts
          - config_map:
              name: dingman-gts
            secret:
              name: dingman-gts
          default_mode: 420
        name: demo-vol
        empty_dir:
          medium: Memory
          size_limit: 500Mi
        config_map:
          name: server config/secret
          optional: false
          default_mode: 400
        secret:
          name: server config/secret
          optional: false
          default_mode: 400
        persistent_volume_claim:
          read_only: false
          claim_name: demo-pvc
      properties:
        name:
          description: Name of the volume. Must be a DNS_LABEL and unique within the
            pod
          example: demo-vol
          title: name
          type: string
        config_map:
          $ref: '#/components/schemas/RefVolumeSource'
        secret:
          $ref: '#/components/schemas/RefVolumeSource'
        persistent_volume_claim:
          $ref: '#/components/schemas/Volume_persistent_volume_claim'
        empty_dir:
          $ref: '#/components/schemas/Volume_empty_dir'
        host_path:
          $ref: '#/components/schemas/Volume_host_path'
        projected:
          $ref: '#/components/schemas/Volume_projected'
      required:
      - name
      title: Volume
      type: object
    RefVolumeSource:
      example:
        name: server config/secret
        optional: false
        default_mode: 400
      properties:
        name:
          description: volume source (configMap/Secret) name
          example: server config/secret
          title: name
          type: string
        optional:
          description: specify whether the volume source or its keys must be defined
          example: false
          title: optional
          type: boolean
        default_mode:
          description: |
            mode bits used to set permissions on created files by default.
            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511
          example: 400
          title: default_mode
          type: integer
      title: RefVolumeSource
      type: object
    Affinity:
      example:
        pod_anti_affinity:
          preferred_during_scheduling_ignored_during_execution:
          - weight: 6
            pod_affinity_term:
              label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
          - weight: 6
            pod_affinity_term:
              label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
          required_during_scheduling_ignored_during_execution:
          - label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
          - label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
        node_affinity:
          preferred_during_scheduling_ignored_during_execution:
          - preference:
              match_expressions:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              match_fields:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            weight: 0
          - preference:
              match_expressions:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              match_fields:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            weight: 0
          required_during_scheduling_ignored_during_execution:
            node_selector_terms:
            - match_expressions:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              match_fields:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            - match_expressions:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              match_fields:
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        pod_affinity:
          preferred_during_scheduling_ignored_during_execution:
          - weight: 6
            pod_affinity_term:
              label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
          - weight: 6
            pod_affinity_term:
              label_selector:
              - app:demo-app
              - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
              topology_key: topology_key
              namespaces:
              - namespaces
              - namespaces
          required_during_scheduling_ignored_during_execution:
          - label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
          - label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
      properties:
        node_affinity:
          $ref: '#/components/schemas/NodeAffinity'
        pod_affinity:
          $ref: '#/components/schemas/PodAffinity'
        pod_anti_affinity:
          $ref: '#/components/schemas/PodAntiAffinity'
      title: Affinity
      type: object
    NodeAffinity:
      example:
        preferred_during_scheduling_ignored_during_execution:
        - preference:
            match_expressions:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            match_fields:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          weight: 0
        - preference:
            match_expressions:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            match_fields:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          weight: 0
        required_during_scheduling_ignored_during_execution:
          node_selector_terms:
          - match_expressions:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            match_fields:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          - match_expressions:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            match_fields:
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
      properties:
        required_during_scheduling_ignored_during_execution:
          $ref: '#/components/schemas/NodeSelector'
        preferred_during_scheduling_ignored_during_execution:
          items:
            $ref: '#/components/schemas/PreferredSchedulingTerm'
          title: preferred_during_scheduling_ignored_during_execution
          type: array
      title: NodeAffinity
      type: object
    NodeSelector:
      example:
        node_selector_terms:
        - match_expressions:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          match_fields:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        - match_expressions:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          match_fields:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
      properties:
        node_selector_terms:
          items:
            $ref: '#/components/schemas/NodeSelectorTerm'
          title: node_selector_terms
          type: array
      title: NodeSelector
      type: object
    NodeSelectorTerm:
      example:
        match_expressions:
        - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        match_fields:
        - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
      properties:
        match_expressions:
          description: |
            An array of node selector rule, the rule can be a match expression,
            referring the example (It is a match expression)
          example:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          items:
            type: string
          title: NodeSelectorRequirement
          type: array
        match_fields:
          description: |
            An array of node selector rule, the rule can be a match expression,
            referring the example (It is a match expression)
          example:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          items:
            type: string
          title: NodeSelectorRequirement
          type: array
      title: NodeSelectorTerm
      type: object
    NodeSelectorRequirement:
      description: |
        An array of node selector rule, the rule can be a match expression,
        referring the example (It is a match expression)
      example:
      - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
      items:
        type: string
      title: NodeSelectorRequirement
      type: array
    PreferredSchedulingTerm:
      example:
        preference:
          match_expressions:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          match_fields:
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        weight: 0
      properties:
        weight:
          title: weight
          type: integer
        preference:
          $ref: '#/components/schemas/NodeSelectorTerm'
      title: PreferredSchedulingTerm
      type: object
    PodAffinity:
      example:
        preferred_during_scheduling_ignored_during_execution:
        - weight: 6
          pod_affinity_term:
            label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
        - weight: 6
          pod_affinity_term:
            label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
        required_during_scheduling_ignored_during_execution:
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          topology_key: topology_key
          namespaces:
          - namespaces
          - namespaces
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          topology_key: topology_key
          namespaces:
          - namespaces
          - namespaces
      properties:
        required_during_scheduling_ignored_during_execution:
          items:
            $ref: '#/components/schemas/PodAffinityTerm'
          title: required_during_scheduling_ignored_during_execution
          type: array
        preferred_during_scheduling_ignored_during_execution:
          items:
            $ref: '#/components/schemas/WeightedPodAffinityTerm'
          title: preferred_during_scheduling_ignored_during_execution
          type: array
      title: PodAffinity
      type: object
    PodAffinityTerm:
      example:
        label_selector:
        - app:demo-app
        - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        topology_key: topology_key
        namespaces:
        - namespaces
        - namespaces
      properties:
        label_selector:
          description: |
            An array of label selector rule, the rule can either be a match label or match expression,
            referring the example (first is a match label, second is a match expression)
          example:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          items:
            type: string
          title: LabelSelector
          type: array
        namespaces:
          items:
            type: string
          title: namespaces
          type: array
        topology_key:
          title: topology_key
          type: string
      title: PodAffinityTerm
      type: object
    WeightedPodAffinityTerm:
      example:
        weight: 6
        pod_affinity_term:
          label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          topology_key: topology_key
          namespaces:
          - namespaces
          - namespaces
      properties:
        weight:
          title: weight
          type: integer
        pod_affinity_term:
          $ref: '#/components/schemas/PodAffinityTerm'
      title: WeightedPodAffinityTerm
      type: object
    PodAntiAffinity:
      example:
        preferred_during_scheduling_ignored_during_execution:
        - weight: 6
          pod_affinity_term:
            label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
        - weight: 6
          pod_affinity_term:
            label_selector:
            - app:demo-app
            - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
            topology_key: topology_key
            namespaces:
            - namespaces
            - namespaces
        required_during_scheduling_ignored_during_execution:
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          topology_key: topology_key
          namespaces:
          - namespaces
          - namespaces
        - label_selector:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          topology_key: topology_key
          namespaces:
          - namespaces
          - namespaces
      properties:
        required_during_scheduling_ignored_during_execution:
          items:
            $ref: '#/components/schemas/PodAffinityTerm'
          title: required_during_scheduling_ignored_during_execution
          type: array
        preferred_during_scheduling_ignored_during_execution:
          items:
            $ref: '#/components/schemas/WeightedPodAffinityTerm'
          title: preferred_during_scheduling_ignored_during_execution
          type: array
      title: PodAntiAffinity
      type: object
    Toleration:
      example:
        effect: NoSchedule
        toleration_seconds: 3600
        value: cache-node
        key: node-role.kubernetes.io/master
        operator: Equal
      properties:
        key:
          description: The taint key that the toleration applies to.
          example: node-role.kubernetes.io/master
          title: key
          type: string
        operator:
          description: The operator of the toleration.
          enum:
          - Equal
          - Exists
          example: Equal
          title: operator
          type: string
        value:
          description: The taint value the toleration matches to.
          example: cache-node
          title: value
          type: string
        effect:
          description: The effect of the toleration.
          enum:
          - NoSchedule
          - PreferNoSchedule
          - NoExecute
          example: NoSchedule
          title: effect
          type: string
        toleration_seconds:
          description: The tolerationSeconds of the toleration.
          example: 3600
          title: toleration_seconds
          type: integer
      title: Toleration
      type: object
    PodSecContext:
      description: The security configuration that will be applied to a pod.
      example:
        run_as_group: 3000
        run_as_user: 1000
        sysctls:
        - name: net.ipv4.ping_group_range
          value: 0 2147483647
        - name: net.ipv4.ping_group_range
          value: 0 2147483647
      properties:
        run_as_user:
          description: The UID to run the entrypoint of the container process.
          example: 1000
          title: run_as_user
          type: integer
        run_as_group:
          description: The GID to run the entrypoint of the container process.
          example: 3000
          title: run_as_group
          type: integer
        sysctls:
          description: Sysctls hold a list of namespaced sysctls used for the pod.
          items:
            $ref: '#/components/schemas/Sysctl'
          title: sysctls
          type: array
      title: PodSecContext
      type: object
    Sysctl:
      example:
        name: net.ipv4.ping_group_range
        value: 0 2147483647
      properties:
        name:
          description: Name of a property to set.
          example: net.ipv4.ping_group_range
          title: name
          type: string
        value:
          description: Value of a property to set.
          example: 0 2147483647
          title: value
          type: string
      title: Sysctl
      type: object
    PersistentVolumeClaim:
      example:
        volume_mode: Filesystem
        request_resources:
          requests:
            memory: 256Mi
            cpu: "0.1"
          limits:
            memory: 512Mi
            cpu: "0.5"
        name: my-pvc
        namespace: gitops-cdn-cache
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        volume_name: my-pv
        storage_class_name: standard
        access_modes:
        - ReadWriteOnce
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: "name of persistent volume claim, used in metadata.name"
          example: my-pvc
          title: name
          type: string
        namespace:
          description: namespace for resource.
          example: gitops-cdn-cache
          title: namespace
          type: string
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        storage_class_name:
          description: Name of the StorageClass for the Persistent Volume Claim
          example: standard
          title: storage_class_name
          type: string
        access_modes:
          description: "List of access modes for the Persistent Volume, e.g. ReadWriteOnce,\
            \ ReadOnlyMany, etc."
          example:
          - ReadWriteOnce
          items:
            type: string
          title: access_modes
          type: array
        volume_name:
          description: Name of the Persistent Volume bound to the claim
          example: my-pv
          title: volume_name
          type: string
        volume_mode:
          description: "Mode of the volume, either \"Filesystem\" or \"Block\""
          example: Filesystem
          title: volume_mode
          type: string
        request_resources:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - name
      title: PersistentVolumeClaim
      type: object
    Service:
      example:
        external_ips:
        - 1.1.1.1
        - 2.2.2.2
        service_type: ClusterIP
        name: demo-app
        namespace: gitops-cdn-cache
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        selector:
        - app:demo-app
        - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        ports:
        - target_port: 8080
          protocol: TCP
          port: 80
          name: http
          app_protocol: HTTP
          node_port: 6500
        - target_port: 8080
          protocol: TCP
          port: 80
          name: http
          app_protocol: HTTP
          node_port: 6500
        cluster_ip: cluster_ip
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: service name
          example: demo-app
          title: name
          type: string
        namespace:
          description: namespace for resource.
          example: gitops-cdn-cache
          title: namespace
          type: string
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        selector:
          description: |
            An array of label selector rule, the rule can either be a match label or match expression,
            referring the example (first is a match label, second is a match expression)
          example:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          items:
            type: string
          title: LabelSelector
          type: array
        service_type:
          enum:
          - ClusterIP
          - NodePort
          - LoadBalancer
          example: ClusterIP
          title: service_type
          type: string
        ports:
          items:
            $ref: '#/components/schemas/ServicePort'
          title: ports
          type: array
        cluster_ip:
          description: Exposes the Service on a cluster-internal IP.
          title: cluster_ip
          type: string
        external_ips:
          description: A list of IP addresses for which nodes in the cluster will
            also accept traffic for this service
          example:
          - 1.1.1.1
          - 2.2.2.2
          items:
            type: string
          title: external_ips
          type: array
      required:
      - name
      title: Service
      type: object
    ServicePort:
      example:
        target_port: 8080
        protocol: TCP
        port: 80
        name: http
        app_protocol: HTTP
        node_port: 6500
      properties:
        name:
          description: |
            The name of this port within the service. This must be a DNS_LABEL.
            All ports within a ServiceSpec must have unique names
          example: http
          title: name
          type: string
        port:
          description: The port that will be exposed by this service
          example: 80
          title: port
          type: integer
        target_port:
          description: The port to access on the pods targeted by the service
          example: 8080
          title: target_port
          type: integer
        node_port:
          description: The port on each node on which this service is exposed when
            type is NodePort or LoadBalancer
          example: 6500
          title: node_port
          type: integer
        protocol:
          description: Defaults to TCP
          enum:
          - TCP
          - UDP
          example: TCP
          title: protocol
          type: string
        app_protocol:
          description: The app_protocol field provides a way to specify an application
            protocol for each Service port
          example: HTTP
          title: app_protocol
          type: string
      required:
      - name
      title: ServicePort
      type: object
    Config:
      example:
        templates:
          template_files:
          - conf/server_template.conf
          values:
            key1: val1
            key2:
            - val2
            - val3
        name: server-conf
        namespace: gitops-cdn-cache
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        files:
        - conf/server.conf
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: The config map name
          example: server-conf
          title: name
          type: string
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        namespace:
          description: namespace for secret.
          example: gitops-cdn-cache
          title: namespace
          type: string
        files:
          description: "the list of config file paths, should follow the name format\
            \ of conf/xxxxx.conf."
          example:
          - conf/server.conf
          items:
            type: string
          title: files
          type: array
        templates:
          $ref: '#/components/schemas/Config_templates'
      title: Config
      type: object
    Secret:
      example:
        name: dingman-secret
        namespace: gitops-cdn-cache
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        files:
        - cert/test-domain.crt
        - cert/cdn-dsa
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: The name of secret.
          example: dingman-secret
          title: name
          type: string
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        namespace:
          description: namespace for secret.
          example: gitops-cdn-cache
          title: namespace
          type: string
        files:
          description: "The list of secret file paths. If the path is a directory,\
            \ all files under the directory will be selected."
          example:
          - cert/test-domain.crt
          - cert/cdn-dsa
          items:
            type: string
          title: files
          type: array
      title: Secret
      type: object
    Ingress:
      example:
        name: demo-app-ingress
        namespace: gitops-cdn-cache
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        rules:
        - paths:
          - path: /bar
            name: ingress-path-bar
            path_type: Exact
            backend:
              service:
                port: 80
                name: demo-app-service
          - path: /bar
            name: ingress-path-bar
            path_type: Exact
            backend:
              service:
                port: 80
                name: demo-app-service
          name: foo-ingress-rule
          host: www.foo.com
        - paths:
          - path: /bar
            name: ingress-path-bar
            path_type: Exact
            backend:
              service:
                port: 80
                name: demo-app-service
          - path: /bar
            name: ingress-path-bar
            path_type: Exact
            backend:
              service:
                port: 80
                name: demo-app-service
          name: foo-ingress-rule
          host: www.foo.com
        tls:
        - secret_name: app-secret
          hosts:
          - www.foo.com
          - www.bar.com
          name: foo-bar-ingress
        - secret_name: app-secret
          hosts:
          - www.foo.com
          - www.bar.com
          name: foo-bar-ingress
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: ingress name.
          example: demo-app-ingress
          title: name
          type: string
        namespace:
          description: namespace for resource.
          example: gitops-cdn-cache
          title: namespace
          type: string
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        rules:
          items:
            $ref: '#/components/schemas/IngressRule'
          title: rules
          type: array
        tls:
          items:
            $ref: '#/components/schemas/IngressTLS'
          title: tls
          type: array
      required:
      - name
      title: Ingress
      type: object
    IngressRule:
      example:
        paths:
        - path: /bar
          name: ingress-path-bar
          path_type: Exact
          backend:
            service:
              port: 80
              name: demo-app-service
        - path: /bar
          name: ingress-path-bar
          path_type: Exact
          backend:
            service:
              port: 80
              name: demo-app-service
        name: foo-ingress-rule
        host: www.foo.com
      properties:
        name:
          description: The rule name.
          example: foo-ingress-rule
          title: name
          type: string
        host:
          description: A fully qualified domain name of a network host.
          example: www.foo.com
          title: host
          type: string
        paths:
          items:
            $ref: '#/components/schemas/HTTPIngressPath'
          title: paths
          type: array
      title: IngressRule
      type: object
    HTTPIngressPath:
      example:
        path: /bar
        name: ingress-path-bar
        path_type: Exact
        backend:
          service:
            port: 80
            name: demo-app-service
      properties:
        name:
          description: The ingress path name.
          example: ingress-path-bar
          title: name
          type: string
        path:
          description: The path that is matched against the path of an incoming request.
            Must begin with a '/'.
          example: /bar
          title: path
          type: string
        path_type:
          description: PathType determines the interpretation of the Path matching.
          enum:
          - Exact
          - Prefix
          - ImplementationSpecific
          example: Exact
          title: path_type
          type: string
        backend:
          $ref: '#/components/schemas/IngressBackend'
      title: HTTPIngressPath
      type: object
    IngressBackend:
      example:
        service:
          port: 80
          name: demo-app-service
      properties:
        service:
          $ref: '#/components/schemas/IngressBackend_service'
      title: IngressBackend
      type: object
    IngressTLS:
      example:
        secret_name: app-secret
        hosts:
        - www.foo.com
        - www.bar.com
        name: foo-bar-ingress
      properties:
        name:
          description: Name of the TLS config.
          example: foo-bar-ingress
          title: name
          type: string
        hosts:
          description: A list of hosts included in the TLS certificate.
          example:
          - www.foo.com
          - www.bar.com
          items:
            type: string
          title: hosts
          type: array
        secret_name:
          description: The name of the secret used to terminate TLS traffic on port
            443.
          example: app-secret
          title: secret_name
          type: string
      title: IngressTLS
      type: object
    ServiceMonitor:
      example:
        namespace_selector:
          match_names:
          - default
          any: true
        endpoints:
        - honor_labels: true
          path: /metrics
          target_port: 8080
          relabelings:
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          metric_relabelings:
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          scheme: http
          port: 8080
          honor_timestamps: true
          scrape_timeout: 10s
          interval: 30s
          params:
            module:
            - http_2xx
        - honor_labels: true
          path: /metrics
          target_port: 8080
          relabelings:
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          metric_relabelings:
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          - regex: (.*)
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            separator: ;
            replacement: $1
            target_label: __metrics_path__
          scheme: http
          port: 8080
          honor_timestamps: true
          scrape_timeout: 10s
          interval: 30s
          params:
            module:
            - http_2xx
        name: my-service-monitor
        namespace: gitops-cdn-cache
        annotations:
        - annotation-key1:val1
        - annotation-key2:val2
        selector:
        - app:demo-app
        - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: "name of service monitor, used in metadata.name"
          example: my-service-monitor
          title: name
          type: string
        namespace:
          description: namespace for resource.
          example: gitops-cdn-cache
          title: namespace
          type: string
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        annotations:
          description: An unstructured key value map that can be used to attach arbitrary
            metadata
          example:
          - annotation-key1:val1
          - annotation-key2:val2
          items:
            type: string
          title: Annotations
          type: array
        endpoints:
          items:
            $ref: '#/components/schemas/Endpoint'
          title: endpoints
          type: array
        selector:
          description: |
            An array of label selector rule, the rule can either be a match label or match expression,
            referring the example (first is a match label, second is a match expression)
          example:
          - app:demo-app
          - "key:version, operator:In, values:[v1.0.0, v1.0.1]"
          items:
            type: string
          title: LabelSelector
          type: array
        namespace_selector:
          $ref: '#/components/schemas/ServiceMonitor_namespace_selector'
      required:
      - name
      title: ServiceMonitor
      type: object
    Endpoint:
      example:
        honor_labels: true
        path: /metrics
        target_port: 8080
        relabelings:
        - regex: (.*)
          source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_name
          action: replace
          separator: ;
          replacement: $1
          target_label: __metrics_path__
        - regex: (.*)
          source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_name
          action: replace
          separator: ;
          replacement: $1
          target_label: __metrics_path__
        metric_relabelings:
        - regex: (.*)
          source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_name
          action: replace
          separator: ;
          replacement: $1
          target_label: __metrics_path__
        - regex: (.*)
          source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_name
          action: replace
          separator: ;
          replacement: $1
          target_label: __metrics_path__
        scheme: http
        port: 8080
        honor_timestamps: true
        scrape_timeout: 10s
        interval: 30s
        params:
          module:
          - http_2xx
      properties:
        honor_labels:
          description: honorLabels chooses the metric's labels on collisions with
            target labels.
          example: true
          title: honor_labels
          type: boolean
        interval:
          description: Interval at which metrics should be scraped
          example: 30s
          title: interval
          type: string
        scrape_timeout:
          description: Timeout after which the scrape is ended
          example: 10s
          title: scrape_timeout
          type: string
        path:
          description: HTTP path to scrape for metrics.
          example: /metrics
          title: path
          type: string
        scheme:
          description: HTTP scheme to use for scraping.
          example: http
          title: scheme
          type: string
        target_port:
          description: "Number of the target port of the Pod behind the Service, the\
            \ port must be specified with container port property. Mutually exclusive\
            \ with port."
          example: 8080
          title: target_port
          type: integer
        params:
          additionalProperties:
            items:
              type: string
            type: array
          description: Params is a set of URL parameters to be appended to the scrape
            URL before scraping.
          example:
            module:
            - http_2xx
          title: params
          type: object
        relabelings:
          items:
            $ref: '#/components/schemas/RelabelConfig'
          title: relabelings
          type: array
        port:
          description: Name of the service port this endpoint refers to. Mutually
            exclusive with targetPort.
          example: 8080
          title: port
          type: integer
        honor_timestamps:
          description: honorTimestamps controls whether Prometheus respects the timestamps
            present in scraped data.
          example: true
          title: honor_timestamps
          type: boolean
        metric_relabelings:
          items:
            $ref: '#/components/schemas/RelabelConfig'
          title: metric_relabelings
          type: array
      title: Endpoint
      type: object
    RelabelConfig:
      example:
        regex: (.*)
        source_labels:
        - __meta_kubernetes_pod_label_app_kubernetes_io_name
        action: replace
        separator: ;
        replacement: $1
        target_label: __metrics_path__
      properties:
        source_labels:
          description: SourceLabels selects labels from the source
          example:
          - __meta_kubernetes_pod_label_app_kubernetes_io_name
          items:
            type: string
          title: source_labels
          type: array
        separator:
          description: Separator placed between concatenated source labels.
          example: ;
          title: separator
          type: string
        regex:
          description: Regular expression against which the extracted value is matched.
            Default is (.*)
          example: (.*)
          title: regex
          type: string
        replacement:
          description: Replacement value against which a regex replace is performed
            if the regular expression matches. Regex capture groups are available.
          example: $1
          title: replacement
          type: string
        target_label:
          description: Label to which the resulting value is written in a replace
            action.
          example: __metrics_path__
          title: target_label
          type: string
        action:
          description: Action to perform based on regex matching.
          example: replace
          title: action
          type: string
      title: RelabelConfig
      type: object
    Role:
      example:
        kind: Role
        name: cm-writer
        namespace: namespace
        rules:
        - api_groups: ""
          resources: configmaps
          verbs:
          - create
          - patch
          - update
          - get
        - api_groups: ""
          resources: configmaps
          verbs:
          - create
          - patch
          - update
          - get
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: name of Role or ClusterRole
          example: cm-writer
          title: name
          type: string
        kind:
          description: "kind of Role, value supports Role and ClusterRole. Role is\
            \ default."
          enum:
          - Role
          - ClusterRole
          example: Role
          title: kind
          type: string
        namespace:
          description: namespace of Role or ClusterRole
          title: namespace
          type: string
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        rules:
          items:
            $ref: '#/components/schemas/RBACRule'
          title: rules
          type: array
      title: Role
      type: object
    RBACRule:
      example:
        api_groups: ""
        resources: configmaps
        verbs:
        - create
        - patch
        - update
        - get
      properties:
        api_groups:
          description: Specifies the API group for which the permissions are granted.
            An empty string ('') means the core Kubernetes API group.
          example: ""
          items:
            type: string
          title: api_groups
          type: array
        resources:
          description: Specifies the types of resources to which the permissions apply.
          example: configmaps
          items:
            type: string
          title: resources
          type: array
        verbs:
          description: Specifies the allowed actions or verbs that can be performed
            on the specified resources.
          example:
          - create
          - patch
          - update
          - get
          items:
            type: string
          title: verbs
          type: array
      title: RBACRule
      type: object
    RoleBinding:
      example:
        kind: RoleBinding
        subjects:
        - kind: ServiceAccount
          name: default
          namespace: default
        - kind: ServiceAccount
          name: default
          namespace: default
        name: cm-writer
        namespace: namespace
        role_ref:
          kind: Role
          api_group: rbac.authorization.k8s.io
          name: cm-writer
        labels:
        - app:demo-app
        - version:v1.0.0
      properties:
        name:
          description: name of RoleBinding or ClusterRoleBinding
          example: cm-writer
          title: name
          type: string
        kind:
          description: "kind of RoleBinding, value supports RoleBinding and ClusterRoleBinding.\
            \ RoleBinding is default."
          enum:
          - RoleBinding
          - ClusterRoleBinding
          example: RoleBinding
          title: kind
          type: string
        namespace:
          description: namespace of RoleBinding or ClusterRoleBinding
          title: namespace
          type: string
        labels:
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects
          example:
          - app:demo-app
          - version:v1.0.0
          items:
            type: string
          title: Labels
          type: array
        role_ref:
          $ref: '#/components/schemas/RBACRoleRef'
        subjects:
          items:
            $ref: '#/components/schemas/RoleBindingSubject'
          title: subjects
          type: array
      title: RoleBinding
      type: object
    RBACRoleRef:
      example:
        kind: Role
        api_group: rbac.authorization.k8s.io
        name: cm-writer
      properties:
        api_group:
          description: Specifies the API group for the role being referenced.
          example: rbac.authorization.k8s.io
          title: api_group
          type: string
        kind:
          description: Indicates the type of the referenced role.
          example: Role
          title: kind
          type: string
        name:
          description: The name of the role being referenced.
          example: cm-writer
          title: name
          type: string
      title: RBACRoleRef
      type: object
    RoleBindingSubject:
      example:
        kind: ServiceAccount
        name: default
        namespace: default
      properties:
        kind:
          description: Indicates the type of the subject
          example: ServiceAccount
          title: kind
          type: string
        name:
          description: The name of the subject
          example: default
          title: name
          type: string
        namespace:
          description: The namespace of the subject
          example: default
          title: namespace
          type: string
      title: RoleBindingSubject
      type: object
    ServiceAccount:
      example:
        name: default
        namespace: system
      properties:
        name:
          description: Name of the ServiceAccount.
          example: default
          title: name
          type: string
        namespace:
          description: Namespace of the ServiceAccount.
          example: system
          title: namespace
          type: string
      required:
      - name
      title: ServiceAccount
      type: object
    CustomManifest:
      example:
        file: downward-ats-prod-for-cdg1b.yaml
        name: downward-ats-prod
      properties:
        name:
          description: "name of the custom_manifest deploy resource, which works as\
            \ the identifier of the deploy-res, deploy-res-overlay and patch operation."
          example: downward-ats-prod
          title: name
          type: string
        file:
          description: source file name of the custom_manifest deploy resource.
          example: downward-ats-prod-for-cdg1b.yaml
          title: file
          type: string
      title: CustomManifest
      type: object
    DeployResourceOverlays:
      additionalProperties:
        $ref: '#/components/schemas/DeployResources'
      type: object
    DeployPlatformResources:
      items:
        $ref: '#/components/schemas/DeployPlatformResource'
      type: array
    DeployPlatformResource:
      example:
        pop: ams1
        cpu_requested: 1000
        cpu_used: 500
        cpu_limit: 2000
        memory_used: 5000
        memory_requested: 10000
        platform: BGE
        space: gss
        storage_requested: 10
        storage_used: 5
      properties:
        platform:
          description: Name of the deploy platform.
          example: BGE
          title: platform
          type: string
        pop:
          description: Name of the pop.
          example: ams1
          title: pop
          type: string
        space:
          description: Name of the deploy space.
          example: gss
          title: space
          type: string
        cpu_requested:
          description: "The CPU Quota requested for the deploy space. The unit is\
            \ milicpu, 1 core equals 1000."
          example: 1000
          title: cpu_requested
          type: integer
        cpu_limit:
          description: "The max possibly CPU that can be utilized by the deploy space.\
            \ The unit is milicpu, 1 core equals 1000."
          example: 2000
          title: cpu_limit
          type: integer
        cpu_used:
          description: "The CPU amount used in the deploy space. The unit is milicpu,\
            \ 1 core equals 1000."
          example: 500
          title: cpu_used
          type: integer
        memory_requested:
          description: The memory Quota requested for the deploy space. The unit is
            MB.
          example: 10000
          title: memory_requested
          type: integer
        memory_used:
          description: The memory amount used in the deploy space. The unit is MB.
          example: 5000
          title: memory_used
          type: integer
        storage_requested:
          description: The storage Quota requested for the deploy space. The unit
            is GB.
          example: 10
          title: storage_requested
          type: integer
        storage_used:
          description: The storage amount used in the deploy space. The unit is MB.
          example: 5
          title: storage_used
          type: integer
      title: DeployPlatformResource
      type: object
    DeploymentDetail:
      example:
        last_deployment:
          time: 2024-01-10T00:35:42Z
          operator: bin.yao@bytedance.com
          auto_sync: true
        cluster: central1
        name: cert-manager-bdj1a
        namespace: gitops-gss
        health: Healthy
        resources:
        - kind: StatefulSet
          name: kafka-controller
          namespace: gitops-gss-mq
          status:
            health: Healthy
            sync: Synced
        - kind: StatefulSet
          name: kafka-controller
          namespace: gitops-gss-mq
          status:
            health: Healthy
            sync: Synced
        platform: BGE
      properties:
        name:
          description: Name of the deployment.
          example: cert-manager-bdj1a
          title: name
          type: string
        platform:
          description: Name of the platform.
          example: BGE
          title: platform
          type: string
        namespace:
          description: Name of the deploy namespace.
          example: gitops-gss
          title: namespace
          type: string
        cluster:
          description: Name of the deployed cluster
          example: central1
          title: cluster
          type: string
        health:
          description: The health status of the deployment
          example: Healthy
          title: health
          type: string
        last_deployment:
          $ref: '#/components/schemas/DeploymentDetail_last_deployment'
        resources:
          items:
            $ref: '#/components/schemas/DeploymentResourceStatus'
          title: resources
          type: array
      title: DeploymentDetail
      type: object
    DeploymentResourceStatus:
      example:
        kind: StatefulSet
        name: kafka-controller
        namespace: gitops-gss-mq
        status:
          health: Healthy
          sync: Synced
      properties:
        name:
          description: Name of the deployment resource
          example: kafka-controller
          title: name
          type: string
        kind:
          description: The kind of deployment resource
          example: StatefulSet
          title: kind
          type: string
        namespace:
          description: The namespace of deployment resource
          example: gitops-gss-mq
          title: namespace
          type: string
        status:
          $ref: '#/components/schemas/DeploymentResourceStatus_status'
      title: DeploymentResourceStatus
      type: object
    UpdateStrategy_rolling_update_config:
      example:
        partition: 2
        max_unavailable: 10% or 2
        max_surge: 10% or 2
      properties:
        max_surge:
          description: "used in Deployment/DaemonSet; The maximum number of pods that\
            \ can be scheduled above the desired number of pods. Value can be an absolute\
            \ number (ex: 5) or a percentage of desired pods (ex: 10%)."
          example: 10% or 2
          title: max_surge
          type: string
        max_unavailable:
          description: "used in Deployment/DaemonSet/StatefulSet; The maximum number\
            \ of pods that can be unavailable during the update; Value can be an absolute\
            \ number (ex: 5) or a percentage of desired pods (ex: 10%)."
          example: 10% or 2
          title: max_unavailable
          type: string
        partition:
          description: "used in StatefulSet; Partition indicates the ordinal at which\
            \ the Workload should be partitioned for updates. During a rolling update,\
            \ all pods from ordinal Partition-1 to Replica are updated. All pods from\
            \ ordinal Partition-1 to 0 remain untouched. "
          example: 2
          title: partition
          type: integer
      title: UpdateStrategy_rolling_update_config
      type: object
    ContainerSecContext_capabilities:
      description: The POSIX capabilities to add/drop when running containers.
      example:
        add:
        - NET_ADMIN
        - SYS_TIME
        drop:
        - NET_ADMIN
        - SYS_TIME
      properties:
        add:
          description: Added capabilities.
          example:
          - NET_ADMIN
          - SYS_TIME
          items:
            type: string
          title: add
          type: array
        drop:
          description: Removed capabilities.
          example:
          - NET_ADMIN
          - SYS_TIME
          items:
            type: string
          title: drop
          type: array
      title: ContainerSecContext_capabilities
      type: object
    Volume_persistent_volume_claim:
      description: |
        Represents a reference to a PersistentVolumeClaim in the same namespace.
        This volume finds the bound PV and mounts that volume for the pod.
      example:
        read_only: false
        claim_name: demo-pvc
      properties:
        claim_name:
          description: ClaimName is the name of a PersistentVolumeClaim in the same
            namespace as the pod using this volume
          example: demo-pvc
          title: claim_name
          type: string
        read_only:
          description: Will force the ReadOnly setting in VolumeMounts
          example: false
          title: read_only
          type: boolean
      title: Volume_persistent_volume_claim
      type: object
    Volume_empty_dir:
      description: Represents a temporary directory that shares a pod's lifetime
      example:
        medium: Memory
        size_limit: 500Mi
      properties:
        medium:
          description: Represents what type of storage medium should back this directory.
            The default is "" which means to use the node's default medium.
          example: Memory
          title: medium
          type: string
        size_limit:
          description: The total amount of local storage required for this EmptyDir
            volume.
          example: 500Mi
          title: size_limit
          type: string
      title: Volume_empty_dir
      type: object
    Volume_host_path:
      description: |
        represents a pre-existing file or directory on the host machine that is directly exposed to the container.
        This is generally used for system agents or other privileged things that are allowed to see the host machine.
      example:
        path: /data
        path_type: Directory
      properties:
        path:
          description: "Path of the directory on the host. If the path is a symlink,\
            \ it will follow the link to the real path"
          example: /data
          title: path
          type: string
        path_type:
          description: Type for HostPath Volume Defaults to ""
          example: Directory
          title: path_type
          type: string
      title: Volume_host_path
      type: object
    Volume_projected_sources_inner_config_map:
      example:
        name: dingman-gts
      properties:
        name:
          description: The name for projected volume config_map source.
          example: dingman-gts
          title: name
          type: string
      title: Volume_projected_sources_inner_config_map
    Volume_projected_sources_inner_secret:
      example:
        name: dingman-gts
      properties:
        name:
          description: The name for projected volume secret source.
          example: dingman-gts
          title: name
          type: string
      title: Volume_projected_sources_inner_secret
    Volume_projected_sources_inner:
      example:
        config_map:
          name: dingman-gts
        secret:
          name: dingman-gts
      properties:
        config_map:
          $ref: '#/components/schemas/Volume_projected_sources_inner_config_map'
        secret:
          $ref: '#/components/schemas/Volume_projected_sources_inner_secret'
      title: Volume_projected_sources_inner
      type: object
    Volume_projected:
      description: |
        A projected volume maps several existing volume sources into the same directory.
      example:
        sources:
        - config_map:
            name: dingman-gts
          secret:
            name: dingman-gts
        - config_map:
            name: dingman-gts
          secret:
            name: dingman-gts
        default_mode: 420
      properties:
        default_mode:
          description: The setting or parameter that determines the default permissions
            for newly created files.
          example: 420
          title: default_mode
          type: integer
        sources:
          items:
            $ref: '#/components/schemas/Volume_projected_sources_inner'
          title: sources
          type: array
      title: Volume_projected
      type: object
    Config_templates:
      example:
        template_files:
        - conf/server_template.conf
        values:
          key1: val1
          key2:
          - val2
          - val3
      properties:
        template_files:
          description: the list of template file path name
          example:
          - conf/server_template.conf
          items:
            type: string
          title: template_files
          type: array
        values:
          additionalProperties: true
          description: The config values for the template files
          example:
            key1: val1
            key2:
            - val2
            - val3
          title: values
          type: object
      title: Config_templates
      type: object
    IngressBackend_service:
      description: References a Service as a Backend.
      example:
        port: 80
        name: demo-app-service
      properties:
        name:
          description: Name of the referenced service.
          example: demo-app-service
          title: name
          type: string
        port:
          description: The numerical port number on the Service.
          example: 80
          title: port
          type: integer
      title: IngressBackend_service
      type: object
    ServiceMonitor_namespace_selector:
      example:
        match_names:
        - default
        any: true
      properties:
        match_names:
          description: matchNames is a list of namespace names. The NamespaceSelector
            matches namespaces based on the names selected by this list.
          example:
          - default
          items:
            type: string
          title: match_names
          type: array
        any:
          description: "any matches any selected namespaces. If true, then none of\
            \ the other match fields can be set."
          example: true
          title: any
          type: boolean
      title: ServiceMonitor_namespace_selector
      type: object
    DeploymentDetail_last_deployment:
      example:
        time: 2024-01-10T00:35:42Z
        operator: bin.yao@bytedance.com
        auto_sync: true
      properties:
        time:
          description: The last deployment operation time
          example: 2024-01-10T00:35:42Z
          title: time
          type: string
        operator:
          description: The last deployment operator
          example: bin.yao@bytedance.com
          title: operator
          type: string
        auto_sync:
          description: Whether or not to automatically sync in last deployment
          title: auto_sync
          type: boolean
      title: DeploymentDetail_last_deployment
      type: object
    DeploymentResourceStatus_status:
      description: The sync and health status of deployment resource
      example:
        health: Healthy
        sync: Synced
      properties:
        health:
          example: Healthy
          title: health
          type: string
        sync:
          example: Synced
          title: sync
          type: string
      title: DeploymentResourceStatus_status
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller_.info_from_bearerAuth
