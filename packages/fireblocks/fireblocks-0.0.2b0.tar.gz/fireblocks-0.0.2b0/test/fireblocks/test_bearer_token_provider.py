"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import pytest
from unittest.mock import patch
import jwt
from uuid import UUID
from fireblocks.bearer_token_provider import BearerTokenProvider

@pytest.fixture
def secret_key():
    with open("test/fireblocks/dummy_test_key.txt", "r") as file:
        return file.read().strip()

@patch('uuid.uuid4', return_value=UUID('12345678-1234-5678-1234-567812345678'))  # Mocked uuid
@patch('time.time', return_value=1609459200)  # Mocked timestamp
def test_get_token_when_post_method(mock_time, mock_uuid, secret_key):
    provider = BearerTokenProvider(api_key="dummy_api_key", secret_key=secret_key)
    token = provider.get_token("POST", "/test/path", {"key": "value"})

    # Assert that the token is a string
    assert isinstance(token, str)
    assert token == 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmkiOiIvdGVzdC9wYXRoIiwibm9uY2UiOiIxMjM0NTY3OC0xMjM0LTU2NzgtMTIzNC01Njc4MTIzNDU2NzgiLCJpYXQiOjE2MDk0NTkyMDAsImV4cCI6MTYwOTQ1OTI1NSwic3ViIjoiZHVtbXlfYXBpX2tleSIsImJvZHlIYXNoIjoiOTcyNGMxZTIwZTZlM2U0ZDdmNTdlZDI1ZjlkNGVmYjAwNmU1MDg1OTBkNTI4YzkwZGE1OTdmNmE3NzVjMTNlNSJ9.ZqEes008u7RlEknfv2fvkmOSPsHElGcmRIZmXl10wOyLkl7u9SPiTCSyGcgRyFUpAA6zMDVpMXkBVUBJyfBU6PcHHliMcjt6N-ZQWYrZ5eVDl3pfukRqM6UQwWrCB2776ScVck2d6o4_vtPd7MHVz4IyornQHaeMlbKfTvtqkh1Tzjc5Ju9L0oouP7LSKTmqhitRISsrGEuY6tfLC0Qi33wfYBrM_prbch86qMpU6kLUSOBmX8camjuyAUwQTqUQSfb8g3iukioCO_5wS3pxVTY8YjrcVdfLNSEbSp1FiSAyUkFJjbW71o9tPE1KD_17nNvsjmZP0o74hNqWlYq1cZHuemHLtfOifM5sX2Trqbh9AeXLkRgf_j9TwKziEaudB7JFjoczlatxKNhyUK3rH-SGPnnrDDcWsmFGYU-uOpAJZ1OnuUNUEmWyjsiLrWvb8xmGa6GbfYMN33cbgVO8YqIhYOm2r3GUhXomuzgnC8VtFM4_2nGNDgT_arvMpGsFPT33UJCDEHKXHJIanHvw0hxvv0hgbp39Dj6_mB-ZEFY5alN4hvGI-7D-ntSV-S1Zz7Jff8kT4fi9yY50WzBOi-W6OkvHvC-EmkMhvoN-OJsWyG9xb1hJvPUsWVR3YPOmJAThrgl-OBh4pi1ez3Ctc3cm0akSUPwbAnNS4l-aefA'

    # Example additional assertion: decode the token without verification to check structure
    decoded_token = jwt.decode(token, options={"verify_signature": False})
    expected_token = {
        "sub": "dummy_api_key",
        "exp": 1609459200 + 55,
        "bodyHash": "9724c1e20e6e3e4d7f57ed25f9d4efb006e508590d528c90da597f6a775c13e5"
    }
    expected_token = {
        "uri": "/test/path",
        "nonce": '12345678-1234-5678-1234-567812345678',
        "iat": 1609459200,
        "exp": 1609459200 + 55,
        "sub": "dummy_api_key",
        "bodyHash": "9724c1e20e6e3e4d7f57ed25f9d4efb006e508590d528c90da597f6a775c13e5",
    }

    assert decoded_token == expected_token

@patch('uuid.uuid4', return_value=UUID('12345678-1234-5678-1234-567812345678'))  # Mocked uuid
@patch('time.time', return_value=1609459200)  # Mocked timestamp
def test_get_token_when_get_method(mock_time, mock_uuid, secret_key):
    provider = BearerTokenProvider(api_key="dummy_api_key", secret_key=secret_key)
    token = provider.get_token("GET", "/test/path", None)

    # Assert that the token is a string
    assert isinstance(token, str)
    assert token == 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmkiOiIvdGVzdC9wYXRoIiwibm9uY2UiOiIxMjM0NTY3OC0xMjM0LTU2NzgtMTIzNC01Njc4MTIzNDU2NzgiLCJpYXQiOjE2MDk0NTkyMDAsImV4cCI6MTYwOTQ1OTI1NSwic3ViIjoiZHVtbXlfYXBpX2tleSIsImJvZHlIYXNoIjoiZTNiMGM0NDI5OGZjMWMxNDlhZmJmNGM4OTk2ZmI5MjQyN2FlNDFlNDY0OWI5MzRjYTQ5NTk5MWI3ODUyYjg1NSJ9.NMjZPQate4EleqtTTThsB7Oro3XjMHfph_CRDnHLY9Y-6Ko48z7A8XdYYrMhtirLgwWa5tX641jHLJpVtVxfC4-PQViRLIRQ0G_ayonVqcTtDyioLtRIjG3AVqxpzsXnnNG27w5V3peuQf5JyBgGPKD4b9Y0FrDTfJiwvQx_cwL-yY9NMU89hw2pskYzNQGmfWaoXYyu57CsNor6h2c5oTC7Du4xWQdjFOfF6t1MYet8WRo-W-MF97caHKJsfzzNFFVYJnaWl248WfvnNDgUhW4IML4kvkPofaDiSlahzmwiUBvaFpKvl3b3fmQ3KzncoxbAfJIYGkevH1XH6jCzNmFx4gFsOpZldivzh4pKdRmZdeoUY2j7fHd7S02mUwDHjl9RCEu1ejZKj-eUnDB_uJqHY8FjAHzdMU9VDtbXF9E00K5YuxOmGGCJrdvFix8fqeMjSM6I9SePGO9-d_MjZ4lhEJPFMNb3FHw0W-s8WLpdlTgPi_8B47IreEExcZPDG_oHwcpWBYlz7DM8RTS3ttVbOmxo6MFCab8z0UtC3avZI_lZX_UxXGoKZiU06mra0P6x9hoDsEktAtCOHRXUfnr_pqWSVKkpiSENWW6-T96jzXPDIsWmxBk90_kznzfo-yCGDFAN-qG6oTLoLnveIwMzNaELCh1XKx6xFCVcdrI'

    # Example additional assertion: decode the token without verification to check structure
    decoded_token = jwt.decode(token, options={"verify_signature": False})
    expected_token = {
        "uri": "/test/path",
        "nonce": '12345678-1234-5678-1234-567812345678',
        "iat": 1609459200,
        "exp": 1609459200 + 55,
        "sub": "dummy_api_key",
        "bodyHash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    }

    assert decoded_token == expected_token
