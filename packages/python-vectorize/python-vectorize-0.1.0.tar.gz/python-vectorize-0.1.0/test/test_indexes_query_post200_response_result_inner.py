# coding: utf-8

"""
    vectorize.sh API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from python-vectorize.models.indexes_query_post200_response_result_inner import IndexesQueryPost200ResponseResultInner

class TestIndexesQueryPost200ResponseResultInner(unittest.TestCase):
    """IndexesQueryPost200ResponseResultInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndexesQueryPost200ResponseResultInner:
        """Test IndexesQueryPost200ResponseResultInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndexesQueryPost200ResponseResultInner`
        """
        model = IndexesQueryPost200ResponseResultInner()
        if include_optional:
            return IndexesQueryPost200ResponseResultInner(
                document = '',
                embedding = None,
                id = 1.337,
                metadata = {
                    'key' : ''
                    },
                score = 1.337,
                sparse_embedding = None
            )
        else:
            return IndexesQueryPost200ResponseResultInner(
                document = '',
                id = 1.337,
                metadata = {
                    'key' : ''
                    },
                score = 1.337,
        )
        """

    def testIndexesQueryPost200ResponseResultInner(self):
        """Test IndexesQueryPost200ResponseResultInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
