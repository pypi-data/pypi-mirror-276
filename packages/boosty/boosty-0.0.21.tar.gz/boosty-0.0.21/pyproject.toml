[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "boosty"
description = "Asynchronous boosty wrapper with some utils"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["boosty", "wrapper", "asyncio"]
authors = [
  { name = "barsikus007" }
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies  = [
    "pydantic[email]~=2.5.3",
    "aiohttp~=3.9.1",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/barsikus007/boosty#readme"
Issues = "https://github.com/barsikus007/boosty/issues"
Source = "https://github.com/barsikus007/boosty"

[project.optional-dependencies]
logging = ["loguru~=0.7.2"]
dotenv = ["python-dotenv~=1.0.0"]
fast = ["orjson~=3.9.10", "aiohttp[speedups]~=3.9.1"]
all = ["boosty[logging,dotenv,fast]"]


[tool.hatch.version]
path = "boosty/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-asyncio",
]
features = [
  "all",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=boosty --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311", "312"]

[tool.coverage.run]
branch = true
parallel = true
omit = []

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "A003",    # cause schema have id fields
  "N815",    # cause schema in camelCase

  "ANN001",  # for default=True like vars
  "ANN101",  # for self
  "ANN102",  # for cls
  "ANN201",  # for handlers return
  "ANN204",  # for __init__ return None
  "ANN401",  # for Any
  "EM101", "TRY003",  # for strings in exceptions
  "D", "TD", "FIX",  # for TODOs
  "ERA",     # for commented code
  "RET502",  # for return without None
  "RET503",  # for function without return
  "RUF001",  # for cyrillic
]
