Metadata-Version: 2.1
Name: jamaibase
Version: 0.0.1
Summary: JamAI Base: Let Your Database Orchestrate LLMs and RAG
License: Apache 2.0
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Intended Audience :: Information Technology
Classifier: Operating System :: Unix
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: httpx>=0.25.0
Requires-Dist: loguru>=0.7.2
Requires-Dist: numpy>=1.26.0
Requires-Dist: orjson>=3.9.7
Requires-Dist: Pillow>=10.0.1
Requires-Dist: pyarrow>=15.0.0
Requires-Dist: pydantic-settings>=2.0.3
Requires-Dist: pydantic>=2.4.2
Requires-Dist: sqlmodel>=0.0.16
Requires-Dist: srsly>=2.4.8
Requires-Dist: toml>=0.10.2
Requires-Dist: tqdm>=4.66.1
Requires-Dist: typing_extensions>=4.10.0
Requires-Dist: uuid-utils~=0.6.1
Requires-Dist: uuid7~=0.1.0
Provides-Extra: lint
Requires-Dist: black~=24.4.2; extra == "lint"
Requires-Dist: flake8~=7.0.0; extra == "lint"
Provides-Extra: test
Requires-Dist: flaky~=3.7.0; extra == "test"
Requires-Dist: mypy~=1.5.1; extra == "test"
Requires-Dist: pytest-asyncio>=0.21.1; extra == "test"
Requires-Dist: pytest-cov~=4.1.0; extra == "test"
Requires-Dist: pytest~=7.4.2; extra == "test"
Provides-Extra: docs
Requires-Dist: furo~=2023.9.10; extra == "docs"
Requires-Dist: myst-parser~=2.0.0; extra == "docs"
Requires-Dist: sphinx-autobuild~=2021.3.14; extra == "docs"
Requires-Dist: sphinx-copybutton~=0.5.2; extra == "docs"
Requires-Dist: sphinx~=7.2.6; extra == "docs"
Requires-Dist: sphinx_rtd_theme~=1.3.0; extra == "docs"
Provides-Extra: build
Requires-Dist: build; extra == "build"
Requires-Dist: twine; extra == "build"
Provides-Extra: all
Requires-Dist: jamaibase[build,docs,lint,test]; extra == "all"

# JamAI Base: Let Your Database Orchestrate LLMs and RAG

## Usage

### JamAI Client

You can use `JamAI` to call into all of the APIs using Python. It has complete type-hinting for easy development in an IDE.

```python
from jamaibase import JamAI


client = JamAI()
print(client.api_base)
```

#### API base

The main parameter to change is `api_key` (and `api_base` for OSS) when instantiating the client, which can be changed in 3 ways (from highest priority to least priority):

- Passing it as `str` argument

  ```python
  from jamaibase import JamAI

  # Cloud
  client = JamAI(api_key="...")
  print(client.api_base)

  # OSS
  client = JamAI(api_key="...", api_base="...")
  print(client.api_base)
  ```

- Specifying it as environment variable named `JAMAI_API_KEY` and `JAMAI_API_BASE`
- Specifying it in `.env` file as `JAMAI_API_KEY` and `JAMAI_API_BASE`

## OSS Setup

Please refer to [our GitHub repo for details](https://github.com/EmbeddedLLM/JamAIBase).
