Metadata-Version: 2.1
Name: pymnet
Version: 0.2.0
Summary: Multilayer network analysis library for Python
Author-email: Mikko Kivel√§ <mikko.kivela@iki.fi>
License: GPLv3
Project-URL: homepage, https://mnets.github.io/pymnet/
Project-URL: documentation, https://mnets.github.io/pymnet/
Project-URL: repository, https://github.com/mnets/pymnet
Project-URL: bug-tracker, https://github.com/mnets/pymnet/issues
Keywords: Complex Networks,Networks,network,Graphs,Graph Theory,graph,Multilayer Networks,multilayer network
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: matplotlib >=3.8.0
Requires-Dist: numpy >=1.26.1
Requires-Dist: scipy >=1.11.1
Requires-Dist: networkx <4.0,>=2.0
Requires-Dist: bliss-bind >=0.2.0 ; (sys_platform == "darwin" or ((platform_machine == "x86_64" and sys_platform == "linux") or (platform_machine == "amd64" and sys_platform == "win32"))) and python_version >= "3.8"
Provides-Extra: test
Requires-Dist: coverage >=7.0 ; extra == 'test'

# pymnet: Multilayer Network Analysis in Python #

[![codecov](https://codecov.io/gh/mnets/pymnet/graph/badge.svg?token=LI6QBAF7N0)](https://codecov.io/gh/mnets/pymnet)

### What is this repository for? ###

* Multilayer network analysis library for Python
* [Documentation](http://mkivela.com/pymnet/)
* [Tutorial](http://mkivela.com/pymnet/tutorial.html) for getting started.

### Main features ###

* Pure Python
* Can handle general [multilayer networks](http://comnet.oxfordjournals.org/content/2/3/203)
* Multilayer networks and multiplex networks (with automatically generated lazy-evaluation coupling edges)
* Functionality: Analysis, transformations, reading and writing networks, network models etc.
* Visualization (using Matplotlib)
* Integration with [NetworkX](https://networkx.github.io/) for monoplex network analysis


### Contribution guidelines ###

* Contributions welcome
* Please write unit tests and add them to the testing framework
* Documentation using Python docstring and Sphinx


### Who do I talk to? ###

* The main developer: [Mikko Kivela](http://www.mkivela.com/)
