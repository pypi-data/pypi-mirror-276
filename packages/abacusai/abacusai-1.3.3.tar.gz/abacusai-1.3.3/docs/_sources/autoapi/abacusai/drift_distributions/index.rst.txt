abacusai.drift_distributions
============================

.. py:module:: abacusai.drift_distributions


Classes
-------

.. autoapisummary::

   abacusai.drift_distributions.DriftDistribution
   abacusai.drift_distributions.AbstractApiClass
   abacusai.drift_distributions.DriftDistributions


Module Contents
---------------

.. py:class:: DriftDistribution(client, trainColumn=None, predictedColumn=None, metrics=None, distribution={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   How actuals or predicted values have changed in the training data versus predicted data

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param trainColumn: The feature name in the train table.
   :type trainColumn: str
   :param predictedColumn: The feature name in the prediction table.
   :type predictedColumn: str
   :param metrics: Drift measures.
   :type metrics: dict
   :param distribution: A FeatureDistribution, how the training data compares to the predicted data.
   :type distribution: FeatureDistribution


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



.. py:class:: AbstractApiClass(client, id)

   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: _get_attribute_as_dict(attribute)


.. py:class:: DriftDistributions(client, labelDrift={}, predictionDrift={}, bpPredictionDrift={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   For either actuals or predicted values, how it has changed in the training data versus some specified window

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param labelDrift: A DriftDistribution describing column names and the range of values for label drift.
   :type labelDrift: DriftDistribution
   :param predictionDrift: A DriftDistribution describing column names and the range of values for prediction drift.
   :type predictionDrift: DriftDistribution
   :param bpPredictionDrift: A DriftDistribution describing column names and the range of values for prediction drift, when the predictions come from BP.
   :type bpPredictionDrift: DriftDistribution


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



