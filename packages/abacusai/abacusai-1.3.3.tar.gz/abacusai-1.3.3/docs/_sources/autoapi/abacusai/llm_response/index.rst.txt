abacusai.llm_response
=====================

.. py:module:: abacusai.llm_response


Classes
-------

.. autoapisummary::

   abacusai.llm_response.LlmCodeBlock
   abacusai.llm_response.AbstractApiClass
   abacusai.llm_response.LlmResponse


Module Contents
---------------

.. py:class:: LlmCodeBlock(client, language=None, code=None, start=None, end=None, valid=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Parsed code block from an LLM response

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param language: The language of the code block. Eg - python/sql/etc.
   :type language: str
   :param code: source code string
   :type code: str
   :param start: index of the starting character of the code block in the original response
   :type start: int
   :param end: index of the last character of the code block in the original response
   :type end: int
   :param valid: flag denoting whether the soruce code string is syntactically valid
   :type valid: bool


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



.. py:class:: AbstractApiClass(client, id)

   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: _get_attribute_as_dict(attribute)


.. py:class:: LlmResponse(client, content=None, tokens=None, stopReason=None, llmName=None, codeBlocks={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   The response returned by LLM

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param content: Full response from LLM.
   :type content: str
   :param tokens: The number of tokens in the response.
   :type tokens: int
   :param stopReason: The reason due to which the response generation stopped.
   :type stopReason: str
   :param llmName: The name of the LLM model used to generate the response.
   :type llmName: str
   :param codeBlocks: A list of parsed code blocks from raw LLM Response
   :type codeBlocks: LlmCodeBlock


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



