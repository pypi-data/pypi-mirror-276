abacusai.use_case
=================

.. py:module:: abacusai.use_case


Classes
-------

.. autoapisummary::

   abacusai.use_case.AbstractApiClass
   abacusai.use_case.UseCase


Module Contents
---------------

.. py:class:: AbstractApiClass(client, id)

   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: _get_attribute_as_dict(attribute)


.. py:class:: UseCase(client, useCase=None, prettyName=None, description=None, problemType=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A Project Use Case

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param useCase: The enum value for this use case
   :type useCase: str
   :param prettyName: A user-friendly name
   :type prettyName: str
   :param description: A description for this use case
   :type description: str
   :param problemType: Name for the underlying problem type
   :type problemType: str


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



