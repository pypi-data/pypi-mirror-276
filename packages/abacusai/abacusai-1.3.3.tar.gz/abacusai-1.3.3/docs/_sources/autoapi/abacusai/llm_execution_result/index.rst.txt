abacusai.llm_execution_result
=============================

.. py:module:: abacusai.llm_execution_result


Classes
-------

.. autoapisummary::

   abacusai.llm_execution_result.ExecuteFeatureGroupOperation
   abacusai.llm_execution_result.LlmExecutionPreview
   abacusai.llm_execution_result.AbstractApiClass
   abacusai.llm_execution_result.LlmExecutionResult


Module Contents
---------------

.. py:class:: ExecuteFeatureGroupOperation(client, featureGroupOperationRunId=None, status=None, error=None, query=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   The result of executing a SQL query

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param featureGroupOperationRunId: The run id of the operation
   :type featureGroupOperationRunId: str
   :param status: The status of the operation
   :type status: str
   :param error: The error message if the operation failed
   :type error: str
   :param query: The SQL query of the operation
   :type query: str


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



   .. py:method:: wait_for_results(timeout=3600, delay=2)

      A waiting call until query is executed.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int
      :param delay: Polling interval for checking timeout.
      :type delay: int



   .. py:method:: wait_for_execution(timeout=3600, delay=2)

      A waiting call until query is executed.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int
      :param delay: Polling interval for checking timeout.
      :type delay: int



   .. py:method:: get_status()

      Gets the status of the query execution

      :returns: A string describing the status of a query execution (pending, complete, etc.).
      :rtype: str



   .. py:method:: refresh()

      Calls describe and refreshes the current object's fields

      :returns: The current object
      :rtype: DatasetVersion



   .. py:method:: describe()

      Gets the description of the query execution

      :returns: A ExecuteFeatureGroupOperation object describing the query execution.
      :rtype: ExecuteFeatureGroupOperation



   .. py:method:: _download_avro_file(file_part, tmp_dir, part_index)


   .. py:method:: load_as_pandas(max_workers=10)

      Loads the result data into a pandas dataframe

      :param max_workers: The number of threads.
      :type max_workers: int

      :returns: A pandas dataframe displaying the data from execution.
      :rtype: DataFrame



.. py:class:: LlmExecutionPreview(client, error=None, sql=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Preview of executing queries using LLM.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param error: The error message if the preview failed.
   :type error: str
   :param sql: Preview of SQL query generated by LLM.
   :type sql: str


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



.. py:class:: AbstractApiClass(client, id)

   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: _get_attribute_as_dict(attribute)


.. py:class:: LlmExecutionResult(client, status=None, error=None, execution={}, preview={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Results of executing queries using LLM.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param status: The status of the execution.
   :type status: str
   :param error: The error message if the execution failed.
   :type error: str
   :param execution: Information on execution of the query.
   :type execution: ExecuteFeatureGroupOperation
   :param preview: Preview of executing queries using LLM.
   :type preview: LlmExecutionPreview


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



