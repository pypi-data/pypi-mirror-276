[tool.poetry]
name = "continualtrain"
version = "0.0.0"
description = "Train CL models in a Docker container"
authors = ["Nishant S. Aswani <nishantaswani@nyu.edu>"]
license = "MIT"
readme = "README.md"
packages = [
    # {include = "continualTrain"}, 
    {include = "continualUtils"},
]

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.8.1,<3.11"
tomlkit = { version = "*"}
requests = { version = "*"}
spython = { version = "*"}
typer = {version = "*", extras = ["all"]}

[tool.poetry.group.torch]
optional = true

[tool.poetry.group.torch.dependencies]
torch = {version = ">=2.1.0", source = "torch", markers = "sys_platform == 'linux'"}
torchvision = {version = "*", source = "torch", markers = "sys_platform == 'linux'"}
numpy = {version = "*"}
captum = {version = "^0.7.0"}
ffcv = {version = "*"}
cupy-cuda11x = {version = "*"}
numba = {version = "*"}
tbb = {version = "*"}

[tool.poetry.group.docker]
optional = true

[tool.poetry.group.docker.dependencies]
pylint = { version = "*"}
GPUtil = { version = "*"}
pluggy = { version = "*"}
shortuuid = { version = "*"}
natsort = { version = "*"}
protobuf = { version = "3.20.*"}
avalanche-lib = { version = "0.5.0"}
# avalanche-lib = { git = "https://github.com/ContinualAI/avalanche.git", rev = "6e5e3b2", allow-prereleases=true}
transformers = "^4.35"
torchattacks = { version = "*"}
# continualUtils = { path = "./app/continualUtils/", develop = true }

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
datasets = "^2.14.5"
pytest = "^7.4"
grad-cam = "^1.4.8"
# opencv-python-headless = "*"
ipytest = "*"
torchviz = "^0.0.2"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.26.0"

[tool.poetry.scripts]
barracks = "continualTrain.api.entry:app"
devtest = "tests.run_tests:main"

[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py310"
# include = '\.pyi?$'

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
