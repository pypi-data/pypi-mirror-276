# coding: utf-8

"""
    Sweego API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.6.5a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sweego.models.response_email_data_logs_swg_uid_get import ResponseEmailDataLogsSwgUidGet

class TestResponseEmailDataLogsSwgUidGet(unittest.TestCase):
    """ResponseEmailDataLogsSwgUidGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseEmailDataLogsSwgUidGet:
        """Test ResponseEmailDataLogsSwgUidGet
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseEmailDataLogsSwgUidGet`
        """
        model = ResponseEmailDataLogsSwgUidGet()
        if include_optional:
            return ResponseEmailDataLogsSwgUidGet(
                accepted = '',
                bounce_type = '',
                bounced = '',
                campaign_id = '',
                campaign_tags = '',
                client_ip = '',
                deferred = '',
                domain_from = '',
                domain_to = '',
                dry_run = True,
                email_creation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                email_from = None,
                email_last_update = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                email_state = '',
                email_to = None,
                headers = {
                    'key' : ''
                    },
                ip_output = '',
                last_event_type = 56,
                msp = '',
                origin_ip = '',
                rejected = '',
                status = 'queued',
                subject = '',
                swg_uid = '',
                msg = ''
            )
        else:
            return ResponseEmailDataLogsSwgUidGet(
                campaign_id = '',
                dry_run = True,
                email_creation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                email_last_update = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ip_output = '',
                last_event_type = 56,
                origin_ip = '',
                status = 'queued',
                swg_uid = '',
                msg = '',
        )
        """

    def testResponseEmailDataLogsSwgUidGet(self):
        """Test ResponseEmailDataLogsSwgUidGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
