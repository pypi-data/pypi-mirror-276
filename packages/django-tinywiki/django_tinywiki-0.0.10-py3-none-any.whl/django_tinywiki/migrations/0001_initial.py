# Generated by Django 4.2.7 on 2024-02-15 21:55

from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import pathlib


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WikiLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('is_builtin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WikiPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=512, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('content', models.TextField(blank=True)),
                ('contentfile_md5', models.CharField(default=None, max_length=32, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('edited_reason', models.CharField(blank=True, max_length=1024, null=True)),
                ('userlock', models.BooleanField(default=False)),
                ('editlock', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tinywiki_pages_created', to=settings.AUTH_USER_MODEL)),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tinywiki_pages_edited', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tinywiki_pages', to='django_tinywiki.wikilanguage')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tinywiki_pages_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('tinywiki-create-page', 'User can create pages'), ('tinywiki-delete-page', 'User can delete pages'), ('tinywiki-edit-page', 'User can edit all pages'), ('tinywiki-edit-user-page', 'User can edit the pages he owns')],
            },
        ),
        migrations.CreateModel(
            name='WikiImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('builtin_id', models.IntegerField(null=True, unique=True)),
                ('alt', models.CharField(max_length=1024)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('image', models.ImageField(storage=django.core.files.storage.FileSystemStorage(base_url='/media/wiki/', location=pathlib.PureWindowsPath('C:/msys64/home/c9mos/projekte/django/django-tinywiki/media/wiki')), upload_to='images/original')),
                ('image_wiki', models.ImageField(null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/wiki/', location=pathlib.PureWindowsPath('C:/msys64/home/c9mos/projekte/django/django-tinywiki/media/wiki')), upload_to='images/wiki')),
                ('image_preview', models.ImageField(null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/wiki/', location=pathlib.PureWindowsPath('C:/msys64/home/c9mos/projekte/django/django-tinywiki/media/wiki')), upload_to='images/preview')),
                ('image_sidebar', models.ImageField(null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/wiki/', location=pathlib.PureWindowsPath('C:/msys64/home/c9mos/projekte/django/django-tinywiki/media/wiki')), upload_to='images/sidebar')),
                ('uploaded_on', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tinywiki_image_uploads', to=settings.AUTH_USER_MODEL)),
                ('wiki_page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='django_tinywiki.wikipage')),
            ],
        ),
        migrations.CreateModel(
            name='WikiPageBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=512)),
                ('title', models.CharField(max_length=512)),
                ('content', models.TextField(blank=True)),
                ('created_on', models.DateTimeField()),
                ('edited_on', models.DateTimeField()),
                ('edited_reason', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tinyiwki_pagebackups_created', to=settings.AUTH_USER_MODEL)),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tinywiki_pagebackups_edited', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tinywiki_backup_pages', to='django_tinywiki.wikilanguage')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tinywiki_pagebackups_user', to=settings.AUTH_USER_MODEL)),
                ('wiki_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='django_tinywiki.wikipage')),
            ],
            options={
                'indexes': [models.Index(fields=['slug'], name='tinywiki_wpb_slug_index'), models.Index(fields=['user'], name='tinywiki_wpb_user_index'), models.Index(fields=['edited_by'], name='tinywiki_wpb_eby_index'), models.Index(fields=['edited_on'], name='tinywiki_wpb_eon_index'), models.Index(fields=['created_by'], name='tinywiki_wpb_cby_index'), models.Index(fields=['created_on'], name='tinywiki_wpb_con_index'), models.Index(fields=['language'], name='tinywiki_wpb_language_index')],
            },
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['slug'], name='tinywiki_wp_slug_index'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['language'], name='tinywiki_wp_lang_index'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['user'], name='tinywiki_wp_user_index'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['created_by'], name='tinywiki_wp_cby_index'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['created_on'], name='tinywiki_wp_con_index'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['edited_by'], name='tinywiki_wp_eby_index'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['edited_on'], name='tinywiki_wp_eon_index'),
        ),
        migrations.AddIndex(
            model_name='wikiimage',
            index=models.Index(fields=['uploaded_by'], name='tinywiki_wikiimage_upby_index'),
        ),
        migrations.AddIndex(
            model_name='wikiimage',
            index=models.Index(fields=['uploaded_on'], name='tinywiki_wikiimage_upon_index'),
        ),
        migrations.AddIndex(
            model_name='wikiimage',
            index=models.Index(fields=['wiki_page'], name='tinywiki_wikiimage_page_index'),
        ),
        migrations.AddIndex(
            model_name='wikiimage',
            index=models.Index(fields=['builtin_id'], name='tinywiki_wikiimage_bid_index'),
        ),
    ]
