# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  release: 
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    container: 
      image: python:3.8
      options: --user 1001
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          fetch-depth : 0
          set-safe-directory: true

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run build
        run: |
          PATH=$PATH:/github/home/.local/bin
          git log
          python -V                                   # Print out python version for debugging
          echo 'pip install pipenv'
          pip install pipenv
          echo 'rm -f .env'
          rm -f .env
          echo 'pipenv install --dev'
          pipenv install --dev
          echo 'pipenv run pytest  --cov-report=xml:coverage.xml  --cov=textIntegrityInspector/  --junit-xml=junit.xml --cov-report term'
          pipenv run pytest  --cov-report=xml:coverage.xml  --cov=textIntegrityInspector/  --junit-xml=junit.xml --cov-report term
          echo ' pipenv requirements > requirements.txt'
          pipenv requirements > requirements.txt
          echo 'sed -i "s/==/>=/" requirements.txt'
          sed -i 's/==/>=/' requirements.txt
          echo 'pipenv run python -m build'
          pipenv run python -m build 
      - name: Upload dist directory
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist/*
  # Publish the wheel to PyPI
  deploy:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/textIntegrityInspector
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          set-safe-directory: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Download dist directory
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: dist

      - name: Install dependencies
        run: |
          echo 'pip install pipenv'
          pip install pipenv
          echo 'rm -f .env'
          rm -f .env
          echo 'pipenv install --dev'
          pipenv install --dev

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1