# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ......core.datetime_utils import serialize_datetime
from .measurement_unit_code import MeasurementUnitCode
from .service_id_qualifier import ServiceIdQualifier

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class DrugIdentification(pydantic.BaseModel):
    service_id_qualifier: ServiceIdQualifier
    national_drug_code: str
    national_drug_unit_count: str
    measurement_unit_code: MeasurementUnitCode
    link_sequence_number: typing.Optional[str] = None
    pharmacy_prescription_number: typing.Optional[str] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
