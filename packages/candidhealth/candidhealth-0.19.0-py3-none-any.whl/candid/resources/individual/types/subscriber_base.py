# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...commons.types.date import Date
from ...commons.types.patient_relationship_to_insured_code_all import PatientRelationshipToInsuredCodeAll
from ...commons.types.street_address_short_zip import StreetAddressShortZip
from .individual_base import IndividualBase


class SubscriberBase(IndividualBase):
    patient_relationship_to_subscriber_code: PatientRelationshipToInsuredCodeAll
    date_of_birth: typing.Optional[Date] = None
    address: typing.Optional[StreetAddressShortZip] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
