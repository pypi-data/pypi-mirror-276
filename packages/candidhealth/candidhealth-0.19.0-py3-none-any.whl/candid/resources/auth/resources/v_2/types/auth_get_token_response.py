# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ......core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class AuthGetTokenResponse(pydantic.BaseModel):
    """
    from candid.resources.auth.v_2 import AuthGetTokenResponse

    AuthGetTokenResponse(
        access_token="eyJz93a...k4laUWw",
        expires_in=86400,
        token_type="Bearer",
    )
    """

    access_token: str
    expires_in: int = pydantic.Field(description="Time in seconds.")
    token_type: str

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
