# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .street_address_base import StreetAddressBase

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class StreetAddressShortZip(StreetAddressBase):
    """
    from candid import State, StreetAddressShortZip

    StreetAddressShortZip(
        address_1="123 Main St",
        address_2="Apt 1",
        city="New York",
        state=State.NY,
        zip_code="10001",
        zip_plus_four_code="1234",
    )
    """

    zip_plus_four_code: typing.Optional[str] = pydantic.Field(
        default=None, description="4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
