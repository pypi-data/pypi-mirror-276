# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.24
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perian.models.get_instance_type_request import GetInstanceTypeRequest

class TestGetInstanceTypeRequest(unittest.TestCase):
    """GetInstanceTypeRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetInstanceTypeRequest:
        """Test GetInstanceTypeRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetInstanceTypeRequest`
        """
        model = GetInstanceTypeRequest()
        if include_optional:
            return GetInstanceTypeRequest(
                instance_type_query = perian.models.instance_typer_query_view.InstanceTyperQueryView(
                    operator = 'EQUALS', 
                    options = perian.models.query_options.QueryOptions(
                        limit = 56, 
                        offset = 56, 
                        order = null, 
                        lazy_loading = True, ), 
                    id = null, 
                    region = perian.models.region_query.RegionQuery(
                        name = '', 
                        location = '', 
                        sustainable = True, 
                        status = '', ), 
                    zone = perian.models.zone_query.ZoneQuery(
                        name = '', 
                        status = '', ), 
                    name = '', 
                    cpu = perian.models.cpu_query.CpuQuery(
                        no = 56, 
                        cores = 56, 
                        threads = 56, 
                        speed = null, ), 
                    accelerator = perian.models.accelerator_query.AcceleratorQuery(
                        no = 56, 
                        memory = perian.models.memory_query.MemoryQuery(
                            size = null, ), 
                        vendor = '', 
                        name = null, 
                        description = null, 
                        provider_specific_name = perian.models.provider_specific_name.provider_specific_name(), ), 
                    ram = perian.models.memory_query.MemoryQuery(), 
                    storage = perian.models.storage_query.StorageQuery(
                        no = 56, 
                        type = '', 
                        included = '', ), 
                    network = perian.models.network_query.NetworkQuery(
                        inbound_speed = null, 
                        outbound_speed = null, ), 
                    price = perian.models.price_query.PriceQuery(
                        unit_price = null, ), 
                    availability = perian.models.availability_query.AvailabilityQuery(
                        available = True, ), 
                    type = '', )
            )
        else:
            return GetInstanceTypeRequest(
        )
        """

    def testGetInstanceTypeRequest(self):
        """Test GetInstanceTypeRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
