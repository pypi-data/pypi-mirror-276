# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.24
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perian.models.get_accelerator_types_success import GetAcceleratorTypesSuccess

class TestGetAcceleratorTypesSuccess(unittest.TestCase):
    """GetAcceleratorTypesSuccess unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAcceleratorTypesSuccess:
        """Test GetAcceleratorTypesSuccess
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAcceleratorTypesSuccess`
        """
        model = GetAcceleratorTypesSuccess()
        if include_optional:
            return GetAcceleratorTypesSuccess(
                status = 'Success',
                message = 'Operation was successful',
                detail = '',
                status_code = 56,
                no = 56,
                accelerator_types = [
                    perian.models.accelerator_type_view.AcceleratorTypeView(
                        name = null, 
                        display_name = '', 
                        id = '', 
                        vendor = null, 
                        memory = null, )
                    ],
                pagination = perian.models.pagination_metadata.PaginationMetadata(
                    total_items = 56, 
                    items_per_page = 56, 
                    current_page = 56, 
                    total_pages = 56, 
                    next_page = 56, 
                    previous_page = 56, )
            )
        else:
            return GetAcceleratorTypesSuccess(
        )
        """

    def testGetAcceleratorTypesSuccess(self):
        """Test GetAcceleratorTypesSuccess"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
