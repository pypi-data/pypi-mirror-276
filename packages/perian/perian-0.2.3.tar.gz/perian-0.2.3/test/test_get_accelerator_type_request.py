# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.24
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perian.models.get_accelerator_type_request import GetAcceleratorTypeRequest

class TestGetAcceleratorTypeRequest(unittest.TestCase):
    """GetAcceleratorTypeRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAcceleratorTypeRequest:
        """Test GetAcceleratorTypeRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAcceleratorTypeRequest`
        """
        model = GetAcceleratorTypeRequest()
        if include_optional:
            return GetAcceleratorTypeRequest(
                accelerator_type_query = perian.models.accelerator_type_query.AcceleratorTypeQuery(
                    operator = 'EQUALS', 
                    options = perian.models.query_options.QueryOptions(
                        limit = 56, 
                        offset = 56, 
                        order = null, 
                        lazy_loading = True, ), 
                    no = 56, 
                    memory = perian.models.memory_query.MemoryQuery(
                        size = null, ), 
                    vendor = '', 
                    name = null, 
                    description = null, 
                    provider_specific_name = perian.models.provider_specific_name.provider_specific_name(), 
                    id = null, )
            )
        else:
            return GetAcceleratorTypeRequest(
        )
        """

    def testGetAcceleratorTypeRequest(self):
        """Test GetAcceleratorTypeRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
