"use strict";(self.webpackChunk_jupyterlite_terminal=self.webpackChunk_jupyterlite_terminal||[]).push([[353],{353:(t,e,s)=>{s.r(e),s.d(e,{Context:()=>i,JupyterFileSystem:()=>r,Shell:()=>U,parse:()=>d,tokenize:()=>c});var n={};s.r(n),s.d(n,{CatCommand:()=>w,EchoCommand:()=>_,EnvCommand:()=>v,LsCommand:()=>N,PwdCommand:()=>M,RmCommand:()=>E,TouchCommand:()=>k});class r{constructor(t){this._contentsManager=t}async delete(t){await this._contentsManager.delete(t)}async get(t){return(await this._contentsManager.get(t,{content:!0})).content}async list(t){try{const e=await this._contentsManager.get(t,{content:!0});if("file"==e.type)return[e.name];return e.content.map((t=>t.name)).sort()}catch(t){return[]}}async touch(t){const e=await this._contentsManager.newUntitled();await this._contentsManager.rename(e.path,t)}async write(t,e){await this._contentsManager.save(t,{content:e})}}class i{constructor(t,e,s,n=null){this.args=t,this.filesystem=e,this.stdout=s,this.env=null!=n?n:new Map}env_number(t){const e=this.env_string(t);return null==e?null:Number(e)}env_string(t){var e;return null!==(e=this.env.get(t))&&void 0!==e?e:null}async flush(){await this.stdout.flush()}pwd(){var t;return null!==(t=this.env_string("PWD"))&&void 0!==t?t:"/"}}const a=";&|>",o=" ";function c(t){const e=[];let s=-1;const n=t.length;for(let r=0;r<n;r++){const n=t[r];s>=0?o.includes(n)?(e.push({offset:s,value:t.slice(s,r)}),s=-1):a.includes(n)&&(e.push({offset:s,value:t.slice(s,r)}),e.push({offset:r,value:t.slice(r,r+1)}),s=-1):a.includes(n)?e.push({offset:r,value:t.slice(r,r+1)}):o.includes(n)||(s=r)}return s>=0&&e.push({offset:s,value:t.slice(s,n)}),e}const l=";&";class u{}class h extends u{constructor(t,e,s){super(),this.name=t,this.suffix=e,this.redirects=s}}class f extends u{constructor(t){super(),this.commands=t}}class p extends u{constructor(t,e){super(),this.token=t,this.target=e}}function d(t){const e=c(t),s=[],n=[];let r=-1;const i=e.length;function a(){1==n.length?s.push(n[0]):n.length>1&&s.push(new f([...n])),n.length=0}for(let t=0;t<i;t++){const s=e[t];r>=0?l.includes(s.value)?(n.push(m(e.slice(r,t))),a(),r=-1):"|"==s.value&&(n.push(m(e.slice(r,t))),r=-1):l.includes(s.value)||(r=t)}return r>=0&&n.push(m(e.slice(r,i))),a(),s}function m(t){let e=t.slice(1);const s=e.findIndex((t=>">"==t.value));if(s>=0){if(e.length!=s+2)throw Error("Redirect should be followed by file to redirect to");const n=new p(e[s],e[s+1]);return e=e.slice(0,s),new h(t[0],e,[n])}return new h(t[0],e)}class g{}class w extends g{async run(t){if(1!=t.args.length)return 1;const e=t.args[0],s=await t.filesystem.get(e);return await t.stdout.write(s+"\r\n"),0}}class _ extends g{async run(t){return 1!=t.args.length?1:(await t.stdout.write(t.args[0]+"\r\n"),0)}}class v extends g{async run(t){for(let[e,s]of t.env.entries()){const n=`${e}=${s}\r\n`;await t.stdout.write(n)}return 0}}class y{constructor(t,e,s){this.shortName=t,this.longName=e,this.description=s,this._isSet=!1}get isSet(){return this._isSet}set(){this._isSet=!0}}class C extends y{constructor(t,e,s){super(t,e,s)}}class S extends y{constructor(t=1){if(super("","",""),this.minCount=t,this._paths=[],t<0)throw Error("Negative minCount in PathsOption.constructor")}add(t){this._paths.push(t),this._isSet=!0}get length(){return this.paths.length}get paths(){return this._paths}}class x{static fromArgs(t,e){const s=new e,n=s._getPaths();let r=!1;for(const e of t)if("-"==e[0]&&"-"!=e[1]){if(r)throw Error("Cannot have named option after parsing a trailing path");const t=e[1];s._findByShortName(t).set()}else null!==n&&(n.add(e),r=!0);if(n&&n.length<n.minCount)throw Error("Insufficient trailing path options specified");return s}_findByShortName(t){let e;for(e of Object.values(this))if(e.shortName==t)return e;throw new Error(`No such shortName option "${t}"`)}_getPaths(){return"paths"in this?this.paths:null}_help(){return[...Object.values(this)].sort(((t,e)=>{var s,n;return(null!==(s=t.shortName)&&void 0!==s?s:t.longName)>(null!==(n=e.shortName)&&void 0!==n?n:e.longName)?1:-1})).map((t=>`-${t.shortName}  ${t.description}`))}}class L extends x{constructor(){super(...arguments),this.commaSeparated=new C("m","","List files across the page, separated by commas."),this.long=new C("l","","List files in long format."),this.reverse=new C("r","","Reverse the order of the sort."),this.paths=new S(0)}}class N extends g{async run(t){const e=t.args,s=x.fromArgs(e,L);if(s.paths.length>1)throw Error("Not yet supporting 2+ paths in ls command");const n=s.paths.length>0?s.paths.paths[0]:t.pwd();let r=await t.filesystem.list(n);s.reverse.isSet;const i=function(t,e){function s(t){return b(t).map((t=>Math.max(...a.slice(t*o,(t+1)*o))))}function n(t){return Math.ceil(a.length/t)}function r(){return t.join("\r\n")+"\r\n"}function i(t){const e=n(t);return s(e).reduce(((t,e)=>t+e))+2*e-1}if(null==e||e<1)return r();const a=t.map((t=>t.length));if(a.reduce(((t,e)=>t+e))+2*t.length-1<=e)return t.join("  ")+"\r\n";if(Math.max(...a)+1>=e)return r();let o=2;for(;i(o)>e;)o++;const c=n(o),l=s(c),u=b(c);let h="";for(let e=0;e<o;++e){const s=u.map((t=>e+t*o)).filter((e=>e<t.length));for(let e=0;e<s.length;e++){const n=t[s[e]];h+=n,e<s.length-1&&(h+=" ".repeat(l[e]-n.length+2))}h+="\r\n"}return h}(r,t.env_number("COLUMNS"));return await t.stdout.write(i),0}}function b(t){const e=new Array(t);for(let s=0;s<t;++s)e[s]=s;return e}class M extends g{async run(t){return t.stdout.write(t.pwd()+"\r\n"),0}}class E extends g{async run(t){const e=t.args;if(e.length>1)return 1;const s=e[0];return await t.filesystem.delete(s),0}}class k extends g{async run(t){const e=t.args;if(e.length>1)return 1;const s=e[0];return await t.filesystem.touch(s),0}}class O{constructor(){this._map=new Map}create(t){const e=this.get(t);return e?new e:null}get(t){var e;return null!==(e=this._map.get(t))&&void 0!==e?e:null}static instance(){return O._instance||(O._instance=new O),O._instance}match(t){return[...this._map.keys()].filter((e=>e.startsWith(t)))}register(t,e){if(t.endsWith("Command")){const s=t.slice(0,-7).toLowerCase();this._map.set(s,e)}}}!function(t){const e=O.instance();for(const[s,n]of Object.entries(t))e.register(s,n)}(n);class P{}class j extends P{constructor(){super(),this.data=[]}clear(){this.data=[]}async write(t){this.data.push(t)}}class $ extends j{constructor(t,e,s){if(super(),this.fs=t,this.path=e,this.append=s,this.append)throw Error("FileOutput in append mode not implemented")}async flush(){const t=this.data.join();this.fs.write(this.path,t),this.clear()}}class W extends j{constructor(t){super(),this._outputCallback=t}async flush(){this.data.forEach((async t=>{await this._outputCallback(t)})),this.clear()}}class U{constructor(t,e){this._filesystem=t,this._outputCallback=e,this._currentLine="",this._env=new Map,this._env.set("PS1","[1;31mjs-shell:$[1;0m "),this._env.set("PWD","/"),this._env.set("COLUMNS","0"),this._env.set("LINES","0")}async input(t){var e,s;const n=t.charCodeAt(0);if(13==n){await this.output("\r\n");const t=this._currentLine.trimStart();this._currentLine="",await this._runCommands(t),await this.output(null!==(e=this._env.get("PS1"))&&void 0!==e?e:"")}else if(127==n){if(this._currentLine.length>0){this._currentLine=this._currentLine.slice(0,-1);const t="[1D";await this.output(t+" "+t)}}else if(9==n){const t=this._currentLine.trimStart();if(0==t.length)return;const[e,n]=await this._tabComplete(t);if(1==n.length){const t=this._currentLine.length;this._currentLine=this._currentLine+n[0].slice(e)+" ",await this.output(this._currentLine.slice(t))}else if(n.length>1){const t=n.join("  ");await this.output(`\r\n${t}\r\n${null!==(s=this._env.get("PS1"))&&void 0!==s?s:""}${this._currentLine}`),this._currentLine=""}}else 27==n?t.slice(1):(this._currentLine+=t,await this.output(t))}async inputs(t){for(let e=0;e<t.length;++e)await this.input(t[e])}async output(t){await this._outputCallback(t)}async setSize(t,e){this._env.set("COLUMNS",e.toString()),this._env.set("LINES",t.toString())}async start(){const t=this._env.get("PS1");t&&await this.output(t)}async _runCommands(t){const e=d(t),s=e.length,n=new W(this._outputCallback);try{for(let t=0;t<s;++t){const s=e[t],r=s.name.value,a=O.instance().create(r);if(null===a)throw new Error(`Unknown command: '${r}'`);let o=n;if(s.redirects){if(s.redirects.length>1)throw Error("Only implemented a single redirect per command");if(">"!=s.redirects[0].token.value)throw Error("Only implemented redirect write to file");const t=s.redirects[0].target.value;o=new $(this._filesystem,t,!1)}const c=s.suffix.map((t=>t.value)),l=new i(c,this._filesystem,o,this._env);await(null==a?void 0:a.run(l)),await o.flush()}}catch(t){n.write("[1;31m"+t+"[1;0m\r\n"),await n.flush()}}async _tabComplete(t){const e=t.indexOf(" ");if(-1==e)return[t.length,O.instance().match(t)];{const s=t.slice(0,e);if(null==O.instance().get(s))return[0,[]];const n=t.slice(e+1).trimStart(),r=(await this._filesystem.list(this._env.get("PWD"))).filter((t=>t.startsWith(n)));return[n.length,r]}}}}}]);