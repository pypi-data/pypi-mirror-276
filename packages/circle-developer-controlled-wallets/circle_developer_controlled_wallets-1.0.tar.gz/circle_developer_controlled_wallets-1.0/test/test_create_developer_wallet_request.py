# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.developer_controlled_wallets
from circle.web3.developer_controlled_wallets.models.create_developer_wallet_request import CreateDeveloperWalletRequest  # noqa: E501
from circle.web3.developer_controlled_wallets.rest import ApiException

class TestCreateDeveloperWalletRequest(unittest.TestCase):
    """CreateDeveloperWalletRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateDeveloperWalletRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateDeveloperWalletRequest`
        """
        model = circle.web3.developer_controlled_wallets.models.create_developer_wallet_request.CreateDeveloperWalletRequest()  # noqa: E501
        if include_optional :
            return CreateDeveloperWalletRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11', 
                account_type = 'SCA', 
                blockchains = [
                    'MATIC-AMOY'
                    ], 
                count = 2, 
                entity_secret_ciphertext = '[B@601582cf', 
                metadata = [
                    circle.web3.developer_controlled_wallets.models.wallet_metadata.WalletMetadata(
                        name = 'My Wallet 1', 
                        ref_id = 'grouptransaction123', )
                    ], 
                wallet_set_id = '71f2a6b4-ffa7-417a-ad5b-fb928753edc8'
            )
        else :
            return CreateDeveloperWalletRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
                blockchains = [
                    'MATIC-AMOY'
                    ],
                entity_secret_ciphertext = '[B@601582cf',
                wallet_set_id = '71f2a6b4-ffa7-417a-ad5b-fb928753edc8',
        )
        """

    def testCreateDeveloperWalletRequest(self):
        """Test CreateDeveloperWalletRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
