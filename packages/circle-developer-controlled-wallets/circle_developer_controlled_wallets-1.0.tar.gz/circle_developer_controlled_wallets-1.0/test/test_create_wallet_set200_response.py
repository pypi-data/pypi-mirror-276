# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.developer_controlled_wallets
from circle.web3.developer_controlled_wallets.models.create_wallet_set200_response import CreateWalletSet200Response  # noqa: E501
from circle.web3.developer_controlled_wallets.rest import ApiException

class TestCreateWalletSet200Response(unittest.TestCase):
    """CreateWalletSet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateWalletSet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateWalletSet200Response`
        """
        model = circle.web3.developer_controlled_wallets.models.create_wallet_set200_response.CreateWalletSet200Response()  # noqa: E501
        if include_optional :
            return CreateWalletSet200Response(
                data = circle.web3.developer_controlled_wallets.models.create_developer_wallet_set_response.CreateDeveloperWalletSetResponse(
                    wallet_set = circle.web3.developer_controlled_wallets.models.wallet_set_response.WalletSetResponse(
                        id = 'c4d1da72-111e-4d52-bdbf-2e74a2d803d5', 
                        create_date = '2023-01-01T12:04:05Z', 
                        custody_type = 'DEVELOPER', 
                        name = 'treasury wallet set 1', 
                        update_date = '2023-01-01T12:04:05Z', 
                        user_id = 'ext_user_id_1', ), )
            )
        else :
            return CreateWalletSet200Response(
        )
        """

    def testCreateWalletSet200Response(self):
        """Test CreateWalletSet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
