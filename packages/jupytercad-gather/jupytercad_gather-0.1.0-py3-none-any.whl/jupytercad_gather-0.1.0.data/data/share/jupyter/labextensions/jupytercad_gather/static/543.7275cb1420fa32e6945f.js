"use strict";(self.webpackChunkjupytercad_gather=self.webpackChunkjupytercad_gather||[]).push([[543],{543:(e,t,r)=>{r.r(t),r.d(t,{default:()=>y});var a=r(615),s=r(218),o=r(450),n=r(250),i=r(965),c=r(420);const d=new(r(760).LabIcon)({name:"jupytercad:grid-icon",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24">\n  <g class="jp-icon3" fill="#616161">\n    <path\n      d="M120-520v-320h320v320H120Zm0 400v-320h320v320H120Zm400-400v-320h320v320H520Zm0 400v-320h320v320H520ZM200-600h160v-160H200v160Zm400 0h160v-160H600v160Zm0 400h160v-160H600v160Zm-400 0h160v-160H200v160Zm400-400Zm0 240Zm-240 0Zm0-240Z" />\n  </g>\n</svg>\n'}),l=JSON.parse('{"type":"object","required":["Object"],"additionalProperties":false,"properties":{"Object":{"type":"string","description":"The name of input object"},"Enabled":{"type":"boolean","description":"Is the plugin enabled?"}}}');var g,p;!function(e){e.exportGltf="jupytercad:gather:register"}(g||(g={})),function(e){const t=e=>{var t,r,a;const s=e.getAllObject(),o=(null===(r=null===(t=e.localState)||void 0===t?void 0:t.selected)||void 0===r?void 0:r.value)||[];return{Name:(0,i.newName)("GLTF",e),Object:o.length>0?o[0]:null!==(a=s[0].name)&&void 0!==a?a:"",Enabled:!0}};e.executeRegisterGltf=function(e,r){return async e=>{const s=r.currentWidget;if(!s)return;const o=JSON.parse(JSON.stringify(l));o.required=["Name",...o.required],o.properties={Name:{type:"string",description:"The Name of the Object"},...o.properties};const{...n}=o,d=new i.FormDialog({context:s.context,title:"Register GLTF",sourceData:t(s.context.model),schema:n,syncData:(g=s.context.model,e=>{const{Name:t,...r}=e,s={shape:"Post::EnableGather",parameters:r,visible:!0,name:t,shapeMetadata:{shapeFormat:a.JCadWorkerSupportedFormat.GLTF,workerId:"jupytercad-gather:worker"}},o=g.sharedModel;o&&o.transact((()=>{o.objectExists(s.name)?(0,c.showErrorMessage)("The object already exists","There is an existing object with the same name."):o.addObject(s)}))}),cancelButton:!0});var g;await d.launch()}}}(p||(p={}));var h=r(262),m=r(422);class u{constructor(e){this.shapeFormat=a.JCadWorkerSupportedFormat.GLTF,this._ready=new h.PromiseDelegate,this._messageHandlers=new Map,this._modelRegistry=e.modelRegistry}get ready(){return this._ready.promise}register(e){const{messageHandler:t,thisArg:r}=e,a=(0,m.v4)();return r&&t.bind(r),this._messageHandlers.set(a,t),a}unregister(e){this._messageHandlers.delete(e)}postMessage(e){if(e.action===a.WorkerAction.POSTPROCESS&&e.payload&&Object.keys(e.payload).length>0){const t=e.payload.jcObject,r=e.payload.postShape;this._modelRegistry.registerModel({name:t.name.toLowerCase(),gltf:r})}}}const y={id:"jupytercad_gather:plugin",description:"A JupyterCAD plugin for the JupyterLab-Gather extenstion",autoStart:!0,requires:[a.IJCadWorkerRegistryToken,a.IJCadFormSchemaRegistryToken,a.IJupyterCadDocTracker,a.IJCadExternalCommandRegistryToken,n.IGatherRegistryToken],optional:[s.ISettingRegistry,o.ITranslator],activate:(e,t,r,a,s,n,i,c)=>{console.log("JupyterLab extension jupytercad_gather is activated!"),c=null!=c?c:o.nullTranslator;const h=new u({modelRegistry:n,tracker:a});t.registerWorker("jupytercad-gather:worker",h),r.registerSchema("Post::EnableGather",l),function(e,t,r,a){const s=a.load("jupyterlab"),{commands:o}=e;o.addCommand(g.exportGltf,{label:s.__("Register GLTF"),isEnabled:()=>Boolean(t.currentWidget),icon:d,execute:p.executeRegisterGltf(r,t)})}(e,a,n,c),s.registerCommand({name:"Register GLTF Model",id:g.exportGltf})}}}}]);