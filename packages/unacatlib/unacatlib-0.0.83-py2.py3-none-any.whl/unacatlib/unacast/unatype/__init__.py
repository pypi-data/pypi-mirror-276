# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: unacast/unatype/availability.proto, unacast/unatype/data_production_status.proto, unacast/unatype/date.proto, unacast/unatype/filter_clause.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto


class AvailabilityKind(betterproto.Enum):
    """Deprecated enum on requests. TODO: Use Availability instead."""

    ALL = 0
    DELIVERY_ONLY = 1


class Availability(betterproto.Enum):
    """Replaces AvailabilityKind to allow UNSPECIFIED value."""

    AVAILABILITY_UNSPECIFIED = 0
    AVAILABILITY_STANDARD = 1
    AVAILABILITY_LOW_LATENCY = 2


class MetricDataProductionStatus(betterproto.Enum):
    METRIC_DATA_PRODUCTION_STATUS_UNSPECIFIED = 0
    METRIC_DATA_PRODUCTION_STATUS_RUNNING = 1
    METRIC_DATA_PRODUCTION_STATUS_DELAYED = 2
    METRIC_DATA_PRODUCTION_STATUS_PRODUCED = 3
    METRIC_DATA_PRODUCTION_STATUS_FINISHED = 4
    METRIC_DATA_PRODUCTION_STATUS_FAILED = 5


@dataclass(eq=False, repr=False)
class Date(betterproto.Message):
    """
    TODO: consider using googles implementation instead, google.type.Date
    """

    year: int = betterproto.int32_field(1)
    month: int = betterproto.int32_field(2)
    day: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class DateRange(betterproto.Message):
    start: "Date" = betterproto.message_field(1)
    end: "Date" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FilterClause(betterproto.Message):
    field_name: str = betterproto.string_field(1)
    """e.g. 'address_components.<component>.value'"""

    operator: str = betterproto.string_field(2)
    """e.g. '==', '!=', '>', '<', '>=', '<=', 'in', 'not in'"""

    value: str = betterproto.string_field(4)
    """e.g. 'foo', 'bar', 'baz', '8'"""

    values: List[str] = betterproto.string_field(5)
    """Only used for 'in' or 'not in' operator"""
