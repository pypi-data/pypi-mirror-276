
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_gallery\plot_fig5.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__gallery_plot_fig5.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__gallery_plot_fig5.py:


Reproduce fig5
==============

Daily evolution

.. warning::

    unable to reproduce fig5 using formalisms from article

.. GENERATED FROM PYTHON SOURCE LINES 12-114



.. image:: /_gallery/images/sphx_glr_plot_fig5_001.png
    :alt: plot fig5
    :class: sphx-glr-single-img





.. code-block:: default

    import matplotlib.pyplot as plt
    import pandas as pd

    from tuzet2003 import appendix, external, leaf, pth_clean, raw

    # read meas
    meas = pd.read_csv(pth_clean / "fig5.csv", sep=";", comment="#", index_col=['hour'])

    # read params
    weather = pd.read_csv(pth_clean / "fig2.csv", sep=";", comment="#", index_col=['hour'])

    tab2 = pd.read_csv(pth_clean / "table2.csv", sep=";", comment="#", index_col=['name'])
    tab3 = pd.read_csv(pth_clean / "table3.csv", sep=";", comment="#", index_col=['name'])
    pval = pd.concat([tab2, tab3])['value'].to_dict()

    params = leaf.Params()
    rd = 0.82e-6  # [mol CO2.m-2.s-1] from Harley 1992 table 1

    psi_ref = -1.9  # [MPa] from fig6
    sf = 3.2  # [MPa-1] from fig6

    cd = 0.01  # [-] leaf drag coefficient from Albayraketal 2014
    eta = appendix.eq_c2(pval['lai'], pval['h_c'], pval['l_c'], cd)
    z0g = 0.2  # [m] why not?

    lambda_v = external.water_latent_heat_vaporization * 1e3  # [kJ.kg-1] to [J.kg-1]
    rho_v = external.water_liquid_density * 1e3  # [kg.l-1] to [kg.m-3]

    # compute daily evolution
    psi_soil = -0.03  # TODO soil evolution at some point
    ci = params.ca * 0.7  # initial guess

    records = []
    for hour, row in weather.iterrows():
        t_leaf = external.kelvin(row['ta'])  # TODO + 2.5
        ppfd = external.rg_to_ppfd(row['rg'])  # [Âµmol photon.m-2.s-1]
        ws = row['ws']

        psi_leaf = psi_soil
        transpi = 1e-7
        psi_leaf_new = psi_soil - transpi * pval['chi_v']
        while abs(psi_leaf - psi_leaf_new) > 1e-2:
            psi_leaf = psi_leaf_new
            psi_fac = raw.eq2(psi_leaf, psi_ref, sf)

            # compute photosynthesis
            if ppfd < 10:  # nighttime
                an = 0.
                ci = params.ca * 0.75
                g_co2 = params.g0
                gamma_star = 0.
            else:
                an, ci, g_co2 = leaf.photo_net(ppfd * 1e-6, t_leaf, psi_fac, rd, ci, params)

            # water fluxes
            rbv = appendix.eq_c4(z0g, pval['d_l'], ws, pval['h_c'], eta)
            rsh2o = raw.eq5_rsh2o(g_co2, t_leaf)
            hi = raw.eq5_hi(psi_leaf, t_leaf)  # * 2.5
            ta = external.kelvin(row['ta'])
            tr = min(external.kelvin(row['tr']), ta)
            transpi = raw.eq5b(rsh2o, rbv, hi, t_leaf, tr, ta)

            psi_leaf_new = psi_soil - transpi * pval['chi_v']

        records.append(dict(
            hour=hour,
            an=an,
            ci=ci,
            g_co2=g_co2,
            lev=transpi * rho_v * lambda_v,
        ))

    df = pd.DataFrame(records).set_index('hour')

    # plot result
    fig, axes = plt.subplots(2, 2, figsize=(12, 8), squeeze=False)

    ax = axes[0, 0]
    ax.plot(meas.index, meas['gs_01'], label="1")
    ax.plot(df.index, df['g_co2'], label="sim")

    ax.legend(loc='upper left')

    ax = axes[0, 1]
    ax.plot(meas.index, meas['le_01'], label="1")
    ax.plot(df.index, df['lev'], label="sim (leaf level)")

    ax.legend(loc='upper left')

    ax = axes[1, 0]
    ax.plot(meas.index, meas['an_01'], label="1")
    ax.plot(df.index, (df['an'] + rd) * 1e6, label="sim (leaf level)")

    ax.legend(loc='upper left')

    ax = axes[1, 1]
    ax.plot(df.index, df['ci'] / params.ca, label="ci/ca")

    ax.legend(loc='upper left')

    fig.tight_layout()
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.876 seconds)


.. _sphx_glr_download__gallery_plot_fig5.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_fig5.py <plot_fig5.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_fig5.ipynb <plot_fig5.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
