[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pydatagenerator"]

[project]
name = "pydatagenerator"
authors = [
    { name = "Alexandru Prodan", email = "prodanalexandru1999@gmail.com" },
]
maintainers = [
    { name = "Alexandru Prodan", email = "prodanalexandru1999@gmail.com" },
]
version = "0.0.2"
description = "Generate template data from xml specification"
readme = "README.md"
requires-python = ">=3.6"
dependencies = ["lxml>=5.2.1"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
license = { file = "LICENSE" }
keywords = ["pydatagenerator", "data", "data-generator", "template"]

[project.optional-dependencies]
dev = [
    "toml>=0.10.2",
    "pylint>=3.1.0",
    "yapf>=0.40.2",
    "flake8>=7.0.0",
    "mkdocs>=1.6.0",
    "mkdocstrings[python]>=0.18",
    "mkdocs-material>=9.5.0",
    "pyinstaller>=6.6.0",
]
test = ["pytest>=8.2.0", "pytest-cov>=5.0.0"]

[tool.pytest.ini_options]
addopts = "--cov --cov-report html --cov-report term-missing --cov-fail-under 80"

[tool.coverage.run]
source = ["src"]

[tool.yapf]
blank_line_before_nested_class_or_def = true
column_limit = 88


[tool.pylint]
max-line-length = 88
disable = [
    "C0103", # (invalid-name)
    "C0114", # (missing-module-docstring)
    "C0115", # (missing-class-docstring)
    "C0116", # (missing-function-docstring)
    "R0903", # (too-few-public-methods)
    "R0913", # (too-many-arguments)
    "W0105", # (pointless-string-statement)
]

[project.urls]
Homepage = "https://github.com/alexprodan99/pydatagenerator"
Documentation = "https://alexprodan99.github.io/pydatagenerator"
Repository = "https://github.com/alexprodan99/pydatagenerator"
Issues = "https://github.com/alexprodan99/pydatagenerator/issues"
