
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_gallery\plot_fig4_eval.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__gallery_plot_fig4_eval.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__gallery_plot_fig4_eval.py:


Figure 4 evaluation
===================

Evaluation around fig4 data.

.. GENERATED FROM PYTHON SOURCE LINES 7-82



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_gallery/images/sphx_glr_plot_fig4_eval_001.png
          :alt: plot fig4 eval
          :class: sphx-glr-multi-img

    *

      .. image:: /_gallery/images/sphx_glr_plot_fig4_eval_002.png
          :alt: plot fig4 eval
          :class: sphx-glr-multi-img





.. code-block:: default

    import matplotlib.pyplot as plt
    import pandas as pd

    from pallas2016 import pth_clean

    # read meas
    meas = pd.read_csv(pth_clean / "fig4.csv", sep=";", comment="#", index_col=['doy'])
    leaf_shot_ratio = 0.71

    dm_ini = {cpt: meas[f'{cpt}_dm'].iloc[0] for cpt in ['root', 'wood', 'leafy_shoot', 'fruit']}

    m_resp = dict(root=9.9e-9,  # [g C.g DM-1.s-1]
                  wood=3.9e-9,
                  leafy_shoot=3.2e-8 * leaf_shot_ratio + 1.3e-7 * (1 - leaf_shot_ratio),
                  fruit=5.3e-9)
    cc = dict(root=0.47, wood=0.47, leafy_shoot=0.47, fruit=0.4)  # [g C.g DM-1]
    for cpt in ['root', 'wood', 'leafy_shoot', 'fruit']:
        meas[f'{cpt}_dc'] = meas[f'{cpt}_growth'] * cc[cpt]
        meas[f'{cpt}_m_resp'] = meas[f'{cpt}_dm'] * m_resp[cpt] * 24 * 3600  # [g C.day-1]

    dc_tot = meas[[f'{cpt}_dc' for cpt in ['root', 'wood', 'leafy_shoot', 'fruit']]].sum(axis='columns')
    mr_tot = meas[[f'{cpt}_m_resp' for cpt in ['root', 'wood', 'leafy_shoot', 'fruit']]].sum(axis='columns')
    storage = meas['photo'] - dc_tot - mr_tot

    sto_use_max = -storage.cumsum().min()

    # plot result
    fig, axes = plt.subplots(3, 1, sharex='all', figsize=(8, 6), squeeze=False)
    ax = axes[0, 0]
    for cpt in ['root', 'wood', 'leafy_shoot', 'fruit']:
        crv, = ax.plot(meas.index, meas[f'{cpt}_dm'], '-', label=cpt)
        ax.plot(meas.index, meas[f'{cpt}_growth'].cumsum() + dm_ini[cpt], '--', color=crv.get_color())

    ax.legend(loc='upper left')
    ax.set_ylabel("biomass [g DM]")
    ax.set_ylim(0, 3200)
    ax.set_yticks(range(0, 3200, 1000))

    ax = axes[1, 0]
    for cpt in ['root', 'wood', 'leafy_shoot', 'fruit']:
        ax.plot(meas.index, meas[f'{cpt}_growth'], '-', label=cpt)

    ax.set_ylabel("growth [g DM.day-1]")
    ax.set_ylim(0, 50)
    ax.set_yticks(range(0, 50, 20))

    ax = axes[2, 0]
    ax.plot(meas.index, meas['photo'], '-', label="photo")
    ax.plot(mr_tot.index, mr_tot, '--', label="m_resp")
    ax.plot(dc_tot.index, mr_tot + dc_tot, '--', label="growth + m_resp")
    ax.legend(loc='upper left')

    ax.set_ylabel("tree photo [g C.day-1]")
    ax.set_ylim(0, 79)
    ax.set_yticks(range(0, 79, 20))

    ax.set_xlabel("doy")

    fig.tight_layout()

    # storage evolution
    fig, axes = plt.subplots(1, 1, figsize=(8, 5), squeeze=False)
    ax = axes[0, 0]
    ax.plot(storage.index, storage.cumsum())
    ax.axhline(y=0, ls='--', color='#aaaaaa')
    ax.text(0.1, 0.9, f"max storage use {sto_use_max:.2f} [g C], "
                      f"{sto_use_max / 12:.2f} [mol C], "
                      f"{sto_use_max / 12 * 30 / dm_ini['wood'] * 100:.1f} [%] of wood",
            ha='left', va='top', transform=ax.transAxes)
    ax.set_ylabel("storage evolution [g C]")
    ax.set_xlabel("doy")

    fig.tight_layout()

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.440 seconds)


.. _sphx_glr_download__gallery_plot_fig4_eval.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_fig4_eval.py <plot_fig4_eval.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_fig4_eval.ipynb <plot_fig4_eval.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
