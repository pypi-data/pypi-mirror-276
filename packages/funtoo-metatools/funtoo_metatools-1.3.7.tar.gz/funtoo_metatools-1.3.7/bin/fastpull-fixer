#!/usr/bin/env python3

# This utility script is meant to be run on ports.funtoo.org, and it will find things in
# our fastpull database that do not have actual corresponding files on disk. It will attempt
# to fetch them to 'fix' this. It is a work in progress. See FL-8226 and FL-8301 for more
# information.

import os
import sys

from subpop.hub import Hub

hub = Hub()

import dyne.org.funtoo.metatools.merge as merge
import dyne.org.funtoo.metatools.pkgtools as pkgtools


async def main_thread(delete=False):
	merge.FIXUP_REPO = merge.tree.GitTree(
		"kit-fixups",
		merge.model.MERGE_CONFIG.branch("kit-fixups"),
		url=merge.model.MERGE_CONFIG.kit_fixups,
		root=merge.model.MERGE_CONFIG.source_trees + "/kit-fixups",
	)
	await merge.FIXUP_REPO.initialize()
	for fp_entry in merge.model.FASTPULL.find({}):
		fp_path = merge.parent.get_disk_path(fp_entry["hashes"]["sha512"])
		if os.path.exists(fp_path):
			continue
		if "genpatches" in fp_entry["filename"]:
			continue
		skip = False
		for ref in fp_entry["refs"]:
			if "games" in ref["catpkg"]:
				skip = True
				break
		if skip:
			continue
		if type(fp_entry["src_uri"]) is str:
			uri = fp_entry["src_uri"]
		else:
			uri = fp_entry["src_uri"][0]
		if delete:
			merge.model.FASTPULL.delete_one({"_id": fp_entry["_id"]})
			print("Wiped ", uri)
			continue
		a = pkgtools.ebuild.Artifact(url=uri)
		await a.ensure_fetched()


if __name__ == "__main__":
	hub.LOOP.run_until_complete(main_thread(delete=True if "delete" in sys.argv[1:] else False))

# vim: ts=4 sw=4 noet
