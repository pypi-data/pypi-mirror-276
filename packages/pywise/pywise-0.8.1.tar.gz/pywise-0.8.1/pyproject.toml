[tool.poetry]
name = "pywise"
version = "0.8.1"
description = "Robust serialization support for NamedTuple & @DataClass data types. Various utilities and Quality-of-Life helpers. Python 3.8+ dependency only."
authors = ["Malcolm Greaves <greaves.malcolm@gmail.com>"]
homepage = "https://github.com/malcolmgreaves/pywise"
license = "L-GPL 3.0"
readme = 'README.md'
exclude = ['core_utils/support_for_testing.py'] # NEVER INCLUDE THIS FILE (!)
packages = [
    { include = "core_utils" },
]


[tool.poetry.dependencies]
python = "^3.8.1"

[tool.poetry.dev-dependencies]
# test & development tools: important to pin these to minimum working versions
pre-commit = "^3.5.0"
# keep in-sync with .pre-commit-config.yaml
mypy = "^1.10.0"
ruff = "^0.4.6"
# end sync
# testing related
pytest-cov = "^4.1.0"
coveralls = "^3.3.1"
tox = "^4.12.1"
# external dependencies needed in tests
numpy = "^1.21" # note: needs to be compatible with apple silicon
pyyaml = "*"
#torch = "*" # optional test dependency: can install manually via `pip install torch` during development
# for ease of development
ipython = "*"
ipdb = "*"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4


# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]

# pyflakes, pycodestyle, isort
select = ["F", "E", "W", "I001", "E4", "E7", "E9",]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
#select = ["E4", "E7", "E9", "F"]

ignore = [
    "E501",
    "W293",
    "E303",
    "W291",
    "E203",
    "E731",
    "E231",
    "E721",
    "E722",
    "E741",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

## Allow unused variables when underscore-prefixed.
#dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
