from datetime import timedelta
from typing import Any

class Duration:
    def __new__(cls: type, seconds: float | timedelta): ...
    def seconds(self) -> float: ...
    def timedelta(self) -> timedelta: ...
    def __hash__(self) -> int: ...
    def __lt__(self, other: Duration) -> bool: ...
    def __le__(self, other: Duration) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __gt__(self, other: Duration) -> bool: ...
    def __ge__(self, other: Duration) -> bool: ...

class Time:
    def __new__(cls: type, seconds: float | timedelta): ...
    def seconds(self) -> float: ...
    def timedelta(self) -> timedelta: ...
    def __hash__(self) -> int: ...
    def __lt__(self, other: Time) -> bool: ...
    def __le__(self, other: Time) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __gt__(self, other: Time) -> bool: ...
    def __ge__(self, other: Time) -> bool: ...

class Timestamp:
    def __new__(cls: type, seconds: float | timedelta): ...
    def seconds(self) -> float: ...
    def timedelta(self) -> timedelta: ...
    def __hash__(self) -> int: ...
    def __lt__(self, other: Timestamp) -> bool: ...
    def __le__(self, other: Timestamp) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __gt__(self, other: Timestamp) -> bool: ...
    def __ge__(self, other: Timestamp) -> bool: ...
