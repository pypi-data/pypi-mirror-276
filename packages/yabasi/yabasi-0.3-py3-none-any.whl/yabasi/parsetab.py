
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftLTGTLEGENEEQleftPLUSMINUSleftTIMESDIVIDEMODleftEXPOABS AND AS ATN CHR CLOSE CLS COLON COLOR COMMA COS CSRLIN CVI CVS DATA DEFINT DIM DIVIDE ELSE END EQ EXPO FHANDLE FIELD FOR GE GET GOSUB GOTO GT IF INPUT INT LE LEFT LEN LOCATE LOG LPAREN LT MINUS MOD NE NEXT NUMBER ON OPEN OR OUTPUT PLUS PRINT READ REM RETURN RIGHT RPAREN SEMIC SGN SIN SQR STEP STRING TAB THEN TIMES TO USING VAR\n            statement : simple-statement\n                      | statement COLON simple-statement\n        \n            simple-statement : assignment-statement\n                             | close-statement\n                             | cls-statement\n                             | color-statement\n                             | data-statement\n                             | defint-statement\n                             | dim-statement\n                             | end-statement\n                             | field-statement\n                             | for-statement\n                             | get-statement\n                             | gosub-statement\n                             | goto-statement\n                             | if-statement\n                             | input-statement\n                             | locate-statement\n                             | next-statement\n                             | ongoto-statement\n                             | open-statement\n                             | print-statement\n                             | read-statement\n                             | rem-statement\n                             | return-statement\n\n        \n            assignment-statement : lhs EQ expression\n        \n            cls-statement : CLS\n        \n            close-statement : CLOSE\n                            | CLOSE FHANDLE\n                            | CLOSE NUMBER\n        \n            color-statement : COLOR intlist\n        \n            data-statement : DATA literal-list\n        \n            defint-statement : DEFINT varlist\n        \n            dim-statement : DIM dimlist\n        \n            dimlist : dimrhs\n                    | dimlist COMMA dimrhs\n        \n            dimrhs : VAR LPAREN intlist RPAREN\n        empty :\n            end-statement : END\n        \n            expression : literal\n        \n            expression : ABS LPAREN expression RPAREN\n                       | ATN LPAREN expression RPAREN\n                       | COS LPAREN expression RPAREN\n                       | LOG LPAREN expression RPAREN\n                       | SGN LPAREN expression RPAREN\n                       | SIN LPAREN expression RPAREN\n                       | SQR LPAREN expression RPAREN\n                       | INT LPAREN expression RPAREN\n                       | TAB LPAREN expression RPAREN\n                       | CVI LPAREN expression RPAREN\n                       | CVS LPAREN expression RPAREN\n                       | CHR LPAREN expression RPAREN\n        \n            expression : LEFT  LPAREN expression COMMA expression RPAREN\n                       | RIGHT LPAREN expression COMMA expression RPAREN\n        \n            expression : LPAREN expression RPAREN\n        \n            expression : expression PLUS   expression\n                       | expression MINUS  expression\n                       | expression TIMES  expression\n                       | expression DIVIDE expression\n                       | expression MOD    expression\n                       | expression GT     expression\n                       | expression GE     expression\n                       | expression LT     expression\n                       | expression LE     expression\n                       | expression NE     expression\n                       | expression EQ     expression\n                       | expression AND    expression\n                       | expression OR     expression\n                       | expression EXPO   expression\n        \n            expression : MINUS expression\n        \n            expression : VAR\n        \n            expression : VAR LPAREN exprlist RPAREN\n        \n            exprlist : expression\n                     | exprlist COMMA expression\n        \n            field-statement : FIELD FHANDLE COMMA fieldlist\n        \n            fieldlist : NUMBER AS VAR\n                      | fieldlist COMMA NUMBER AS VAR\n        \n            for-statement : FOR VAR EQ expression TO expression\n        \n            for-statement : FOR VAR EQ expression TO expression STEP expression\n        \n            get-statement : GET NUMBER\n        \n            goto-statement : GOTO NUMBER\n        \n            gosub-statement : GOSUB NUMBER\n        \n            if-statement : IF expression THEN NUMBER\n                         | IF expression THEN NUMBER ELSE NUMBER\n                         | IF expression THEN NUMBER ELSE statement\n                         | IF expression THEN statement\n                         | IF expression THEN statement ELSE NUMBER\n                         | IF expression THEN statement ELSE statement\n        \n            if-statement : IF expression GOTO NUMBER\n        \n            input-statement : INPUT STRING SEMIC VAR\n        \n            input-statement : INPUT varlist-complex\n        \n            intlist : NUMBER\n                    | intlist COMMA NUMBER\n        \n            lhs : VAR\n                | VAR LPAREN exprlist RPAREN\n        \n            literal : NUMBER\n                    | STRING\n        \n            literal-list : literal\n                         | literal-list COMMA literal\n        \n            locate-statement : LOCATE CSRLIN COMMA NUMBER\n        \n            next-statement : NEXT VAR\n        \n            ongoto-statement : ON expression GOTO intlist\n        \n            open-statement : OPEN expression FOR OUTPUT AS FHANDLE\n        \n            open-statement : OPEN expression AS FHANDLE LEN EQ expression\n        \n            print-statement : PRINT printlist\n                            | PRINT FHANDLE COMMA printlist\n                            | PRINT FHANDLE COMMA USING printlist\n        \n            printlist : empty\n                      | expression\n                      | printlist SEMIC expression\n                      | printlist COMMA expression\n                      | printlist expression\n                      | printlist SEMIC\n                      | printlist COMMA\n        \n            read-statement : READ varlist-complex\n        \n            rem-statement : REM\n        \n            return-statement : RETURN\n        \n            varlist : varlist COMMA VAR\n                    | VAR\n        \n            varlist-complex : varlist-complex COMMA lhs\n                            | lhs\n        '
    
_lr_action_items = {'CLOSE':([0,50,113,214,215,],[27,27,27,27,27,]),'CLS':([0,50,113,214,215,],[28,28,28,28,28,]),'COLOR':([0,50,113,214,215,],[29,29,29,29,29,]),'DATA':([0,50,113,214,215,],[30,30,30,30,30,]),'DEFINT':([0,50,113,214,215,],[31,31,31,31,31,]),'DIM':([0,50,113,214,215,],[32,32,32,32,32,]),'END':([0,50,113,214,215,],[33,33,33,33,33,]),'FIELD':([0,50,113,214,215,],[34,34,34,34,34,]),'FOR':([0,50,58,59,72,89,96,113,144,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,247,248,],[35,35,-96,-97,-40,-71,150,35,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,35,35,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,-53,-54,]),'GET':([0,50,113,214,215,],[37,37,37,37,37,]),'GOSUB':([0,50,113,214,215,],[38,38,38,38,38,]),'GOTO':([0,50,58,59,71,72,89,95,113,144,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,247,248,],[39,39,-96,-97,114,-40,-71,149,39,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,39,39,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,-53,-54,]),'IF':([0,50,113,214,215,],[40,40,40,40,40,]),'INPUT':([0,50,113,214,215,],[41,41,41,41,41,]),'LOCATE':([0,50,113,214,215,],[42,42,42,42,42,]),'NEXT':([0,50,113,214,215,],[43,43,43,43,43,]),'ON':([0,50,113,214,215,],[44,44,44,44,44,]),'OPEN':([0,50,113,214,215,],[45,45,45,45,45,]),'PRINT':([0,50,113,214,215,],[46,46,46,46,46,]),'READ':([0,50,113,214,215,],[47,47,47,47,47,]),'REM':([0,50,113,214,215,],[48,48,48,48,48,]),'RETURN':([0,50,113,214,215,],[49,49,49,49,49,]),'VAR':([0,31,32,35,40,41,43,44,45,46,47,50,51,58,59,67,72,74,88,89,97,99,100,106,107,110,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,245,246,247,248,],[36,61,64,66,89,36,94,89,89,89,36,36,89,-96,-97,89,-40,89,89,-71,89,-108,-109,158,64,89,36,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-70,89,199,36,89,-112,89,89,89,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,89,89,235,89,36,36,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,89,89,-72,89,89,250,89,-53,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,33,36,46,48,49,52,53,54,55,56,57,58,59,60,61,62,63,68,69,70,72,89,91,92,94,97,99,100,101,102,103,144,152,153,154,155,156,157,158,159,161,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,199,200,201,202,205,206,207,208,209,216,217,218,219,220,221,222,223,224,225,226,227,230,233,235,236,237,238,239,240,243,247,248,249,250,251,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-27,-39,-94,-38,-116,-117,-29,-30,-31,-92,-32,-98,-96,-97,-33,-119,-34,-35,-80,-82,-81,-40,-71,-91,-121,-101,-105,-108,-109,-115,-2,-26,-70,-113,-112,-114,-38,-93,-99,-118,-36,-75,-95,-83,-86,-89,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-90,-120,-100,-102,-110,-111,-106,-38,-37,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,-107,-76,-78,-84,-85,-88,-87,-103,-53,-54,-104,-77,-79,]),'COLON':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,33,36,46,48,49,52,53,54,55,56,57,58,59,60,61,62,63,68,69,70,72,89,91,92,94,97,99,100,101,102,103,144,152,153,154,155,156,157,158,159,161,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,199,200,201,202,205,206,207,208,209,216,217,218,219,220,221,222,223,224,225,226,227,230,233,235,236,237,238,239,240,243,247,248,249,250,251,],[50,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-27,-39,-94,-38,-116,-117,-29,-30,-31,-92,-32,-98,-96,-97,-33,-119,-34,-35,-80,-82,-81,-40,-71,-91,-121,-101,-105,-108,-109,-115,-2,-26,-70,-113,-112,-114,-38,-93,-99,-118,-36,-75,-95,-83,50,-89,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-90,-120,-100,-102,-110,-111,-106,-38,-37,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,-107,-76,-78,-84,50,50,-87,-103,-53,-54,-104,-77,-79,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,33,36,46,48,49,52,53,54,55,56,57,58,59,60,61,62,63,68,69,70,72,89,91,92,94,97,99,100,101,102,103,144,152,153,154,155,156,157,158,159,161,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,199,200,201,202,205,206,207,208,209,216,217,218,219,220,221,222,223,224,225,226,227,230,233,235,236,237,238,239,240,243,247,248,249,250,251,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-27,-39,-94,-38,-116,-117,-29,-30,-31,-92,-32,-98,-96,-97,-33,-119,-34,-35,-80,-82,-81,-40,-71,-91,-121,-101,-105,-108,-109,-115,-2,-26,-70,-113,-112,-114,-38,-93,-99,-118,-36,-75,-95,214,215,-89,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-90,-120,-100,-102,-110,-111,-106,-38,-37,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,-107,-76,-78,-84,-85,-88,-87,-103,-53,-54,-104,-77,-79,]),'EQ':([26,36,58,59,66,71,72,89,95,96,100,103,112,130,144,153,163,164,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,232,236,241,242,247,248,249,251,],[51,-94,-96,-97,110,125,-40,-71,125,125,125,125,125,125,-70,125,125,-95,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,125,125,-69,125,-55,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,244,125,125,125,-53,-54,125,125,]),'FHANDLE':([27,34,46,151,231,],[52,65,98,204,243,]),'NUMBER':([27,29,30,37,38,39,40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,104,105,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,210,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[53,55,58,68,69,70,58,58,58,58,58,-96,-97,58,-40,58,58,-71,58,-108,-109,156,58,55,162,58,166,168,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-70,58,201,55,58,-112,58,58,58,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,58,58,234,58,237,240,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,58,58,-72,58,58,58,-53,-54,]),'STRING':([30,40,41,44,45,46,51,58,59,67,72,74,88,89,97,99,100,105,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[59,59,90,59,59,59,59,-96,-97,59,-40,59,59,-71,59,-108,-109,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-70,59,59,-112,59,59,59,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,59,59,59,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,59,59,-72,59,59,59,-53,-54,]),'COMMA':([36,46,54,55,56,57,58,59,60,61,62,63,65,72,89,91,92,93,97,98,99,100,101,111,112,144,152,153,154,155,156,157,158,159,160,161,164,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,196,197,198,200,202,205,206,207,208,209,213,216,217,218,219,220,221,222,223,224,225,226,227,230,233,235,247,248,250,],[-94,-38,104,-92,105,-98,-96,-97,106,-119,107,-35,109,-40,-71,147,-121,148,154,155,-108,-109,147,165,-73,-70,-113,-112,-114,-38,-93,-99,-118,-36,104,210,-95,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,228,229,165,-120,104,-110,-111,154,-38,-37,-74,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,154,-76,-53,-54,-77,]),'LPAREN':([36,40,44,45,46,51,58,59,64,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[67,74,74,74,74,74,-96,-97,108,74,-40,129,74,131,132,133,134,135,136,137,138,139,140,141,142,143,74,145,74,-108,-109,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-70,74,74,-112,74,74,74,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,74,74,74,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,74,74,-72,74,74,74,-53,-54,]),'ABS':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[73,73,73,73,73,-96,-97,73,-40,73,73,-71,73,-108,-109,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-70,73,73,-112,73,73,73,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,73,73,73,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,73,73,-72,73,73,73,-53,-54,]),'ATN':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[75,75,75,75,75,-96,-97,75,-40,75,75,-71,75,-108,-109,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-70,75,75,-112,75,75,75,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,75,75,75,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,75,75,-72,75,75,75,-53,-54,]),'COS':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[76,76,76,76,76,-96,-97,76,-40,76,76,-71,76,-108,-109,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-70,76,76,-112,76,76,76,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,76,76,76,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,76,76,-72,76,76,76,-53,-54,]),'LOG':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[77,77,77,77,77,-96,-97,77,-40,77,77,-71,77,-108,-109,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-70,77,77,-112,77,77,77,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,77,77,77,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,77,77,-72,77,77,77,-53,-54,]),'SGN':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[78,78,78,78,78,-96,-97,78,-40,78,78,-71,78,-108,-109,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-70,78,78,-112,78,78,78,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,78,78,78,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,78,78,-72,78,78,78,-53,-54,]),'SIN':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[79,79,79,79,79,-96,-97,79,-40,79,79,-71,79,-108,-109,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-70,79,79,-112,79,79,79,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,79,79,79,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,79,79,-72,79,79,79,-53,-54,]),'SQR':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[80,80,80,80,80,-96,-97,80,-40,80,80,-71,80,-108,-109,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-70,80,80,-112,80,80,80,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,80,80,80,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,80,80,-72,80,80,80,-53,-54,]),'INT':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[81,81,81,81,81,-96,-97,81,-40,81,81,-71,81,-108,-109,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-70,81,81,-112,81,81,81,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,81,81,81,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,81,81,-72,81,81,81,-53,-54,]),'TAB':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[82,82,82,82,82,-96,-97,82,-40,82,82,-71,82,-108,-109,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-70,82,82,-112,82,82,82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,82,82,82,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,82,82,-72,82,82,82,-53,-54,]),'CVI':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[83,83,83,83,83,-96,-97,83,-40,83,83,-71,83,-108,-109,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-70,83,83,-112,83,83,83,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,83,83,83,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,83,83,-72,83,83,83,-53,-54,]),'CVS':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[84,84,84,84,84,-96,-97,84,-40,84,84,-71,84,-108,-109,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-70,84,84,-112,84,84,84,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,84,84,84,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,84,84,-72,84,84,84,-53,-54,]),'CHR':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[85,85,85,85,85,-96,-97,85,-40,85,85,-71,85,-108,-109,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-70,85,85,-112,85,85,85,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,85,85,85,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,85,85,-72,85,85,85,-53,-54,]),'LEFT':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[86,86,86,86,86,-96,-97,86,-40,86,86,-71,86,-108,-109,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-70,86,86,-112,86,86,86,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,86,86,86,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,86,86,-72,86,86,86,-53,-54,]),'RIGHT':([40,44,45,46,51,58,59,67,72,74,88,89,97,99,100,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,244,246,247,248,],[87,87,87,87,87,-96,-97,87,-40,87,87,-71,87,-108,-109,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-70,87,87,-112,87,87,87,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,87,87,87,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,87,87,-72,87,87,87,-53,-54,]),'MINUS':([40,44,45,46,51,58,59,67,71,72,74,88,89,95,96,97,99,100,103,110,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,154,155,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,207,208,212,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,236,241,242,244,246,247,248,249,251,],[88,88,88,88,88,-96,-97,88,116,-40,88,88,-71,116,116,88,-108,116,116,88,116,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,116,88,88,88,88,88,88,88,88,88,88,88,88,88,-70,88,88,116,88,88,116,88,-56,-57,-58,-59,-60,116,116,116,116,116,116,116,116,-69,116,-55,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,88,88,88,116,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,88,88,-72,88,116,116,116,88,88,-53,-54,116,116,]),'CSRLIN':([42,],[93,]),'SEMIC':([46,58,59,72,89,90,97,99,100,144,152,153,154,155,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,205,206,207,208,216,217,218,219,220,221,222,223,224,225,226,227,230,233,247,248,],[-38,-96,-97,-40,-71,146,152,-108,-109,-70,-113,-112,-114,-38,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-110,-111,152,-38,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,152,-53,-54,]),'RPAREN':([55,58,59,72,89,111,112,130,144,156,160,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,216,217,218,219,220,221,222,223,224,225,226,227,230,241,242,247,248,],[-92,-96,-97,-40,-71,164,-73,184,-70,-93,209,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,216,-55,217,218,219,220,221,222,223,224,225,226,227,230,-74,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,247,248,-53,-54,]),'THEN':([58,59,71,72,89,144,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,216,217,218,219,220,221,222,223,224,225,226,227,230,247,248,],[-96,-97,113,-40,-71,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,-53,-54,]),'PLUS':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,115,-40,-71,115,115,115,115,115,115,-70,115,115,-56,-57,-58,-59,-60,115,115,115,115,115,115,115,115,-69,115,-55,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,115,115,115,-53,-54,115,115,]),'TIMES':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,117,-40,-71,117,117,117,117,117,117,117,117,117,117,117,-58,-59,-60,117,117,117,117,117,117,117,117,-69,117,-55,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,117,117,117,-53,-54,117,117,]),'DIVIDE':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,118,-40,-71,118,118,118,118,118,118,118,118,118,118,118,-58,-59,-60,118,118,118,118,118,118,118,118,-69,118,-55,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,118,118,118,-53,-54,118,118,]),'MOD':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,119,-40,-71,119,119,119,119,119,119,119,119,119,119,119,-58,-59,-60,119,119,119,119,119,119,119,119,-69,119,-55,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,119,119,119,-53,-54,119,119,]),'GT':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,120,-40,-71,120,120,120,120,120,120,-70,120,120,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,120,120,-69,120,-55,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,120,120,120,-53,-54,120,120,]),'GE':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,121,-40,-71,121,121,121,121,121,121,-70,121,121,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,121,121,-69,121,-55,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,121,121,121,-53,-54,121,121,]),'LT':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,122,-40,-71,122,122,122,122,122,122,-70,122,122,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,122,122,-69,122,-55,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,122,122,122,-53,-54,122,122,]),'LE':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,123,-40,-71,123,123,123,123,123,123,-70,123,123,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,123,123,-69,123,-55,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,123,123,123,-53,-54,123,123,]),'NE':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,124,-40,-71,124,124,124,124,124,124,-70,124,124,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,124,124,-69,124,-55,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,124,124,124,-53,-54,124,124,]),'AND':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,126,-40,-71,126,126,126,126,126,126,-70,126,126,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,126,-55,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,126,126,126,-53,-54,126,126,]),'OR':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,127,-40,-71,127,127,127,127,127,127,-70,127,127,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,127,-55,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,127,127,127,-53,-54,127,127,]),'EXPO':([58,59,71,72,89,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,213,216,217,218,219,220,221,222,223,224,225,226,227,230,236,241,242,247,248,249,251,],[-96,-97,128,-40,-71,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-69,128,-55,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,128,128,128,-53,-54,128,128,]),'AS':([58,59,72,89,96,144,162,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,203,216,217,218,219,220,221,222,223,224,225,226,227,230,234,247,248,],[-96,-97,-40,-71,151,-70,211,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,231,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,245,-53,-54,]),'TO':([58,59,72,89,144,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,216,217,218,219,220,221,222,223,224,225,226,227,230,247,248,],[-96,-97,-40,-71,-70,212,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,-53,-54,]),'STEP':([58,59,72,89,144,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,216,217,218,219,220,221,222,223,224,225,226,227,230,236,247,248,],[-96,-97,-40,-71,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-55,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-72,246,-53,-54,]),'OUTPUT':([150,],[203,]),'USING':([155,],[208,]),'LEN':([204,],[232,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,113,214,215,],[1,167,238,239,]),'simple-statement':([0,50,113,214,215,],[2,102,2,2,2,]),'assignment-statement':([0,50,113,214,215,],[3,3,3,3,3,]),'close-statement':([0,50,113,214,215,],[4,4,4,4,4,]),'cls-statement':([0,50,113,214,215,],[5,5,5,5,5,]),'color-statement':([0,50,113,214,215,],[6,6,6,6,6,]),'data-statement':([0,50,113,214,215,],[7,7,7,7,7,]),'defint-statement':([0,50,113,214,215,],[8,8,8,8,8,]),'dim-statement':([0,50,113,214,215,],[9,9,9,9,9,]),'end-statement':([0,50,113,214,215,],[10,10,10,10,10,]),'field-statement':([0,50,113,214,215,],[11,11,11,11,11,]),'for-statement':([0,50,113,214,215,],[12,12,12,12,12,]),'get-statement':([0,50,113,214,215,],[13,13,13,13,13,]),'gosub-statement':([0,50,113,214,215,],[14,14,14,14,14,]),'goto-statement':([0,50,113,214,215,],[15,15,15,15,15,]),'if-statement':([0,50,113,214,215,],[16,16,16,16,16,]),'input-statement':([0,50,113,214,215,],[17,17,17,17,17,]),'locate-statement':([0,50,113,214,215,],[18,18,18,18,18,]),'next-statement':([0,50,113,214,215,],[19,19,19,19,19,]),'ongoto-statement':([0,50,113,214,215,],[20,20,20,20,20,]),'open-statement':([0,50,113,214,215,],[21,21,21,21,21,]),'print-statement':([0,50,113,214,215,],[22,22,22,22,22,]),'read-statement':([0,50,113,214,215,],[23,23,23,23,23,]),'rem-statement':([0,50,113,214,215,],[24,24,24,24,24,]),'return-statement':([0,50,113,214,215,],[25,25,25,25,25,]),'lhs':([0,41,47,50,113,147,214,215,],[26,92,92,26,26,200,26,26,]),'intlist':([29,108,149,],[54,160,202,]),'literal-list':([30,],[56,]),'literal':([30,40,44,45,46,51,67,74,88,97,105,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,152,154,155,165,207,208,212,228,229,233,244,246,],[57,72,72,72,72,72,72,72,72,72,157,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'varlist':([31,],[60,]),'dimlist':([32,],[62,]),'dimrhs':([32,107,],[63,159,]),'expression':([40,44,45,46,51,67,74,88,97,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,152,154,155,165,207,208,212,228,229,233,244,246,],[71,95,96,100,103,112,130,144,153,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,112,205,206,100,213,153,100,236,241,242,153,249,251,]),'varlist-complex':([41,47,],[91,101,]),'printlist':([46,155,208,],[97,207,233,]),'empty':([46,155,208,],[99,99,99,]),'exprlist':([67,145,],[111,198,]),'fieldlist':([109,],[161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> simple-statement','statement',1,'p_start','bas.py',526),
  ('statement -> statement COLON simple-statement','statement',3,'p_start','bas.py',527),
  ('simple-statement -> assignment-statement','simple-statement',1,'p_stmt','bas.py',540),
  ('simple-statement -> close-statement','simple-statement',1,'p_stmt','bas.py',541),
  ('simple-statement -> cls-statement','simple-statement',1,'p_stmt','bas.py',542),
  ('simple-statement -> color-statement','simple-statement',1,'p_stmt','bas.py',543),
  ('simple-statement -> data-statement','simple-statement',1,'p_stmt','bas.py',544),
  ('simple-statement -> defint-statement','simple-statement',1,'p_stmt','bas.py',545),
  ('simple-statement -> dim-statement','simple-statement',1,'p_stmt','bas.py',546),
  ('simple-statement -> end-statement','simple-statement',1,'p_stmt','bas.py',547),
  ('simple-statement -> field-statement','simple-statement',1,'p_stmt','bas.py',548),
  ('simple-statement -> for-statement','simple-statement',1,'p_stmt','bas.py',549),
  ('simple-statement -> get-statement','simple-statement',1,'p_stmt','bas.py',550),
  ('simple-statement -> gosub-statement','simple-statement',1,'p_stmt','bas.py',551),
  ('simple-statement -> goto-statement','simple-statement',1,'p_stmt','bas.py',552),
  ('simple-statement -> if-statement','simple-statement',1,'p_stmt','bas.py',553),
  ('simple-statement -> input-statement','simple-statement',1,'p_stmt','bas.py',554),
  ('simple-statement -> locate-statement','simple-statement',1,'p_stmt','bas.py',555),
  ('simple-statement -> next-statement','simple-statement',1,'p_stmt','bas.py',556),
  ('simple-statement -> ongoto-statement','simple-statement',1,'p_stmt','bas.py',557),
  ('simple-statement -> open-statement','simple-statement',1,'p_stmt','bas.py',558),
  ('simple-statement -> print-statement','simple-statement',1,'p_stmt','bas.py',559),
  ('simple-statement -> read-statement','simple-statement',1,'p_stmt','bas.py',560),
  ('simple-statement -> rem-statement','simple-statement',1,'p_stmt','bas.py',561),
  ('simple-statement -> return-statement','simple-statement',1,'p_stmt','bas.py',562),
  ('assignment-statement -> lhs EQ expression','assignment-statement',3,'p_assignment_statement','bas.py',572),
  ('cls-statement -> CLS','cls-statement',1,'p_cls_statement','bas.py',579),
  ('close-statement -> CLOSE','close-statement',1,'p_close_statement','bas.py',587),
  ('close-statement -> CLOSE FHANDLE','close-statement',2,'p_close_statement','bas.py',588),
  ('close-statement -> CLOSE NUMBER','close-statement',2,'p_close_statement','bas.py',589),
  ('color-statement -> COLOR intlist','color-statement',2,'p_color_statement','bas.py',599),
  ('data-statement -> DATA literal-list','data-statement',2,'p_data_statement','bas.py',606),
  ('defint-statement -> DEFINT varlist','defint-statement',2,'p_defint_statement','bas.py',616),
  ('dim-statement -> DIM dimlist','dim-statement',2,'p_dim_statement','bas.py',623),
  ('dimlist -> dimrhs','dimlist',1,'p_dimlist','bas.py',630),
  ('dimlist -> dimlist COMMA dimrhs','dimlist',3,'p_dimlist','bas.py',631),
  ('dimrhs -> VAR LPAREN intlist RPAREN','dimrhs',4,'p_dimrhs','bas.py',641),
  ('empty -> <empty>','empty',0,'p_empty','bas.py',647),
  ('end-statement -> END','end-statement',1,'p_end_statement','bas.py',653),
  ('expression -> literal','expression',1,'p_expression_literal','bas.py',660),
  ('expression -> ABS LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',670),
  ('expression -> ATN LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',671),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',672),
  ('expression -> LOG LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',673),
  ('expression -> SGN LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',674),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',675),
  ('expression -> SQR LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',676),
  ('expression -> INT LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',677),
  ('expression -> TAB LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',678),
  ('expression -> CVI LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',679),
  ('expression -> CVS LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',680),
  ('expression -> CHR LPAREN expression RPAREN','expression',4,'p_expression_function','bas.py',681),
  ('expression -> LEFT LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_function_2','bas.py',710),
  ('expression -> RIGHT LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_function_2','bas.py',711),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','bas.py',728),
  ('expression -> expression PLUS expression','expression',3,'p_expression_twoop','bas.py',735),
  ('expression -> expression MINUS expression','expression',3,'p_expression_twoop','bas.py',736),
  ('expression -> expression TIMES expression','expression',3,'p_expression_twoop','bas.py',737),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_twoop','bas.py',738),
  ('expression -> expression MOD expression','expression',3,'p_expression_twoop','bas.py',739),
  ('expression -> expression GT expression','expression',3,'p_expression_twoop','bas.py',740),
  ('expression -> expression GE expression','expression',3,'p_expression_twoop','bas.py',741),
  ('expression -> expression LT expression','expression',3,'p_expression_twoop','bas.py',742),
  ('expression -> expression LE expression','expression',3,'p_expression_twoop','bas.py',743),
  ('expression -> expression NE expression','expression',3,'p_expression_twoop','bas.py',744),
  ('expression -> expression EQ expression','expression',3,'p_expression_twoop','bas.py',745),
  ('expression -> expression AND expression','expression',3,'p_expression_twoop','bas.py',746),
  ('expression -> expression OR expression','expression',3,'p_expression_twoop','bas.py',747),
  ('expression -> expression EXPO expression','expression',3,'p_expression_twoop','bas.py',748),
  ('expression -> MINUS expression','expression',2,'p_expression_unaryminus','bas.py',799),
  ('expression -> VAR','expression',1,'p_expression_var','bas.py',820),
  ('expression -> VAR LPAREN exprlist RPAREN','expression',4,'p_expression_var_complex','bas.py',828),
  ('exprlist -> expression','exprlist',1,'p_exprlist','bas.py',840),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','bas.py',841),
  ('field-statement -> FIELD FHANDLE COMMA fieldlist','field-statement',4,'p_field_statement','bas.py',856),
  ('fieldlist -> NUMBER AS VAR','fieldlist',3,'p_fieldlist','bas.py',863),
  ('fieldlist -> fieldlist COMMA NUMBER AS VAR','fieldlist',5,'p_fieldlist','bas.py',864),
  ('for-statement -> FOR VAR EQ expression TO expression','for-statement',6,'p_for_statement','bas.py',874),
  ('for-statement -> FOR VAR EQ expression TO expression STEP expression','for-statement',8,'p_for_statement_step','bas.py',881),
  ('get-statement -> GET NUMBER','get-statement',2,'p_get_statement','bas.py',888),
  ('goto-statement -> GOTO NUMBER','goto-statement',2,'p_goto_statement','bas.py',895),
  ('gosub-statement -> GOSUB NUMBER','gosub-statement',2,'p_gosub_statement','bas.py',902),
  ('if-statement -> IF expression THEN NUMBER','if-statement',4,'p_if_statement','bas.py',909),
  ('if-statement -> IF expression THEN NUMBER ELSE NUMBER','if-statement',6,'p_if_statement','bas.py',910),
  ('if-statement -> IF expression THEN NUMBER ELSE statement','if-statement',6,'p_if_statement','bas.py',911),
  ('if-statement -> IF expression THEN statement','if-statement',4,'p_if_statement','bas.py',912),
  ('if-statement -> IF expression THEN statement ELSE NUMBER','if-statement',6,'p_if_statement','bas.py',913),
  ('if-statement -> IF expression THEN statement ELSE statement','if-statement',6,'p_if_statement','bas.py',914),
  ('if-statement -> IF expression GOTO NUMBER','if-statement',4,'p_if_statement_without_then','bas.py',924),
  ('input-statement -> INPUT STRING SEMIC VAR','input-statement',4,'p_input_statement','bas.py',931),
  ('input-statement -> INPUT varlist-complex','input-statement',2,'p_input_statement_multi','bas.py',938),
  ('intlist -> NUMBER','intlist',1,'p_intlist','bas.py',945),
  ('intlist -> intlist COMMA NUMBER','intlist',3,'p_intlist','bas.py',946),
  ('lhs -> VAR','lhs',1,'p_lhs','bas.py',956),
  ('lhs -> VAR LPAREN exprlist RPAREN','lhs',4,'p_lhs','bas.py',957),
  ('literal -> NUMBER','literal',1,'p_literal','bas.py',976),
  ('literal -> STRING','literal',1,'p_literal','bas.py',977),
  ('literal-list -> literal','literal-list',1,'p_literal_list','bas.py',984),
  ('literal-list -> literal-list COMMA literal','literal-list',3,'p_literal_list','bas.py',985),
  ('locate-statement -> LOCATE CSRLIN COMMA NUMBER','locate-statement',4,'p_locate_statement','bas.py',995),
  ('next-statement -> NEXT VAR','next-statement',2,'p_next_statement','bas.py',1002),
  ('ongoto-statement -> ON expression GOTO intlist','ongoto-statement',4,'p_ongoto_statement','bas.py',1009),
  ('open-statement -> OPEN expression FOR OUTPUT AS FHANDLE','open-statement',6,'p_open_statement','bas.py',1016),
  ('open-statement -> OPEN expression AS FHANDLE LEN EQ expression','open-statement',7,'p_open_statement_read','bas.py',1023),
  ('print-statement -> PRINT printlist','print-statement',2,'p_print_statement','bas.py',1030),
  ('print-statement -> PRINT FHANDLE COMMA printlist','print-statement',4,'p_print_statement','bas.py',1031),
  ('print-statement -> PRINT FHANDLE COMMA USING printlist','print-statement',5,'p_print_statement','bas.py',1032),
  ('printlist -> empty','printlist',1,'p_printlist','bas.py',1044),
  ('printlist -> expression','printlist',1,'p_printlist','bas.py',1045),
  ('printlist -> printlist SEMIC expression','printlist',3,'p_printlist','bas.py',1046),
  ('printlist -> printlist COMMA expression','printlist',3,'p_printlist','bas.py',1047),
  ('printlist -> printlist expression','printlist',2,'p_printlist','bas.py',1048),
  ('printlist -> printlist SEMIC','printlist',2,'p_printlist','bas.py',1049),
  ('printlist -> printlist COMMA','printlist',2,'p_printlist','bas.py',1050),
  ('read-statement -> READ varlist-complex','read-statement',2,'p_read_statement','bas.py',1080),
  ('rem-statement -> REM','rem-statement',1,'p_rem_statement','bas.py',1087),
  ('return-statement -> RETURN','return-statement',1,'p_return_statement','bas.py',1094),
  ('varlist -> varlist COMMA VAR','varlist',3,'p_varlist','bas.py',1101),
  ('varlist -> VAR','varlist',1,'p_varlist','bas.py',1102),
  ('varlist-complex -> varlist-complex COMMA lhs','varlist-complex',3,'p_varlist_complex','bas.py',1112),
  ('varlist-complex -> lhs','varlist-complex',1,'p_varlist_complex','bas.py',1113),
]
